PROJECT(CCfits)
CMAKE_MINIMUM_REQUIRED(VERSION 2.8.0)

# Allow the developer to select if Dynamic or Static libraries are built
OPTION (BUILD_SHARED_LIBS "Build Shared Libraries" ON)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}")
set (LIB_DESTINATION "${CMAKE_INSTALL_PREFIX}/lib${LIB_SUFFIX}")
set (BIN_DESTINATION "${CMAKE_INSTALL_PREFIX}/bin")
set (INCLUDE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/include/CCfits")

# Define project version
SET(${PROJECT_NAME}_MAJOR_VERSION 2)
SET(${PROJECT_NAME}_MINOR_VERSION 5)
SET(${PROJECT_NAME}_VERSION ${${PROJECT_NAME}_MAJOR_VERSION}.${${PROJECT_NAME}_MINOR_VERSION})
SET(LIB_NAME CCfits)

# Define
IF(MSVC)
    ADD_DEFINITIONS(-D_CRT_SECURE_NO_DEPRECATE)
ENDIF()

# Dependent on cfitsio for building this library / MN
SET(CFITSIO_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../cfitsio")
INCLUDE_DIRECTORIES(${CFITSIO_INCLUDE_DIR})

SET (LIB_TYPE STATIC)
IF (BUILD_SHARED_LIBS)
  SET (LIB_TYPE SHARED)
ENDIF (BUILD_SHARED_LIBS)

FILE(GLOB H_FILES "*.h")
SET(H_FILES ${H_FILES} CCfits)

SET(SRC_FILES
    AsciiTable.cxx
    BinTable.cxx
    ColumnCreator.cxx
    Column.cxx
    ColumnData.cxx
    ColumnVectorData.cxx
    ExtHDU.cxx
    FITSBase.cxx
    FITS.cxx
    FitsError.cxx
    FITSUtil.cxx
    HDUCreator.cxx
    HDU.cxx
    KeyData.cxx
    KeywordCreator.cxx
    Keyword.cxx
    PHDU.cxx
    Table.cxx
)

ADD_LIBRARY(${LIB_NAME} ${LIB_TYPE} ${H_FILES} ${SRC_FILES})
TARGET_LINK_LIBRARIES(${LIB_NAME} cfitsio)

SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES
    VERSION ${${PROJECT_NAME}_VERSION}
)
install(TARGETS ${LIB_NAME} DESTINATION ${LIB_DESTINATION})
install(FILES ${H_FILES} DESTINATION ${INCLUDE_INSTALL_DIR})
