-- The configuration has an implict
-- require('scripts/configuration_helper.lua')
-- which defines helper functions useful to customize the configuration

return {
    -- Determines which SGCT configuration file is loaded, that is, if there rendering
    -- occurs in a single window, a fisheye projection, or a dome cluster system

    -- A regular 1280x720 window
    SGCTConfig = sgct.config.single{},

    -- SGCTConfig = sgct.config.single{res={1920, 1080}, shared=true},

    -- A regular 1920x1080 window
    -- SGCTConfig = sgct.config.single{1920, 1080},   

    -- A 1k fisheye rendering
    -- SGCTConfig = sgct.config.fisheye{1024, 1024},

    -- A 4k fisheye rendering in a 1024x1024 window
    -- SGCTConfig = sgct.config.fisheye{1024, 1024, res={4096, 4096}, quality="2k", tilt=27},

    --SGCTConfig = "${SGCT}/openvr_oculusRiftCv1.xml",
    --SGCTConfig = "${SGCT}/openvr_htcVive.xml",

    -- Sets the scene that is to be loaded by OpenSpace. A scene file is a description
    -- of all entities that will be visible during an instance of OpenSpace
    Scene = "${SCENE}/default.scene",
    -- Scene = "${SCENE}/globebrowsing.scene",
    -- Scene = "${SCENE}/rosetta.scene",
    -- Scene = "${SCENE}/dawn.scene",
    -- Scene = "${SCENE}/newhorizons.scene",
    -- Scene = "${SCENE}/osirisrex.scene",

    Task = "${TASKS}/default.task",

    Paths = {
        SGCT = "${BASE_PATH}/config/sgct",
        SCRIPTS = "${BASE_PATH}/scripts",
        SHADERS = "${BASE_PATH}/shaders",
        OPENSPACE_DATA = "${BASE_PATH}/data",
        SCENE = "${OPENSPACE_DATA}/scene",
        TASKS = "${OPENSPACE_DATA}/tasks",
        SPICE = "${OPENSPACE_DATA}/spice",
        MODULES = "${BASE_PATH}/modules",
        TESTDIR = "${BASE_PATH}/tests",
        CONFIG = "${BASE_PATH}/config",
        CACHE = "${BASE_PATH}/cache",
        FONTS = "${OPENSPACE_DATA}/fonts",
        DOCUMENTATION = "${BASE_PATH}/documentation"
    },
    Fonts = {
        Mono = "${FONTS}/Droid_Sans_Mono/DroidSansMono.ttf",
        Light = "${FONTS}/Roboto/Roboto-Regular.ttf"
    },
    Logging = {
        -- LogLevel = "Trace",
        LogLevel = "Debug",
        ImmediateFlush = true,
        Logs = {
            { Type = "html", File = "${BASE_PATH}/log.html", Append = false }
        },
        CapabilitiesVerbosity = "Full"
    },
    LuaDocumentation = {
        Type = "html",
        File = "${DOCUMENTATION}/LuaScripting.html"
    },
    PropertyDocumentation = {
        Type = "html",
        File = "${DOCUMENTATION}/Properties.html"
    },
    ScriptLog = {
        Type = "text",
        File = "${BASE_PATH}/ScriptLog.txt"
    },
    KeyboardShortcuts = {
        Type = "html",
        File = "${DOCUMENTATION}/KeyboardMapping.html"
    },
    Documentation = {
        Type = "html",
        File = "${DOCUMENTATION}/Documentation.html"
    },
    FactoryDocumentation = {
        Type = "html",
        File = "${DOCUMENTATION}/FactoryDocumentation.html"
    },
    ShutdownCountdown = 3,
    -- OnScreenTextScaling = "framebuffer",
    -- PerSceneCache = true,
    -- DisableRenderingOnMaster = true,
    KeyDisableSceneOnMaster = true,
    DownloadRequestURL = "http://data.openspaceproject.com/request.cgi",
    RenderingMethod = "Framebuffer",
    OpenGLDebugContext = {
       Activate = true,
       FilterIdentifier = {
           { Type = "Other", Source = "API", Identifier = 131185 }
       },
--      FilterSeverity = { }

    }
    --RenderingMethod = "ABuffer" -- alternative: "Framebuffer"
}
