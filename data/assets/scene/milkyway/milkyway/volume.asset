-- asset.require('../examples/volume/generated/cartesian.asset')

local assetHelper = asset.require("util/asset_helper")
local transforms = asset.require("scene/solarsystem/sun/transforms")

local data = asset.syncedResource({
    Name = "Milkyway Volume Data",
    Type = "HttpSynchronization",
    Identifier = "milkyway_volume_data",
    Version = 1
})

local MilkyWayVolumeGalaxy = {
    Identifier = "Milky Way Volume",
    Parent = transforms.SolarSystemBarycenter.Identifier,
    Renderable = {
        Type = "RenderableGalaxy",
        StepSize = 0.01,
        AbsorptionMultiply = 75,
        EmissionMultiply = 200,
        Translation = {0.2, 0, 0},
        Rotation = {3.1415926, 3.1248, 4.45741},
        Volume = {
            Type = "Volume",
            Filename = data .. "/MilkyWayRGBAVolume1024x1024x128.raw",
            Dimensions = {1024, 1024, 128},
            Size = {1.2E21, 1.2E21, 0.15E21}
        },
        Points = {
            Type = "Points",
            Filename = data .. "/MilkyWayPoints.off",
            EnabledPointsRatio = 0.3,
            Texture = data .. "/halo.png"
        }
    },
    GUI = {
        Path = "/Milky Way"
    }
}

local objects = { MilkyWayVolumeGalaxy }
assetHelper.registerSceneGraphNodesAndExport(asset, objects)