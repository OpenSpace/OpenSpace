local constellations_helper = asset.require("util/constellations_helper")



local speck = asset.resource({
  Name = "Constellation Files",
  Type = "HttpSynchronization",
  Identifier = "digitaluniverse_constellations_data",
  Version = 3
})


local zodiacs = {
  "CNC", "TAU", "PSC", "ARI", "LIB", "AQR", "CAP", "SCO", "VIR", "SGR", "GEM", "LEO"
}

local function zodiacsString(zodiacsList)
  local zodiacsString = "{"
  local isFirst = true

  for k, zodiac in pairs(zodiacsList) do
    local fullName = constellations_helper.findFullName(zodiac)
    if fullName ~= nil then
      if isFirst then
        isFirst = false
      else
        zodiacsString = zodiacsString .. ", "
      end

      zodiacsString = zodiacsString .. [["]] .. fullName .. [["]]
    end
  end

  zodiacsString = zodiacsString .. "}"
  return zodiacsString
end

-- local ConstellationsExtragalactic = {
--   Identifier = "ConstellationsExtragalactic",
--   Renderable = {
--     Type = "RenderableConstellationLines",
--     Enabled = false,
--     Labels = {
--       File = speck .. "constellationsEXGAL.label",
--       Opacity = 0.4,
--       Color = { 0.8, 0.8, 0.8 },
--       Size = 20.0,
--       MinMaxSize = { 20, 30 },
--       Unit = "Mpc"
--     },
--     Opacity = 0.4,
--     File = speck .. "constellationsEXGAL.speck",
--     NamesFile = speck .. "constellations.dat",
--     Colors = { { 0.6, 0.4, 0.4 }, { 0.8, 0.0, 0.0 }, { 0.0, 0.3, 0.8 } },
--     Unit = "Mpc",
--     -- Selection = zodiacs
--   },
--   GUI = {
--     Name = "Constellations (Extragalactic)",
--     Path = "/Milky Way/Constellations"
--   }
-- }

local Constellations = {
  Identifier = "Constellations",
  Renderable = {
    Type = "RenderableConstellationLines",
    Enabled = false,
    Labels = {
      File = speck .. "constellation_lines.label",
      Opacity = 0.3,
      Color = { 0.8, 0.8, 0.8 },
      Size = 14.5,
      MinMaxSize = { 8, 170 },
      Unit = "pc"
    },
    Opacity = 0.3,
    File = speck .. "constellation_lines.speck",
    NamesFile = speck .. "constellations.dat",
    Colors = { { 0.6, 0.4, 0.4 }, { 0.8, 0.0, 0.0 }, { 0.0, 0.3, 0.8 } },
    Unit = "pc",
    DimInAtmosphere = true
  },
  Tag = { "daytime_hidden" },
  GUI = {
    Name = "Constellations",
    Path = "/Milky Way/Constellations",
    Description = [[Lines connecting the stars that make up the constellation figures.]]
  }
}

local zodiacsString = zodiacsString(zodiacs)

-- Actions
local ShowConstellations = {
  Identifier = "os.constellations.ShowConstellations",
  Name = "Show all",
  Command = [[
    openspace.setPropertyValueSingle("Scene.Constellations.Renderable.ConstellationSelection", {})
    openspace.fadeIn("Scene.Constellations.Renderable")
  ]],
  Documentation = "Shows all the constellations lines",
  GuiPath = "/Constellations/Lines",
  IsLocal = false
}

local HideConstellations = {
  Identifier = "os.constellations.HideConstellations",
  Name = "Hide all",
  Command = [[
    openspace.fadeOut("Scene.Constellations.Renderable", nil, "openspace.setPropertyValueSingle('Scene.Constellations.Renderable.Enabled', false); openspace.setPropertyValueSingle('Scene.Constellations.Renderable.ConstellationSelection', {})")
  ]],
  Documentation = "Hides all the constellations lines",
  GuiPath = "/Constellations/Lines",
  IsLocal = false
}

local ShowZodiacs = {
  Identifier = "os.constellation.ShowZodiacs",
  Name = "Show zodiac",
  Command = [[
    openspace.setPropertyValueSingle("Scene.Constellations.Renderable.ConstellationSelection", ]] .. zodiacsString .. [[)
    openspace.fadeIn("Scene.Constellations.Renderable")
  ]],
  Documentation = "Shows the zodiac constellations lines",
  GuiPath = "/Constellations/Lines",
  IsLocal = false
}


asset.onInitialize(function()
  -- openspace.addSceneGraphNode(ConstellationsExtragalactic)
  openspace.addSceneGraphNode(Constellations)

  openspace.action.registerAction(ShowConstellations)
  openspace.action.registerAction(HideConstellations)
  openspace.action.registerAction(ShowZodiacs)
end)

asset.onDeinitialize(function()
  openspace.action.removeAction(ShowZodiacs)
  openspace.action.removeAction(HideConstellations)
  openspace.action.removeAction(ShowConstellations)

  openspace.removeSceneGraphNode(Constellations)
  -- openspace.removeSceneGraphNode(ConstellationsExtragalactic)
end)

-- asset.export(ConstellationsExtragalactic)
asset.export(Constellations)
asset.export("ShowConstellations", ShowConstellations.Identifier)
asset.export("HideConstellations", HideConstellations.Identifier)
asset.export("ShowZodiacs", ShowZodiacs.Identifier)



asset.meta = {
  Name = "Constellation Lines",
  Version = "3.05",
  Description = "Lines connecting the stars that make up the constellation figures.",
  Author = "Brian Abbott, Zack Reeves (AMNH)",
  URL = "https://www.amnh.org/research/hayden-planetarium/digital-universe",
  License = "AMNH Digital Universe"
}
