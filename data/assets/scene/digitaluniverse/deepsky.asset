local assetHelper = asset.require('util/asset_helper')

local textures = asset.syncedResource({
    Name = "Deep Sky Objects Textures",
    Type = "HttpSynchronization",
    Identifier = "digitaluniverse_deepsky_textures",
    Version = 1
})

local speck = asset.syncedResource({
    Name = "Deep Sky Objects Speck Files",
    Type = "HttpSynchronization",
    Identifier = "digitaluniverse_deepsky_speck",
    Version = 1
})

local deepSkyPoints = {
    Identifier = "DeepSkyObjects",
    Renderable = {
        Type = "RenderableBillboardsCloud",
        Enabled = false,
        Color = { 1.0, 1.0, 0.0 },
        Opacity = 0.99,
        ScaleFactor = 500.0,
        File = speck .. "/dso.speck",
        Texture = textures .. "/point3.png",
        --ColorMap = speck .. "/tully.cmap",
        --ColorMap = speck .. "/lss.cmap",
        --ColorOption = { "proximity" },
        --ColorOption = { "prox5Mpc" },
        --ColorRange = { { 1.0, 30.0 } },
        LabelFile = speck .. "/dso.label",
        TextColor = { 0.1, 0.4, 0.6 },
        TextSize = 20.50,
        TextMinSize = 16.0,
        Unit = "Mpc",
        -- Fade in value in the same unit as "Unit"
        --FadeInDistances = { 0.05, 1.0 },
        -- Max size in pixels
        BillboardMaxSize = 8.22,
        BillboardMinSize = 0.0,
        --CorrectionSizeEndDistance = 22.0,
        --CorrectionSizeFactor = 10.45
        EnablePixelSizeControl = true
    },
    Transform = {
        Rotation = {
        Type = "StaticRotation",
            Rotation = { 0, 0, 3.14159265359 }
        }
    },
    GUI = {
        Name = "Deep Sky Objects Points",
        Path = "/Universe/Galaxies"
    }
}

local deepSkyImages = {
    Identifier = "DeepSkyObjectsImages",
    Renderable = {
        Type = "RenderablePlanesCloud",
        Enabled = false,
        Color = { 1.0, 1.0, 1.0 },
        Opacity = 0.99,
        ScaleFactor = 1.0,
        File = speck .. "/dso.speck",
        TexturePath = textures,
        Luminosity = "radius",
        ScaleLuminosity = 0.001,
        Unit = "Mpc",
        -- Fade in value in the same unit as "Unit"
        --FadeInDistances = {0.001, 0.05010},
        PlaneMinSize = 5.0
    },
    Transform = {
        Rotation = {
        Type = "StaticRotation",
            Rotation = {3.14159265359, 3.14159265359, 0 }
        }
    },
    GUI = {
        Name = "Deep Sky Objects Images",
        Path = "/Universe/Galaxies"
    }
}

assetHelper.registerSceneGraphNodesAndExport(asset, { deepSkyPoints, deepSkyImages })
