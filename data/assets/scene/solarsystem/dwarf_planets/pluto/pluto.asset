local assetHelper = asset.require("util/asset_helper")
local transforms = asset.require("./transforms")
asset.require("spice/base")
asset.require("./trail")


local labelsPath = asset.syncedResource({
  Name = "Pluto Labels",
  Type = "HttpSynchronization",
  Identifier = "pluto_labels",
  Version = 1
})

local Pluto = {
  Identifier = "Pluto",
  Parent = transforms.PlutoBarycenter.Identifier,
  Transform = {
    Translation = {
      Type = "SpiceTranslation",
      Target = "PLUTO",
      Observer = "PLUTO BARYCENTER"
    },
    Rotation = {
      Type = "SpiceRotation",
      SourceFrame = "IAU_PLUTO",
      DestinationFrame = "GALACTIC"
    }
  },
  Renderable = {
    Type = "RenderableGlobe",
    Radii = { 1.173E6, 1.173E6, 1.173E6 },
    SegmentsPerPatch = 64,
    Layers = {},
    Labels = {
      Enabled = false,
      FileName = labelsPath .. "pluto.labels",
      AlignmentOption = "Horizontally", -- or Circularly
      FontSize = 20.0,
      Size = 8.5,
      FadeInEnabled = true,
      FadeOutEnabled = true,
      FadeDistances = { 650000.0, 4000000.0 },
      DistanceEPS = 500000.0,
      Color = { 1.0, 1.0, 0.0 }
    }
  },
  Tag = { "planet_solarSystem", "planet_terrestrial" },
  GUI = {
    Path = "/Solar System/Dwarf Planets/Pluto"
  }
}

local PlutoLabel = {
  Identifier = "PlutoLabel",
  Parent = Pluto.Identifier,
  Renderable = {
    Enabled = false,
    Type = "RenderableLabels",
    Text = "Pluto",
    FontSize = 70.0,
    Size = 9.05,
    MinMaxSize = { 1, 100 },
    BlendMode = "Additive",
    OrientationOption = "Camera View Direction"
  },
  Tag = { "solarsystem_labels" },
  GUI = {
    Name = "Pluto Label",
    Path = "/Solar System/Dwarf Planets/Pluto"
  }
}

assetHelper.registerSceneGraphNodesAndExport(asset, { Pluto, PlutoLabel })


asset.meta = {
  Name = "Pluto",
  Version = "1.0",
  Description = [[ Pluto globe, and main planet label.]],
  Author = "OpenSpace Team",
  URL = "http://openspaceproject.com",
  License = "MIT license"
}
