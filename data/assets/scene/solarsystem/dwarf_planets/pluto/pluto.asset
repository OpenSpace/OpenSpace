local assetHelper = asset.require('util/asset_helper')
local transforms = asset.require('./transforms')
asset.require("spice/base")
asset.request('./trail')
local labelsPath = asset.require('./pluto_labels').LabelsPath



local Pluto = {
    Identifier = "Pluto",
    Parent = transforms.PlutoBarycenter.Identifier,
    Transform = {
        Translation = {
            Type = "SpiceTranslation",
            Target = "PLUTO",
            Observer = "PLUTO BARYCENTER",
            Kernels = NewHorizonsKernels
        },
        Rotation = {
            Type = "SpiceRotation",
            SourceFrame = "IAU_PLUTO",
            DestinationFrame = "GALACTIC"
        },
        Scale = {
            Type = "StaticScale",
            Scale = 1.0
        }
    },
    Renderable = {
        Type = "RenderableGlobe",
        Radii = { 1.173E6, 1.173E6, 1.173E6 },
        SegmentsPerPatch = 64,
        Layers = {
            ColorLayers = {
                {
                    Identifier = "Greyscale_USGS",
                    Name = "Black & White [USGS]",
                    FilePath = "WMS:https://planetarymaps.usgs.gov/cgi-bin/mapserv?map=/maps/pluto/pluto_simp_cyl.map&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&LAYERS=NEWHORIZONS_PLUTO_MOSAIC&SRS=EPSG:4326&BBOX=-180,-90,360,90",
                    Enabled = true
                }
            }
        },
        Labels = {
            Enable = false,
            FileName = labelsPath .. "/pluto.labels",
            LabelAlignmentOption = "Horizontally", -- or Circularly
            LabelsFontSize = 14.0,
            LabelsSize = 8.0,
            LabelsMinSize = 1.0,
            LabelsMaxSize = 1500.0,
            ProximityEnabled = false,
            LabelsFadeInEnabled = true,
            FadeInStartingDistance = 500000.0,
            FadeOutStartingDistance = 1000000.0,
            LabelsForceDomeRendering = true,
            LabelsDistanceEPS = 1350000.0,
            LabelsColor = {1.0, 1.0, 0.0, 1.0}
        }
    },
    Tag = { "planet_solarSystem", "planet_terrestrial" },
    GUI = {
        Path = "/Solar System/Dwarf Planets/Pluto"
    }
}



assetHelper.registerSceneGraphNodesAndExport(asset, { Pluto })
