local sunTransforms = asset.require("scene/solarsystem/sun/transforms")
local coreKernels = asset.require("spice/core")



local SunCentricFrameKernels = asset.resource({
  Name = "Sun Centric Frame Kernels",
  Type = "HttpSynchronization",
  Identifier = "suncentric_frame_kernels",
  Version = 1
})

local HeliocentricEarthEquatorial180  = {
  Identifier = "HeliocentricEarthEquatorial180",
  Parent = sunTransforms.SunCenter.Identifier,
  Transform = {
    Rotation = {
      Type = "SpiceRotation",
      SourceFrame = "HEEQ180",
      DestinationFrame = coreKernels.Frame.Galactic
    }
  },
  GUI = {
    Name = "Heliocentric Earth Equatorial 180",
    Path = "/Solar System/Sun",
    Description = [[      -  X-Y plane is the solar equator of date, therefore, the +Z axis
          is the primary vector and it is aligned to the Sun's north pole
          of date.

      -  +X axis is defined by the intersection between the Sun equatorial
          plane and the solar central meridian of date as seen from the Earth.
          The solar central meridian of date is defined as the meridian of the
          Sun that is turned toward the Earth. Therefore, +X axis is the
          component of the Sun-Earth vector that is orthogonal to the +Z axis.

      -  +Y axis completes the right-handed system.

      -  the origin of this frame is the Sun's center of mass.]],
    Hidden = true
  }
}

local HeliocentricEarthEquatorial = {
  Identifier = "HeliocentricEarthEquatorial",
  Parent = sunTransforms.SunCenter.Identifier,
  Transform = {
    Rotation = {
      Type = "SpiceRotation",
      SourceFrame = "HEEQ",
      DestinationFrame = coreKernels.Frame.Galactic
    }
  },
  GUI = {
    Name = "Heliocentric Earth Equatorial",
    Path = "/Solar System/Sun",
    Description = [[      -  X-Y plane is the solar equator of date, therefore, the +Z axis
         is the primary vector and it is aligned to the Sun's north pole
         of date.

      -  +X axis is defined by the intersection between the Sun equatorial
         plane and the solar central meridian of date as seen from the Earth.
         The solar central meridian of date is defined as the meridian of the
         Sun that is turned toward the Earth. Therefore, +X axis is the
         component of the Sun-Earth vector that is orthogonal to the +Z axis.

      -  +Y axis completes the right-handed system.

      -  the origin of this frame is the Sun's center of mass.]],
    Hidden = true
  }
}

local HeliocentricEarthEcliptic = {
  Identifier = "HeliocentricEarthEcliptic",
  Parent = sunTransforms.SunCenter.Identifier,
  Transform = {
    Rotation = {
      Type = "SpiceRotation",
      SourceFrame = "HEE",
      DestinationFrame = coreKernels.Frame.Galactic
    }
  },
  GUI = {
    Name = "Heliocentric Earth Ecliptic",
    Path = "/Solar System/Sun",
    Description = [[      -  X-Y plane is defined by the Earth Mean Ecliptic plane of date,
         therefore, the +Z axis is the primary vector,and it defined as
         the normal vector to the Ecliptic plane that points toward the
         north pole of date \n

      -  +X axis is the component of the Sun-Earth vector that is
         orthogonal to the +Z axis.

      -  +Y axis completes the right-handed system.

      -  the origin of this frame is the Sun's center of mass.]],
    Hidden = true
  }
}


asset.onInitialize(function()
  openspace.spice.loadKernel(SunCentricFrameKernels .. "HEEQ180.tf")
  openspace.spice.loadKernel(SunCentricFrameKernels .. "HEEQ.tf")
  openspace.spice.loadKernel(SunCentricFrameKernels .. "HEE.tf")
  openspace.addSceneGraphNode(HeliocentricEarthEquatorial180)
  openspace.addSceneGraphNode(HeliocentricEarthEquatorial)
  openspace.addSceneGraphNode(HeliocentricEarthEcliptic)
end)

asset.onDeinitialize(function()
  openspace.removeSceneGraphNode(HeliocentricEarthEcliptic)
  openspace.removeSceneGraphNode(HeliocentricEarthEquatorial)
  openspace.removeSceneGraphNode(HeliocentricEarthEquatorial180)
  openspace.spice.unloadKernel(SunCentricFrameKernels .."HEE.tf")
  openspace.spice.unloadKernel(SunCentricFrameKernels .."HEEQ.tf")
  openspace.spice.unloadKernel(SunCentricFrameKernels .."HEEQ180.tf")
end)

asset.export(HeliocentricEarthEquatorial180)
asset.export(HeliocentricEarthEquatorial)
asset.export(HeliocentricEarthEcliptic)



asset.meta = {
  Name = "Sun Transform, HEE, HEEQ and HEEQ180",
  Description = "Sun transform: HEE, HEEQ and HEEQ180",
  Author = "CCMC",
  URL = "http://openspaceproject.com",
  License = "MIT license"
}
