local transforms = asset.require("./transforms")
local sunTransforms = asset.require("scene/solarsystem/sun/transforms")
local spice = asset.require("./spice")
local base = asset.require("spice/base")



local textures = asset.resource({
  Name = "Charon Textures",
  Type = "HttpSynchronization",
  Identifier = "charon_textures",
  Version = 3
})


local CharonRadius = 603500

local CharonProjection = {
  Identifier = "CharonProjection",
  Parent = transforms.PlutoBarycenterAccurate.Identifier,
  Transform = {
    Translation = {
      Type = "SpiceTranslation",
      Target = spice.ID.Charon,
      Observer = spice.ID.PlutoBarycenter
    },
    Rotation = {
      Type = "SpiceRotation",
      SourceFrame = spice.Frame.Charon,
      DestinationFrame = base.Frame.Galactic
    }
  },
  Renderable = {
    Type = "RenderablePlanetProjection",
    Radius = CharonRadius,
    Segments = 350,
    ColorTexturePaths = {
      textures .. "NH_Charon_mosaic.png",
      textures .. "NH_Charon_mosaic_8192.png"
    },
    HeightTexturePaths = {
      textures .. "NH_Charon_DTM.png",
      textures .. "NH_Charon_DTM_8192.png"
    },
    MeridianShift = true,
    Projection = {
      Observer = spice.ID.NewHorizons,
      Target = spice.ID.Charon,
      Aberration = "NONE",
      AspectRatio = 2,
      Instrument = {
        Name = spice.Frame.Lorri,
        Method = "ELLIPSOID",
        Aberration = "NONE",
        Fovy = 0.2907,
        Aspect = 1,
        Near = 0.2,
        Far = 10000
      },
      PotentialTargets = {
        spice.ID.Pluto,
        spice.ID.Charon
      }
    }
  },
  GUI = {
    Path = "/Solar System/Dwarf Planets/Pluto",
    Name = "Charon Projection"
  }
}

local CharonText = {
  Identifier = "CharonText",
  Parent = CharonProjection.Identifier,
  Transform = {
    Translation = {
      Type = "StaticTranslation",
      Position = { 0, -1000000.0, 0 }
    }
  },
  Renderable = {
    Type = "RenderablePlaneImageLocal",
    Size = 19952623.15,
    Origin = "Center",
    Billboard = true,
    Texture = textures .. "Charon-Text.png",
    BlendMode = "Additive"
  },
  GUI = {
    Name = "Charon Text",
    Path = "/Solar System/Dwarf Planets/Pluto"
  }
}

local CharonShadow = {
  Identifier = "CharonShadow",
  Parent = CharonProjection.Identifier,
  Renderable = {
    Type = "RenderableShadowCylinder",
    Opacity = 0.25,
    TerminatorType = "PENUMBRAL",
    LightSource = base.ID.Sun,
    Observer = spice.ID.NewHorizons,
    Body = spice.ID.Charon,
    BodyFrame = spice.Frame.Charon,
    Aberration = "NONE"
  },
  GUI = {
    Name = "Charon Shadow",
    Path = "/Solar System/Dwarf Planets/Pluto"
  }
}


asset.onInitialize(function()
  openspace.addSceneGraphNode(CharonProjection)
  openspace.addSceneGraphNode(CharonText)
  openspace.addSceneGraphNode(CharonShadow)
end)

asset.onDeinitialize(function()
  openspace.removeSceneGraphNode(CharonShadow)
  openspace.removeSceneGraphNode(CharonText)
  openspace.removeSceneGraphNode(CharonProjection)
end)

asset.export(CharonProjection)
asset.export(CharonText)
asset.export(CharonShadow)
