-- a11_lem.asset
local assetHelper = asset.require('util/asset_helper')
local sunTransforms = asset.require('scene/solarsystem/sun/transforms')
local moonAsset = asset.require('scene/solarsystem/planets/earth/moon/moon')

local model = asset.require('scene/solarsystem/missions/apollo/lem_model')


local Apollo11Lem = {
    Identifier = "Apollo11Lem",
    Parent = moonAsset.Moon.Identifier,
    Transform = {
        Translation = {
            Type = "GlobeTranslation",
            Globe = moonAsset.Moon.Identifier,
            Longitude = -360+23.47306,
            Latitude = 0.67402,
            Altitude = -1927.65,
            UseHeightMap = false
        },
    },
    GUI = {
        Name = "Apollo 11 Lem Position",
        Path = "/Solar System/Missions/Apollo/11"
    }
}

local Apollo11LemModel = {
    Identifier = "Apollo11LemModel",
    Parent = Apollo11Lem.Identifier,
    Transform = {
         Scale = {
            Type = "StaticScale",
            Scale = 0.24
        }
    },
    Renderable = {
        Type = "RenderableModel",
        Geometry = {
            Type = "MultiModelGeometry",
            GeometryFile = model.modelFolder .. "/LM-2_ver2clean.obj"
        },
        ColorTexture = model.modelFolder .. "/LM-2_ver2clean_u1_v1.jpeg",
        LightSources = assetHelper.getDefaultLightSources(sunTransforms.SolarSystemBarycenter.Identifier)
    },
    GUI = {
        Hidden = false,
        Name = "Apollo 11 Lem",
        Path = "/Solar System/Missions/Apollo/11"
    }
}

assetHelper.registerSceneGraphNodesAndExport(asset, {
    Apollo11Lem,
    Apollo11LemModel
})

asset.onInitialize(function ()
    openspace.setPropertyValueSingle('Scene.Apollo11LemModel.Renderable.RotationVector', { 91.044090,171.229706,111.666664} );
end)
