local asset_helper = asset.require('util/asset_helper')
local earth_transforms = asset.require('scene/solarsystem/planets/earth/transforms')
local sun_transforms = asset.require('scene/solarsystem/sun/transforms')
local kernels = asset.require('./kernels').kernels

local models = asset.syncedResource({
  Name = "Apollo Models",
  Type = "HttpSynchronization",
  Identifier = "apollo_models",
  Version = 4
})

local apolloSpiceId = "-908"

local Apollo8Launch = {
  Identifier = "Apollo8Launch",
  Parent = earth_transforms.EarthIAU.Identifier,
  TimeFrame = {
    Type = "TimeFrameInterval",
    Start = "1968 DEC 21",
    End = "1968 DEC 28"
  },
  Transform = {
    Translation = {
      Type = "SpiceTranslation",
      Target = apolloSpiceId,
      Observer = "EARTH",
      Frame = "IAU_EARTH",
      Kernels = kernels
    }
  },
  GUI = {
    Name = "Apollo 8 Launch Capsule",
    Path = "/Solar System/Missions/Apollo"
  }
}

local Apollo8LaunchModel = {
  Identifier = "Apollo8LaunchModel",
  Parent = Apollo8Launch.Identifier,
  TimeFrame = {
    Type = "TimeFrameInterval",
    Start = "1968 DEC 21",
    End = "1968 DEC 22"
  },
  Transform = {
    Rotation = {
      Type = "StaticRotation",
      Rotation = {0.0, 0.0, -3.1415 / 2}
    }
  },
  Renderable = {
    Type = "RenderableModel",
    GeometryFile = models .. "/ApolloCSM.osmodel",
    ModelScale = 0.0001,
    LightSources = {
      {
        Type = "SceneGraphLightSource",
        Identifier = "Sun",
        Node = sun_transforms.SolarSystemBarycenter.Identifier,
        Intensity = 1.0
      }
    },
    PerformShading = true,
    DisableFaceCulling = true
  },
  GUI = {
    Hidden = true,
    Name = "Apollo 8 Launch Model",
    Path = "/Solar System/Missions/Apollo/8"
  }
}

local list = { Apollo8Launch, Apollo8LaunchModel }

asset_helper.registerSceneGraphNodesAndExport(asset, list)
