local transforms = asset.require("scene/solarsystem/sun/transforms")



local kernels = asset.syncedResource({
  Name = "Dawn Kernels",
  Type = "HttpSynchronization",
  Identifier = "dawn_kernels",
  Version = 2
})

local textures = asset.syncedResource({
  Name = "Ceres Textures",
  Type = "HttpSynchronization",
  Identifier = "ceres_textures",
  Version = 1
})

local Ceres = {
  Identifier = "Ceres",
  Parent = transforms.SolarSystemBarycenter.Identifier,
  Transform = {
    Rotation = {
      Type = "SpiceRotation",
      SourceFrame = "IAU_CERES",
      DestinationFrame = "GALACTIC",
      Kernels = {
        kernels .. "dawn_ceres_v01.tpc",
        kernels .. "sb_ceres_140724.bsp",
        kernels .. "sb_ceres_110211.bsp"
      }
    },
    Translation = {
      Type = "SpiceTranslation",
      Target = "CERES",
      Observer = "SSB",
      Kernels = {
        kernels .. "dawn_ceres_v01.tpc",
        kernels .. "sb_ceres_140724.bsp",
        kernels .. "sb_ceres_110211.bsp"
      }
    }
  },
  Renderable = {
    Type = "RenderableGlobe",
    Radii = { 6.390E5, 6.390E5, 6.390E5 },
    SegmentsPerPatch = 64,
    Layers = {
      ColorLayers = {
        {
          Identifier = "Texture",
          FilePath = textures .. "gray.png",
          Enabled = true
        }
      }
    }
  },
  GUI = {
    Path = "/Solar System/Dwarf Planets/Ceres"
  }
}


local CeresTrail = {
  Identifier = "CeresTrail",
  Parent = transforms.SolarSystemBarycenter.Identifier,
  Renderable = {
    Type = "RenderableTrailOrbit",
    Translation = {
      Type = "SpiceTranslation",
      Target = "CERES",
      Observer = "SSB"
    },
    Color = { 0.7, 0.8, 0.7 },
    StartTime = "2010 JAN 01 00:00:00.000",
    EndTime = "2100 JAN 01 00:00:00.000",
    Period = 1325.0,
    Resolution = 3600 * 24
  },
  GUI = {
    Name = "Ceres Trail",
    Path = "/Solar System/Asteroid Belt/Vesta"
  }
}


asset.onInitialize(function()
  openspace.addSceneGraphNode(Ceres)
  openspace.addSceneGraphNode(CeresTrail)
end)
    
asset.onDeinitialize(function()
  openspace.removeSceneGraphNode(CeresTrail)
  openspace.removeSceneGraphNode(Ceres)
end)
    
asset.export(Ceres)
asset.export(CeresTrail)
