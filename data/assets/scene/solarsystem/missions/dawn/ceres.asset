local assetHelper = asset.require('util/asset_helper')
local transforms = asset.require('scene/solarsystem/sun/transforms')
local kernels = asset.require('./dawn_kernels').Kernels



local textures = asset.syncedResource({
    Name = "Ceres Textures",
    Type = "HttpSynchronization",
    Identifier = "ceres_textures",
    Version = 1
})

local Ceres = {
    Identifier = "Ceres",
    Parent = transforms.SolarSystemBarycenter.Identifier,
    Transform = {
        Rotation = {
            Type = "SpiceRotation",
            SourceFrame = "IAU_CERES",
            DestinationFrame = "GALACTIC",
            Kernels = {
                kernels .. "/dawn_ceres_v01.tpc",
                kernels .. "/sb_ceres_140724.bsp",
                kernels .. "/sb_ceres_110211.bsp"
            }
        },
        Translation = {
            Type = "SpiceTranslation",
            Target = "CERES",
            Observer = "SSB",
            Kernels = {
                kernels .. "/dawn_ceres_v01.tpc",
                kernels .. "/sb_ceres_140724.bsp",
                kernels .. "/sb_ceres_110211.bsp"
            }
        }
    },
    Renderable = {
        Type = "RenderableGlobe",
        Radii = { 6.390E5, 6.390E5, 6.390E5 },
        SegmentsPerPatch = 64,
        Layers = {
            ColorLayers = {
                {
                    Name = "Texture",
                    FilePath = textures .. "/gray.png",
                    Enabled = true
                }
            }
        }
    },
    GUI = {
        Path = "/Solar System/Dwarf Planets/Ceres"
    }
}



assetHelper.registerSceneGraphNodesAndExport(asset, { Ceres })
