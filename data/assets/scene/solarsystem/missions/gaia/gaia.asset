local assetHelper = asset.require('util/asset_helper')
local transforms = asset.require('./transforms')
local sunTransforms = asset.require('scene/solarsystem/sun/transforms')


local textures = asset.syncedResource({
    Name = "Gaia Textures",
    Type = "HttpSynchronization",
    Identifier = "gaia_textures",
    Version = 1
})

local model = asset.syncedResource({
    Name = "Gaia Model",
    Type = "HttpSynchronization",
    Identifier = "gaia_model",
    Version = 1
})


local Gaia = {
    Identifier = "Gaia",
    Parent = transforms.GaiaPosition.Identifier,
    Transform = {
        Rotation = {
            Type = "FixedRotation",
            Attached = "Gaia",
            XAxis = { 1.0, 0.0, 0.0 },
            XAxisOrthogonal = true,
            YAxis = "Sun",
            YAxisInverted = true
        },
        Scale = {
            Type = "StaticScale",
            Scale = 10.0
        }
    },
    -- X Orthogonal 
    Renderable = {
        Type = "RenderableModel",
        Body = "GAIA",
        Geometry = {
            Type = "MultiModelGeometry",
            GeometryFile = model .. "/gaia.obj"
        }, 
        ColorTexture = textures .. "/gaia-baked.png",
        LightSources = {
            {
                Type = "SceneGraphLightSource",
                Identifier = "Sun",
                Node = sunTransforms.SolarSystemBarycenter.Identifier,
                Intensity = 0.3
            },
            {
                Identifier = "Camera",
                Type = "CameraLightSource",
                Intensity = 0.4
            }
        }
    },
    GUI = {
        Name = "Gaia",
        Path = "/Solar System/Missions/Gaia"
    }
}

assetHelper.registerSceneGraphNodesAndExport(asset, { Gaia })
