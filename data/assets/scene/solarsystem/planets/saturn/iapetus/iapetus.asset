local transforms = asset.require("../transforms")
local kernel = asset.require("../kernels").sat375
asset.require("./trail")

local labelsPath = asset.syncedResource({
  Name = "Saturn Labels",
  Type = "HttpSynchronization",
  Identifier = "saturn_labels",
  Version = 1
})

local Iapetus = {
  Identifier = "Iapetus",
  Parent = transforms.SaturnBarycenter.Identifier,
  Transform = {
    Translation = {
      Type = "SpiceTranslation",
      Target = "IAPETUS",
      Observer = "SATURN BARYCENTER",
      Kernels = kernel
    },
    Rotation = {
      Type = "SpiceRotation",
      SourceFrame = "IAU_IAPETUS",
      DestinationFrame = "GALACTIC"
    }
  },
  Renderable = {
    Type = "RenderableGlobe",
    Radii = 734000,
    SegmentsPerPatch = 64,
    Layers = {},
    Labels = {
      Enabled = false,
      FileName = labelsPath .. "iapetus.labels",
      AlignmentOption = "Horizontally", -- or Circularly
      FontSize = 20.0,
      Size = 8.7,
      FadeInEnabled = true,
      FadeOutEnabled = true,
      FadeDistances = { 600000.0, 3500000.0 },
      DistanceEPS = 250000.0,
      Color = { 1.0, 1.0, 0.0 }
    }
  },
  Tag = { "moon_solarSystem", "moon_giants", "moon_saturn" },
  GUI = {
    Name = "Iapetus",
    Path = "/Solar System/Planets/Saturn/Moons",
    Description = "Third largest moon of Saturn"
  }
}

asset.onInitialize(function()
  openspace.addSceneGraphNode(Iapetus)
end)
  
asset.onDeinitialize(function()
  openspace.removeSceneGraphNode(Iapetus)
end)
  
asset.export(Iapetus)



asset.meta = {
    Name = "Iapetus",
    Version = "1.0",
    Description = "Iapetus globe with labels",
    Author = "OpenSpace Team",
    URL = "http://openspaceproject.com",
    License = "MIT license"
}
