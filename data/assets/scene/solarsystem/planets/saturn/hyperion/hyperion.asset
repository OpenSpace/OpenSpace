local transforms = asset.require('../transforms')
local assetHelper = asset.require('util/asset_helper')
local kernel = asset.require('../kernels').sat375
asset.require('./trail')
local labelsPath = asset.require('../saturn_globelabels').LabelsPath

local Hyperion = {
    Identifier = "Hyperion",
    Parent = transforms.SaturnBarycenter.Identifier,
    Transform = {
        Translation = {
            Type = "SpiceTranslation",
            Target = "HYPERION",
            Observer = "SATURN BARYCENTER",
            Kernels = kernel
        }
        --[[
         The IAU report does not give an orientation model for Hyperion.
         Hyperion's rotation is in chaotic and is not predictable for
         long periods.
        ]]--
    },
    Renderable = {
        Type = "RenderableGlobe",
        Radii = { 360200, 266000, 205400},
        SegmentsPerPatch = 64,
        Layers = {},
        Labels = {
            Enable = false,
            FileName = labelsPath .. "/hyperion.labels",
            LabelAlignmentOption = "Horizontally", -- or Circularly
            LabelsFontSize = 14.0,
            LabelsSize = 8.0,
            LabelsMinSize = 1.0,
            LabelsMaxSize = 1500.0,
            ProximityEnabled = false,
            LabelsFadeInEnabled = true,
            FadeInStartingDistance = 500000.0,
            FadeOutStartingDistance = 1000000.0,
            LabelsForceDomeRendering = true,
            LabelsDistanceEPS = 1350000.0,
            LabelsColor = { 1.0, 1.0, 0.0 }
        }
    },
    Tag = { "moon_solarSystem", "moon_giants", "moon_saturn" },
    GUI = {
        Name = "Hyperion",
        Path = "/Solar System/Planets/Saturn/Moons"
    }
}

assetHelper.registerSceneGraphNodesAndExport(asset, { Hyperion })


asset.meta = {
    Name = "Hyperion",
    Version = "1.0",
    Description = [[ Hyperion globe with labels]],
    Author = "OpenSpace Team",
    URL = "http://openspaceproject.com",
    License = "MIT license",
    Identifiers = {"Hyperion"}
}
