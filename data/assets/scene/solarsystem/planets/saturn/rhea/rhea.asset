asset.require("./trail")
local transforms = asset.require("../transforms")
local kernels = asset.require("../kernels")
local coreKernels = asset.require("spice/core")



local labelsPath = asset.resource({
  Name = "Saturn Labels",
  Type = "HttpSynchronization",
  Identifier = "saturn_labels",
  Version = 1
})


local Rhea = {
  Identifier = "Rhea",
  Parent = transforms.SaturnBarycenter.Identifier,
  Transform = {
    Translation = {
      Type = "SpiceTranslation",
      Target = kernels.ID.Rhea,
      Observer = coreKernels.ID.SaturnBarycenter
    },
    Rotation = {
      Type = "SpiceRotation",
      SourceFrame = kernels.Frame.Rhea,
      DestinationFrame = coreKernels.Frame.Galactic
    }
  },
  Renderable = {
    Type = "RenderableGlobe",
    Radii = 765000,
    Labels = {
      Enabled = false,
      FileName = labelsPath .. "rhea.labels",
      AlignmentOption = "Horizontally", -- or Circularly
      FontSize = 20.0,
      Size = 9.0,
      FadeInEnabled = true,
      FadeOutEnabled = true,
      FadeDistances = { 500000.0, 2500000.0 },
      DistanceEPS = 250000.0,
      Color = { 1.0, 1.0, 0.0 }
    }
  },
  Tag = { "moon_solarSystem", "moon_giants", "moon_saturn" },
  GUI = {
    Name = "Rhea",
    Path = "/Solar System/Planets/Saturn/Major Moons/Rhea",
    Description = "Second largest moon of Saturn"
  }
}

local RheaLabel = {
  Identifier = "RheaLabel",
  Parent = Rhea.Identifier,
  Renderable = {
    Type = "RenderableLabel",
    Enabled = false,
    Text = "Rhea",
    FontSize = 70.0,
    Size = 6.0,
    MinMaxSize = { 1, 25 },
    OrientationOption = "Camera View Direction",
    BlendMode = "Normal",
    EnableFading = true,
    FadeUnit = "Gm",
    FadeDistances = { 0.3, 10.0 },
    FadeWidths = { 0.15, 10.0 }
  },
  Tag = { "solarsystem_labels", "moon_labels", "major_moon_labels", "moon_major_saturn" },
  GUI = {
    Name = "Rhea Label",
    Path = "/Solar System/Planets/Saturn/Major Moons/Rhea",
    Description = "Label for Saturn's moon Rhea"
  }
}


asset.onInitialize(function()
  openspace.addSceneGraphNode(Rhea)
  openspace.addSceneGraphNode(RheaLabel)
end)

asset.onDeinitialize(function()
  openspace.removeSceneGraphNode(RheaLabel)
  openspace.removeSceneGraphNode(Rhea)
end)

asset.export(Rhea)
asset.export(RheaLabel)



asset.meta = {
  Name = "Rhea",
  Description = "Rhea globe with labels",
  Author = "OpenSpace Team",
  URL = "http://openspaceproject.com",
  License = "MIT license"
}
