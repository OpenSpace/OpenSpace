local transforms = asset.require('./transforms')
local assetHelper = asset.require('util/asset_helper')
asset.require("spice/base")
asset.require('./trail')

local textures = asset.syncedResource({
    Type = "HttpSynchronization",
    Name = "Saturn textures",
    Identifier = "saturn_textures",
    Version = 3
})

local Saturn = {
    Identifier = "Saturn",
    Parent = transforms.SaturnBarycenter.Identifier,
    Transform = {
        Rotation = {
            Type = "SpiceRotation",
            SourceFrame = "IAU_SATURN",
            DestinationFrame = "GALACTIC"
        }
    },
    Renderable = {
        Type = "RenderableGlobe",
        Radii = { 60268000, 60268000, 54364000 },
        SegmentsPerPatch = 64,
        Layers = {},
        Rings = {
            Texture = textures .. "/saturn_rings.png",
            Size = 140445000,
            Offset = { 74500 / 140445.100671159, 1.0 }, -- min / max extend
        },
        Shadows = {
            Enabled = true,
            DistanceFraction = 40.0
        } 
    },
    Tag = { "planet_solarSystem", "planet_giants" },
    GUI = {
        Path = "/Solar System/Planets/Saturn"
    }
}

local SaturnLabel = {
    Identifier = "SaturnLabel",
    Parent = Saturn.Identifier,
    Renderable = {
        Enabled = false,
        Type = "RenderableLabels",
        LabelText = "Saturn",
        FontSize = 100.0,
        LabelSize = 8.7,
        LabelMaxSize = 100.0,
        LabelMinSize = 1.0,
        BlendMode = "Additive",
        LabelOrientationOption = "Camera View Direction"
    },
    Tag = { "solarsystem_labels" },
    GUI = {
        Name = "Saturn Label",
        Path = "/Solar System/Planets/Saturn"
    }
}

assetHelper.registerSceneGraphNodesAndExport(asset, { Saturn, SaturnLabel })
