local transforms = asset.require('./transforms')
local assetHelper = asset.require('util/asset_helper')
asset.require("spice/base")
asset.request('./trail')



local textures = asset.syncedResource({
    Type = "HttpSynchronization",
    Name = "Saturn textures",
    Identifier = "saturn_textures",
    Version = 3
})

local Saturn = {
    Identifier = "Saturn",
    Parent = transforms.SaturnBarycenter.Identifier,
    Transform = {
        Rotation = {
            Type = "SpiceRotation",
            SourceFrame = "IAU_SATURN",
            DestinationFrame = "GALACTIC"
        },
        Scale = {
            Type = "StaticScale",
            Scale = 1.0
        }
    },
    Renderable = {
        Type = "RenderableGlobe",
        Radii = { 60268000, 60268000, 54364000 },
        SegmentsPerPatch = 64,
        Layers = {
            ColorLayers = {
                {
                    Identifier = "Texture",
                    FilePath = textures .. "/saturn.jpg",
                    Enabled = true
                }
            }
        }
    },
    Tag = { "planet_solarSystem", "planet_giants" },
    GUI = {
        Path = "/Solar System/Planets/Saturn"
    }
}

local SaturnRings = {
    Identifier = "SaturnRings",
    Parent = Saturn.Identifier,
    Renderable = {
        Type = "RenderableRings",
        Texture = textures .. "/saturn_rings.png",
        Size = 140445000,
        Offset = { 74500 / 140445.100671159, 1.0 } -- min / max extend
    },
    GUI = {
        Name = "Saturn Rings",
        Path = "/Solar System/Planets/Saturn"
    }
}



assetHelper.registerSceneGraphNodesAndExport(asset, { Saturn, SaturnRings })
