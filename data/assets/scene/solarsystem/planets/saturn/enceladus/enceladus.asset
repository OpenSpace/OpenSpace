local transforms = asset.require('../transforms')
local assetHelper = asset.require('util/asset_helper')
local kernel = asset.require('../kernels').sat375
asset.require('./trail')
local labelsPath = asset.require('../saturn_globelabels').LabelsPath

local Enceladus = {
  Identifier = "Enceladus",
  Parent = transforms.SaturnBarycenter.Identifier,
  Transform = {
    Translation = {
      Type = "SpiceTranslation",
      Target = "ENCELADUS",
      Observer = "SATURN BARYCENTER",
      Kernels = kernel
    },
    Rotation = {
      Type = "SpiceRotation",
      SourceFrame = "IAU_ENCELADUS",
      DestinationFrame = "GALACTIC"
    }
  },    
  Renderable = {
    Type = "RenderableGlobe",
    Radii = 252000,
    SegmentsPerPatch = 64,
    Layers = {},
    Labels = {
      Enabled = false,
      FileName = labelsPath .. "/enceladus.labels",
      AlignmentOption = "Horizontally", -- or Circularly
      FontSize = 20.0,
      Size = 8.1,
      FadeInEnabled = true,
      FadeOutEnabled = true,
      FadeDistances = { 300000.0, 1000000.0 },
      DistanceEPS = 100000.0,
      Color = { 1.0, 1.0, 0.0 }
    }
  },
  Tag = { "moon_solarSystem", "moon_giants", "moon_saturn" },
  GUI = {
    Name = "Enceladus",
    Path = "/Solar System/Planets/Saturn/Moons",
    Description = [[ Enceladus globe with labels]]
  }
}

assetHelper.registerSceneGraphNodesAndExport(asset, { Enceladus })


asset.meta = {
    Name = "Enceladus",
    Version = "1.0",
    Description = [[ Enceladus globe with labels and map layers]],
    Author = "OpenSpace Team",
    URL = "http://openspaceproject.com",
    License = "MIT license",
    Identifiers = {"Enceladus"}
}
