local transforms = asset.require('./transforms')
local assetHelper = asset.require('util/asset_helper')
asset.require("spice/base")
asset.require('./trail')
local labelsPath = asset.require('./mars_globelabels').LabelsPath

-- local marsRadii = { 3396190.0, 3396190.0, 3376200.0 }
local marsRadii = { 3396190.0, 3396190.0, 3396190.0 }

local Mars = {
    Identifier = "Mars",
    Parent = transforms.MarsBarycenter.Identifier,
    Transform = {
        Rotation = {
            Type = "SpiceRotation",
            SourceFrame = "IAU_MARS",
            DestinationFrame = "GALACTIC"
        }
    },
    Renderable = {
        Type = "RenderableGlobe",
        Radii = marsRadii,
        SegmentsPerPatch = 90,
        Layers = {},
        Labels = {
            Enable = false,
            FileName = labelsPath .. "/mars.labels",
            LabelAlignmentOption = "Horizontally", -- or Circularly
            LabelsFontSize = 14.0,
            LabelsSize = 8.0,
            LabelsMinSize = 1.0,
            LabelsMaxSize = 1500.0,
            ProximityEnabled = false,
            LabelsFadeInEnabled = true,
            FadeInStartingDistance = 500000.0,
            FadeOutStartingDistance = 1000000.0,
            LabelsForceDomeRendering = true,
            LabelsDistanceEPS = 1350000.0,
            LabelsColor = { 1.0, 1.0, 0.0 }
        }
    },
    Tag = { "planet_solarSystem", "planet_terrestrial" },
    GUI = {
        Path = "/Solar System/Planets/Mars"
    }
}

local MarsLabel = {
    Identifier = "MarsLabel",
    Parent = Mars.Identifier,
    Renderable = {
        Enabled = false,
        Type = "RenderableLabels",
        LabelText = "Mars",
        FontSize = 100.0,
        LabelSize = 8.5,
        LabelMaxSize = 100.0,
        LabelMinSize = 1.0,
        LabelOrientationOption = "Camera View Direction",
        BlendMode = "Additive",
        TransformationMatrix = {
            1.0, 0.0, 0.0, -8.0E6,
            0.0, 1.0, 0.0, 0.0,
            0.0, 0.0, 1.0, 1.0E7,
            0.0, 0.0, 0.0, 1.0
        },
    },
    Tag = { "solarsystem_labels" },
    GUI = {
        Name = "Mars Label",
        Path = "/Solar System/Planets/Mars"
    }
}

assetHelper.registerSceneGraphNodesAndExport(asset, { Mars, MarsLabel })
