local colorLayersPath = "./layers/colorlayers"
local heightLayersPath = "./layers/heightlayers"
local overlaysPath = "./layers/overlays"
    
-- Color layer
local colorLayer = asset.require(colorLayersPath .. "/moc_wa_color_utah") -- TODO: fallback
asset.require(colorLayersPath .. "/moc_wa_color_liu") -- TODO: fallback
asset.require(colorLayersPath .. "/viking_mdim_utah") 
asset.require(colorLayersPath .. "/viking_mdim_sweden") 
asset.require(colorLayersPath .. "/mola_pseudo_color_utah") 
asset.require(colorLayersPath .. "/mola_pseudo_color_sweden") 
asset.require(colorLayersPath .. "/mola_hrsc_utah") 
asset.require(colorLayersPath .. "/mola_hrsc_sweden") 
asset.require(colorLayersPath .. "/themis_ir_day_utah") 
asset.require(colorLayersPath .. "/themis_ir_day_sweden") 
asset.require(colorLayersPath .. "/themis_ir_night_utah") 
asset.require(colorLayersPath .. "/themis_ir_night_sweden")
asset.require(colorLayersPath .. "/ctx_mosaic_utah") 
asset.require(colorLayersPath .. "/ctx_mosaic_sweden") 
asset.require(colorLayersPath .. "/ctx_blended_01")

-- Height layers
asset.require(heightLayersPath .. "/mola")
asset.require(heightLayersPath .. "/mola_europe")
local heightLayer = asset.require(heightLayersPath .. "/mola_utah")

-- Overlays
asset.require(overlaysPath .. "/indices")
asset.require(overlaysPath .. "/size_reference")

-- Set enabled layers (temporary solution)
-- @TODO: do this using a boolean that's passed to the 'asset.require' instead 
asset.onInitialize(function () 
    openspace.setPropertyValueSingle("Scene.Mars.Renderable.Layers.ColorLayers." .. colorLayer.layer.Identifier .. ".Enabled", true)
    openspace.setPropertyValueSingle("Scene.Mars.Renderable.Layers.HeightLayers." .. heightLayer.layer.Identifier .. ".Enabled", true)
end)
