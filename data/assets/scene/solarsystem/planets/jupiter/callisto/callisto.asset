local transforms = asset.require("../transforms")
local assetHelper = asset.require("util/asset_helper")
asset.require("spice/base")
asset.require("./trail")
local kernel = asset.require("../kernels").jup310

local labelsPath = asset.syncedResource({
  Name = "Jupiter Labels",
  Type = "HttpSynchronization",
  Identifier = "jupiter_labels",
  Version = 1
})

local Callisto = {
  Identifier = "Callisto",
  Parent = transforms.JupiterBarycenter.Identifier,
  Transform = {
    Rotation = {
      Type = "SpiceRotation",
      SourceFrame = "IAU_CALLISTO",
      DestinationFrame = "GALACTIC",
      Kernels = kernel
    },
    Translation = {
      Type = "SpiceTranslation",
      Target = "CALLISTO",
      Observer = "JUPITER BARYCENTER",
      Kernels = kernel
    }
  },
  Renderable = {
    Type = "RenderableGlobe",
    Radii = 2410000,
    SegmentsPerPatch = 64,
    Layers = {},
    Labels = {
      Enabled = false,
      FileName = labelsPath .. "callisto.labels",
      AlignmentOption = "Horizontally", -- or Circularly
      FontSize = 20.0,
      Size = 11.5,
      MinMaxSize = { 1, 100 },
      FadeInEnabled = true,
      FadeOutEnabled = true,
      FadeDistances = { 5000000.0, 15000000.0 },
      DistanceEPS = 1350000.0,
      Color = { 1.0, 1.0, 0.0 }
    }
  },
  Tag = { "moon_solarSystem", "moon_giants", "moon_jupiter" },
  GUI = {
    Path = "/Solar System/Planets/Jupiter/Moons"
  }
}

assetHelper.registerSceneGraphNodesAndExport(asset, { Callisto })


asset.meta = {
  Name = "Callisto",
  Version = "1.1",
  Description = [[ Callisto globe with labels.]],
  Author = "OpenSpace Team",
  URL = "http://openspaceproject.com",
  License = "MIT license"
}
