local transforms = asset.require('../transforms')
local assetHelper = asset.require('util/asset_helper')
asset.require("spice/base")
asset.request('./trail')
local kernels = asset.require('../jup310').Kernels



local textures = asset.syncedResource({
    Name = "Callisto Textures",
    Type = "HttpSynchronization",
    Identifier = "callisto_textures",
    Version = 1
})

local Callisto = {
    Identifier = "Callisto",
    Parent = transforms.JupiterBarycenter.Identifier,
    Transform = {
        Rotation = {
            Type = "SpiceRotation",
            SourceFrame = "IAU_CALLISTO",
            DestinationFrame = "GALACTIC",
            Kernels = kernels
        },
        Translation = {
            Type = "SpiceTranslation",
            Target = "CALLISTO",
            Observer = "JUPITER BARYCENTER",
            Kernels = kernels
        }
    },
    Renderable = {
        Type = "RenderableGlobe",
        Radii = 2410000,
        SegmentsPerPatch = 64,
        Layers = {
            ColorLayers = {
                {
                    Identifier = "Texture",
                    FilePath = textures .. "/callisto.jpg",
                    Enabled = true
                }
            }
        }
    },
    Tag = { "moon_solarSystem", "moon_giants", "moon_jupiter" },
    GUI = {
        Path = "/Solar System/Planets/Jupiter/Moons"
    }
}



assetHelper.registerSceneGraphNodesAndExport(asset, { Callisto })
