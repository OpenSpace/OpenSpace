local assetHelper = asset.require('util/asset_helper')
local proceduralGlobes = asset.require('util/procedural_globe')
local transforms = asset.require('../transforms')
local kernel = asset.require('../kernels').jup341



local parentIdentifier = transforms.JupiterBarycenter.Identifier
local parentSpice = "JUPITER BARYCENTER"
local tags = { "moon_solarSystem", "moon_giants", "moon_jupiter", "moon_other" }
local trailColor = { 0.4, 0.3, 0.01 }

local otherGroups = {
    {
        Identifier = "S2003J12",
        Parent = {
            Identifier = parentIdentifier,
            Spice = parentSpice
        },
        Spice = "55066",
        Radii = { 1000, 1000, 1000 },
        Tags = tags,
        GUI = {
            Name = "S/2003 J 12",
            Path = "/Solar System/Planets/Jupiter/Moons/Other Groups"
        },
        TrailColor = trailColor,
        OrbitPeriod = 482.69,
        Kernels = kernel
    },
    {
        Identifier = "S/2003J3",
        Parent = {
            Identifier = parentIdentifier,
            Spice = parentSpice
        },
        Spice = "55061",
        Radii = { 2000, 2000, 2000 },
        Tags = tags,
        GUI = {
            Name = "S/2003 J 3",
            Path = "/Solar System/Planets/Jupiter/Moons/Other Groups"
        },
        TrailColor = trailColor,
        OrbitPeriod = 561.52,
        Kernels = kernel
    },
    {
        Identifier = "S2011J1",
        Parent = {
            Identifier = parentIdentifier,
            Spice = parentSpice
        },
        Spice = "55074",
        Radii = { 1000, 1000, 1000 },
        Tags = tags,
        GUI = {
            Name = "S/2011 J 1",
            Path = "/Solar System/Planets/Jupiter/Moons/Other Groups"
        },
        TrailColor = trailColor,
        OrbitPeriod = 582.22,
        Kernels = kernel
    },
    {
        Identifier = "S2003J19",
        Parent = {
            Identifier = parentIdentifier,
            Spice = parentSpice
        },
        Spice = "55070",
        Radii = { 2000, 2000, 2000 },
        Tags = tags,
        GUI = {
            Name = "S/2003 J 19",
            Path = "/Solar System/Planets/Jupiter/Moons/Other Groups"
        },
        TrailColor = trailColor,
        OrbitPeriod = 699.12,
        Kernels = kernel
    },
    {
        Identifier = "S2003J10",
        Parent = {
            Identifier = parentIdentifier,
            Spice = parentSpice
        },
        Spice = "55065",
        Radii = { 2000, 2000, 2000 },
        Tags = tags,
        GUI = {
            Name = "S/2003 J 10",
            Path = "/Solar System/Planets/Jupiter/Moons/Other Groups"
        },
        TrailColor = trailColor,
        OrbitPeriod = 700.13,
        Kernels = kernel
    },
    {
        Identifier = "S2003J23",
        Parent = {
            Identifier = parentIdentifier,
            Spice = parentSpice
        },
        Spice = "55071",
        Radii = { 2000, 2000, 2000 },
        Tags = tags,
        GUI = {
            Name = "S/2003 J 23",
            Path = "/Solar System/Planets/Jupiter/Moons/Other Groups"
        },
        TrailColor = trailColor,
        OrbitPeriod = 700.54,
        Kernels = kernel
    },
    {
        Identifier = "S2003J9",
        Parent = {
            Identifier = parentIdentifier,
            Spice = parentSpice
        },
        Spice = "55064",
        Radii = { 2000, 2000, 2000 },
        Tags = tags,
        GUI = {
            Name = "S/2003 J 9",
            Path = "/Solar System/Planets/Jupiter/Moons/Other Groups"
        },
        TrailColor = trailColor,
        OrbitPeriod = 752.84,
        Kernels = kernel
    },
    {
        Identifier = "S2003J2",
        Parent = {
            Identifier = parentIdentifier,
            Spice = parentSpice
        },
        Spice = "55060",
        Radii = { 2000, 2000, 2000 },
        Tags = tags,
        GUI = {
            Name = "S/2003 J 2",
            Path = "/Solar System/Planets/Jupiter/Moons/Other Groups"
        },
        TrailColor = trailColor,
        OrbitPeriod = 981.55,
        Kernels = kernel
    }
}



assetHelper.registerSceneGraphNodesAndExport(
    asset,
    proceduralGlobes.createGlobes(otherGroups)
)
