asset.require("./trail")
local transforms = asset.require("../transforms")
local kernels = asset.require("../kernels")
local coreKernels = asset.require("spice/core")



local labelsPath = asset.resource({
  Name = "Jupiter Labels",
  Type = "HttpSynchronization",
  Identifier = "jupiter_labels",
  Version = 1
})


local Ganymede = {
  Identifier = "Ganymede",
  Parent = transforms.JupiterBarycenter.Identifier,
  Transform = {
    Translation = {
      Type = "SpiceTranslation",
      Target = kernels.ID.Ganymede,
      Observer = coreKernels.ID.JupiterBarycenter
    },
    Rotation = {
      Type = "SpiceRotation",
      SourceFrame = kernels.Frame.Ganymede,
      DestinationFrame = coreKernels.Frame.Galactic
    }
  },
  Renderable = {
    Type = "RenderableGlobe",
    Radii = 2631000,
    Labels = {
      Enabled = false,
      FileName = labelsPath .. "ganymede.labels",
      AlignmentOption = "Horizontally", -- or Circularly
      FontSize = 20.0,
      Size = 11.5,
      FadeInEnabled = true,
      FadeOutEnabled = true,
      FadeDistances = { 2250000.0, 8000000.0 },
      DistanceEPS = 1750000.0,
      Color = { 1.0, 1.0, 0.0 }
    }
  },
  Tag = { "moon_solarSystem", "moon_giants", "moon_jupiter", "moon_major_jupiter" },
  GUI = {
    Path = "/Solar System/Planets/Jupiter/Major Moons/Ganymede"
  }
}

local GanymedeLabel = {
  Identifier = "GanymedeLabel",
  Parent = Ganymede.Identifier,
  Renderable = {
    Type = "RenderableLabel",
    Enabled = false,
    Text = "Ganymede",
    FontSize = 70.0,
    Size = 6.0,
    MinMaxSize = { 1, 40 },
    OrientationOption = "Camera View Direction",
    BlendMode = "Additive",
    EnableFading = true,
    FadeUnit = "Gm",
    FadeDistances = { 1.0, 10.0 },
    FadeWidths = { 0.5, 10.0 }
  },
  Tag = { "solarsystem_labels", "moon_labels", "major_moon_labels" },
  GUI = {
    Name = "Ganymede Label",
    Path = "/Solar System/Planets/Jupiter/Major Moons/Ganymede",
    Description = "Label for Jupiter's moon Ganymede"
  }
}


asset.onInitialize(function()
  openspace.addSceneGraphNode(Ganymede)
  openspace.addSceneGraphNode(GanymedeLabel)
end)

asset.onDeinitialize(function()
  openspace.removeSceneGraphNode(GanymedeLabel)
  openspace.removeSceneGraphNode(Ganymede)
end)

asset.export(Ganymede)
asset.export(GanymedeLabel)



asset.meta = {
  Name = "Ganymede",
  Description = "Ganymede globe with labels",
  Author = "OpenSpace Team",
  URL = "http://openspaceproject.com",
  License = "MIT license"
}
