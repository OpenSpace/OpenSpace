local transforms = asset.require('../transforms')
local assetHelper = asset.require('util/asset_helper')
asset.require("spice/base")
asset.require('./trail')
local kernel = asset.require('../kernels').jup310
local labelsPath = asset.require('../jupiter_globelabels').LabelsPath

local Europa = {
    Identifier = "Europa",
    Parent = transforms.JupiterBarycenter.Identifier,
    Transform = {
        Rotation = {
            Type = "SpiceRotation",
            SourceFrame = "IAU_EUROPA",
            DestinationFrame = "GALACTIC",
            Kernels = kernel
        },
        Translation = {
            Type = "SpiceTranslation",
            Target = "EUROPA",
            Observer = "JUPITER BARYCENTER",
            Kernels = kernel
        }
    },
    Renderable = {
        Type = "RenderableGlobe",
        Radii = 1560800,
        SegmentsPerPatch = 64,
        Layers = {},
        Labels = {
            Enable = false,
            FileName = labelsPath .. "/europa.labels",
            LabelAlignmentOption = "Horizontally", -- or Circularly
            LabelsFontSize = 40.0,
            LabelsSize = 10.5,
            LabelsMinSize = 1.0,
            LabelsMaxSize = 1500.0,
            ProximityEnabled = false,
            LabelsFadeInEnabled = true,
            FadeInStartingDistance = 15000000.0,
            FadeOutStartingDistance = 1000000.0,
            LabelsForceDomeRendering = true,
            LabelsDistanceEPS = 1350000.0,
            LabelsColor = { 1.0, 1.0, 0.0 }
        }
    },
    Tag = { "moon_solarSystem", "moon_giants", "moon_jupiter" },
    GUI = {
        Path = "/Solar System/Planets/Jupiter/Moons"
    }
}



assetHelper.registerSceneGraphNodesAndExport(asset, { Europa })
