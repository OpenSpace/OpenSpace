local transforms = asset.require('./transforms')
local assetHelper = asset.require('util/asset_helper')
asset.require("spice/base")
asset.require('./trail')

local Jupiter = {
    Identifier = "Jupiter",
    Parent = transforms.JupiterBarycenter.Identifier,
    Transform = {
        Rotation = {
            Type = "SpiceRotation",
            SourceFrame = "IAU_JUPITER",
            DestinationFrame = "GALACTIC"
        }
    },
    Renderable = {
        Type = "RenderableGlobe",
        Radii = { 71492000.0, 71492000.0, 66854000.0 },
        SegmentsPerPatch = 64,
        Layers = {},
        ShadowGroup = {
            Source1 = {
                Name = "Sun",
                -- All radius in meters
                Radius = 696.3E6
            },
            Caster1 = {
                Name = "Ganymede",
                -- All radius in meters
                Radius = 2631000
            },
            Caster2 = {
                Name = "Io",
                -- All radius in meters
                Radius = 1821600
            },
            Caster3 = {
                Name = "Europa",
                -- All radius in meters
                Radius = 1560800
            },
            Caster4 = {
                Name = "Callisto",
                -- All radius in meters
                Radius = 2410000
            },
        }
    },
    Tag = { "planet_solarSystem", "planet_giants" },
    GUI = {
        Path = "/Solar System/Planets/Jupiter"
    }
}

local JupiterLabel = {
    Identifier = "JupiterLabel",
    Parent = Jupiter.Identifier,
    Renderable = {
        Enabled = false,
        Type = "RenderableLabels",
        LabelText = "Jupiter",
        FontSize = 100.0,
        LabelSize = 8.6,
        LabelMaxSize = 100.0,
        LabelMinSize = 1.0,
        LabelOrientationOption = "Camera View Direction",
        BlendMode = "Additive"
    },
    Tag = { "solarsystem_labels" },
    GUI = {
        Name = "Jupiter Label",
        Path = "/Solar System/Planets/Jupiter"
    }
}

assetHelper.registerSceneGraphNodesAndExport(asset, { Jupiter, JupiterLabel })


asset.meta = {
    Name = "Jupiter",
    Version = "1.0",
    Description = [[ Jupiter globe, and main planet label.]],
    Author = "OpenSpace Team",
    URL = "http://openspaceproject.com",
    License = "MIT license",
    Identifiers = {"Jupiter", "JupiterLabel"}
}
