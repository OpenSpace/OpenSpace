local transforms = asset.require('./transforms')
local assetHelper = asset.require('util/asset_helper')
asset.require("spice/base")
asset.request('./trail')



local textures = asset.syncedResource({
    Name = "Jupiter Textures",
    Type = "HttpSynchronization",
    Identifier = "jupiter_textures",
    Version = 1
})

local Jupiter = {
    Identifier = "Jupiter",
    Parent = transforms.JupiterBarycenter.Identifier,
    Transform = {
        Rotation = {
            Type = "SpiceRotation",
            SourceFrame = "IAU_JUPITER",
            DestinationFrame = "GALACTIC"
        },
        Scale = {
            Type = "StaticScale",
            Scale = 1.0
        }
    },
    Renderable = {
        Type = "RenderableGlobe",
        Radii = { 71492000.0, 71492000.0, 66854000.0 },
        SegmentsPerPatch = 64,
        Layers = {
            ColorLayers = {
                {
                    Identifier = "Texture",
                    FilePath = textures .. "/jupiter.jpg",
                    Enabled = true
                }
            }
        }
    },
    Tag = { "planet_solarSystem", "planet_giants" },
    GUI = {
        Path = "/Solar System/Planets/Jupiter"
    }
}



assetHelper.registerSceneGraphNodesAndExport(asset, { Jupiter })
