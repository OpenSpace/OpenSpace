local transforms = asset.require("../transforms")
local kernel = asset.require("../kernels").nep097
asset.require("./trail")

local Triton = {
  Identifier = "Triton",
  Parent = transforms.NeptuneBarycenter.Identifier,
  Transform = {
    Rotation = {
      Type = "SpiceRotation",
      SourceFrame = "IAU_TRITON",
      DestinationFrame = "GALACTIC",
      Kernels = kernel
    },
    Translation = {
      Type = "SpiceTranslation",
      Target = "TRITON",
      Observer = "NEPTUNE BARYCENTER",
      Kernels = kernel
    }
  },
  Renderable = {
    Type = "RenderableGlobe",
    Radii = { 2709000, 2706000, 2705000 },
    SegmentsPerPatch = 64,
    Layers = {},
  },
  Tags = { "moon_solarSystem", "moon_giants", "moon_neptune" },
  GUI = {
    Name = "Triton",
    Path = "/Solar System/Planets/Neptune/Major Moons/Triton"
  }
}

TritonLabel = {
  Identifier = Triton.Identifier .. "Label",
  Parent = Triton.Identifier,
  Renderable = {
    Enabled = false,
    Type = "RenderableLabel",
    Text = "Triton",
    FontSize = 50.0,
    Size = 7.0,
    MinMaxSize = { 1, 25 },
    OrientationOption = "Camera View Direction",
    BlendMode = "Additive",
    EnableFading = true,
    FadeUnit = "Gm",
    FadeDistances = { 1, 15.0 },
    FadeWidths = { 1, 15.0 },
  },
  Tag = { "solarsystem_labels", "moon_labels", "major_moon_labels" },
  GUI = {
    Name = "Triton Label",
    Path = "/Solar System/Planets/Neptune/Major Moons/Triton",
    Description = "Label for Neptune's moon Triton"
  }
}


asset.onInitialize(function()
  openspace.addSceneGraphNode(Triton)
  openspace.addSceneGraphNode(TritonLabel)
end)

asset.onDeinitialize(function()
  openspace.removeSceneGraphNode(TritonLabel)
  openspace.removeSceneGraphNode(Triton)
end)

asset.export(Triton)
asset.export(TritonLabel)


asset.meta = {
  Name = "Triton",
  Version = "1.1",
  Description = [[Globe asset containing Neptune's moon: Triton]],
  Author = "OpenSpace Team",
  URL = "http://openspaceproject.com",
  License = "MIT license"
}
