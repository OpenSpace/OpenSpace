local assetHelper = asset.require('util/asset_helper')
local proceduralGlobes = asset.require('util/procedural_globe')
local transforms = asset.require('./transforms')
local kernels081 = asset.require('./nep081').Kernels
local kernels086 = asset.require('./nep086').Kernels
local kernels088 = asset.require('./nep088').Kernels



local parentIdentifier = transforms.NeptuneBarycenter.Identifier
local parentSpice = "NEPTUNE BARYCENTER"
local tags = { "moon_solarSystem", "moon_giants", "moon_neptune", "moon_irregular_retrograde" }
local trailColor = { 0.2, 0.5, 0.75 }

local irregularRetrogradeMoons = {
    {
        Identifier = "Nereid",
        Parent = {
            Identifier = parentIdentifier,
            Spice = parentSpice
        },
        Spice = "NEREID",
        Radii = { 340000, 340000, 340000 },
        Tags = tags,
        GUI = {
            Path = "/Solar System/Planets/Neptune/Moons/Irregular Retrograde Moons"
        },
        TrailColor = trailColor,
        OrbitPeriod = 360.13,
        Kernels = kernels081
    },
    {
        Identifier = "Sao",
        Parent = {
            Identifier = parentIdentifier,
            Spice = parentSpice
        },
        Spice = "SAO",
        Radii = { 44000, 44000, 44000 },
        Tags = tags,
        GUI = {
            Path = "/Solar System/Planets/Neptune/Moons/Irregular Retrograde Moons"
        },
        TrailColor = trailColor,
        OrbitPeriod = 2912.72,
        Kernels = kernels086
    },
    {
        Identifier = "Laomedeia",
        Parent = {
            Identifier = parentIdentifier,
            Spice = parentSpice
        },
        Spice = "LAOMEDEIA",
        Radii = { 42000, 42000, 42000 },
        Tags = tags,
        GUI = {
            Path = "/Solar System/Planets/Neptune/Moons/Irregular Retrograde Moons"
        },
        TrailColor = trailColor,
        OrbitPeriod = 3171.33,
        Kernels = kernels086
    }
}



assetHelper.registerSceneGraphNodesAndExport(
    asset,
    proceduralGlobes.createGlobes(irregularRetrogradeMoons)
)
