local proceduralGlobes = asset.require("util/procedural_globe")
local transforms = asset.require("./transforms")
local kernel = asset.require("./kernels").nep102



local parentIdentifier = transforms.NeptuneBarycenter.Identifier
local parentSpice = "NEPTUNE BARYCENTER"
local tags = { "moon_solarSystem", "moon_giants", "moon_neptune", "moon_irregular_prograde", "moon_minor", "moon_minor_neptune" }
local trailColor = { 0.2, 0.5, 0.75 }
local trailTags = {
  "moonTrail_solarSystem",
  "moonTrail_giants",
  "moonTrail_neptune",
  "moonTrail_minor",
  "moonTrail_minor_neptune"
}

local irregularProgradeMoons = {
  {
    Identifier = "Halimede",
    Parent = {
      Identifier = parentIdentifier,
      Spice = parentSpice
    },
    Spice = "HALIMEDE",
    Radii = { 62000, 62000, 62000 },
    Tags = tags,
    TrailTags = trailTags,
    GUI = {
      Path = "/Solar System/Planets/Neptune/Minor Moons/Irregular Prograde Moons/Halimede"
    },
    TrailColor = trailColor,
    OrbitPeriod = 1879.08,
    Kernels = kernel
  },
  {
    Identifier = "Psamathe",
    Parent = {
      Identifier = parentIdentifier,
      Spice = parentSpice
    },
    Spice = "PSAMATHE",
    Radii = { 40000, 40000, 40000 },
    Tags = tags,
    TrailTags = trailTags,
    GUI = {
      Path = "/Solar System/Planets/Neptune/Minor Moons/Irregular Prograde Moons/Psamathe"
    },
    TrailColor = trailColor,
    OrbitPeriod = 9074.3,
    Kernels = kernel
  },
  {
    Identifier = "Sao",
    Parent = {
      Identifier = parentIdentifier,
      Spice = parentSpice
    },
    Spice = "SAO",
    Radii = { 44000, 44000, 44000 },
    Tags = tags,
    TrailTags = trailTags,
    GUI = {
      Path = "/Solar System/Planets/Neptune/Minor Moons/Irregular Prograde Moons/Sao"
    },
    TrailColor = trailColor,
    OrbitPeriod = 2912.72,
    Kernels = kernel
  },
  {
    Identifier = "Laomedeia",
    Parent = {
      Identifier = parentIdentifier,
      Spice = parentSpice
    },
    Spice = "LAOMEDEIA",
    Radii = { 42000, 42000, 42000 },
    Tags = tags,
    TrailTags = trailTags,
    GUI = {
      Path = "/Solar System/Planets/Neptune/Minor Moons/Irregular Prograde Moons/Laomedeia"
    },
    TrailColor = trailColor,
    OrbitPeriod = 3171.33,
    Kernels = kernel
  },
  {
    Identifier = "Neso",
    Parent = {
      Identifier = parentIdentifier,
      Spice = parentSpice
    },
    Spice = "NESO",
    Radii = { 60000, 60000, 60000 },
    Tags = tags,
    TrailTags = trailTags,
    GUI = {
      Path = "/Solar System/Planets/Neptune/Minor Moons/Irregular Prograde Moons/Neso"
    },
    TrailColor = trailColor,
    OrbitPeriod = 9740.73,
    Kernels = kernel
  }
}


-- Generate labels for each moon
local moon_labels = {}

for i, moon in ipairs(irregularProgradeMoons) do
  local moonName = moon.GUI.Name or moon.Identifier
  moon_labels[i] = {
    Identifier = moon.Identifier .. "Label",
    Parent = moon.Identifier,
    Renderable = {
      Enabled = false,
      Type = "RenderableLabel",
      Text = moonName,
      FontSize = 70.0,
      Size = 7.4,
      MinMaxSize = { 1, 25 },
      OrientationOption = "Camera View Direction",
      BlendMode = "Additive",
      EnableFading = true,
      FadeUnit = "Gm",
      FadeDistances = { 1, 250.0 },
      FadeWidths = { 1, 250.0 },
    },
    Tag = { "solarsystem_labels", "moon_labels", "minor_moon_labels" },
    GUI = {
      Name = moonName .. " Label",
      Path = "/Solar System/Planets/Neptune/Minor Moons/Irregular Prograde Moons/" .. moon.Identifier,
      Description = "Label for Neptune's moon " .. moonName .. " (Irregular prograde group)"
    }
  }
end


local nodes = proceduralGlobes.createGlobes(irregularProgradeMoons)

asset.onInitialize(function()
  for _, node in ipairs(nodes) do
    openspace.addSceneGraphNode(node)
  end

  for _, moonlabel in ipairs(moon_labels) do
    openspace.addSceneGraphNode(moonlabel)
  end
end)

asset.onDeinitialize(function()
  for i = #moon_labels, 1, -1 do
    openspace.removeSceneGraphNode(moon_labels[i])
  end

  for i = #nodes, 1, -1 do
    openspace.removeSceneGraphNode(nodes[i])
  end
end)

for _, node in ipairs(nodes) do
  asset.export(node)
end


asset.meta = {
  Name = "Neptune Irregular Prograde Moons",
  Version = "1.0",
  Description = [[Procedural Globe asset containing Neptune' irregular prograde
    moons: Halimede, Psamathe and Neso. Blank globes and SPICE trails are generated for
    each moon]],
  Author = "OpenSpace Team",
  URL = "http://openspaceproject.com",
  License = "MIT license"
}
