local proceduralGlobes = asset.require("util/procedural_globe")
local transforms = asset.require("../transforms")
local kernel = asset.require("../kernels").nep101xl_802


local Nereid = {
  Identifier = "Nereid",
  Parent = {
    Identifier = transforms.NeptuneBarycenter.Identifier,
    Spice = "NEPTUNE BARYCENTER"
  },
  Spice = "NEREID",
  Radii = { 357000, 340000, 340000 },
  Tags = { "moon_solarSystem", "moon_giants", "moon_neptune" },
  TrailTags = { "moonTrail_solarSystem", "moonTrail_giants", "moonTrail_neptune" },
  GUI = {
    Path = "/Solar System/Planets/Neptune/Moons"
  },
  TrailColor = { 0.2, 0.5, 0.75 },
  OrbitPeriod = 360.13,
  Kernels = kernel
}


-- Generate labels for each moon
local moon_labels = {}

for i, moon in ipairs({ Nereid }) do
  local moonName = moon.GUI.Name or moon.Identifier
  moon_labels[i] = {
    Identifier = moon.Identifier .. "Label",
    Parent = moon.Identifier,
    Renderable = {
      Enabled = false,
      Type = "RenderableLabel",
      Text = moonName,
      FontSize = 50.0,
      Size = 7.0,
      MinMaxSize = { 1, 25 },
      OrientationOption = "Camera View Direction",
      BlendMode = "Additive",
      EnableFading = true,
      FadeUnit = "Gm",
      FadeDistances = { 1, 15.0 },
      FadeWidths = { 1, 15.0 },
    },
    Tag = { "solarsystem_labels", "moon_labels", "major_moon_labels" },
    GUI = {
      Name = moonName .. " Label",
      Path = "/Solar System/Planets/Neptune/Moons",
      Description = "Label for Neptune's moon " .. moonName
    }
  }
end


local nodes = proceduralGlobes.createGlobes({ Nereid })

asset.onInitialize(function()
  for _, node in ipairs(nodes) do
    openspace.addSceneGraphNode(node)
  end

  for _, moonlabel in ipairs(moon_labels) do
    openspace.addSceneGraphNode(moonlabel)
  end
end)

asset.onDeinitialize(function()
  for i = #moon_labels, 1, -1 do
    openspace.removeSceneGraphNode(moon_labels[i])
  end

  for i = #nodes, 1, -1 do
    openspace.removeSceneGraphNode(nodes[i])
  end
end)

for _, node in ipairs(nodes) do
  asset.export(node)
end



asset.meta = {
  Name = "Nereid",
  Version = "1.1",
  Description = [[Procedural Globe asset containing Neptune's moon: Nereid. A blank globe
    and SPICE trail are generated for the moon]],
  Author = "OpenSpace Team",
  URL = "http://openspaceproject.com",
  License = "MIT license"
}
