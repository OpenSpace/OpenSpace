local Mission = {
  Name = "Aurorasaurus",
  Description = "Aurorasaurus is the first and only citizen science initiative that tracks auroras around the world via reports on our website and social media. All aurora-related tweets and reports are placed on the Aurorasaurus.org map. We then ask people to log in and verify the tweets or reports. Each verified report serves as a valuable data point for scientists to analyze and incorporate into space weather models.",
  Image = "https://www.nasa.gov/wp-content/uploads/2023/03/solve-aurorasaurus.png",
  Link = "https://aurorasaurus.org/",
  --[[ Milestones = {
    {
      Name = "Partial Eclipse",
      Date = "2023 Mar 23 10:36:11",
      Image = "https://aurprod.s3.amazonaws.com:443/media/web-observation-pics/webobservation-9403-full-2023-03-2310%3A36%2B0000.png"
    },
    {
      Name = "Annular Eclipse",
      Date = "2023 Mar 24 22:54:32",
      Image = "https://aurprod.s3.amazonaws.com:443/media/web-observation-pics/webobservation-9491-full-2023-04-0614%3A09%2B0000.png"
    },
    {
      Name = "Total Eclipse",
      Date = "2023 Mar 25 16:57:53",
      Image = "https://aurprod.s3.amazonaws.com:443/media/web-observation-pics/webobservation-9784-full-2023-06-2703%3A44%2B0000.png"
    },
    {
      Name = "Annular Eclipse",
      Date = "2023 Mar 26 22:28:11",
      Image = "https://aurprod.s3.amazonaws.com:443/media/web-observation-pics/webobservation-9867-full-2023-07-0820%3A19%2B0000.png"
    },
    {
      Name = "Total Eclipse",
      Date = "2023 Mar 27 08:49:20",
      Image = "https://aurprod.s3.amazonaws.com:443/media/web-observation-pics/webobservation-9900-full-2023-07-0823%3A40%2B0000.png"
    }
  }, ]]
  Phases = {
    {
      Name = "May 2024 storm",
      TimeRange = { Start = "2024 MAY 10 15:00:00", End = "2024 MAY 11 07:30:00" },
      Description = "Aurorasaurus is the first and only citizen science initiative that tracks auroras around the world via reports on our website and social media. All aurora-related tweets and reports are placed on the Aurorasaurus.org map. We then ask people to log in and verify the tweets or reports. Each verified report serves as a valuable data point for scientists to analyze and incorporate into space weather models.",
      Image = "C:/Users/alundkvi/Documents/work/scripts/oval_legend.png",
      Actions = { "os.apollo17.setup.LandingSite", "os.apollo.DisableApolloSites" }
    },
    {
      Name = "May 2024 storm2",
      TimeRange = { Start = "2024 MAY 11 07:30:01", End = "2024 MAY 12 00:00:00" },
      Description = "Aurorasaurus is the first and only citizen science initiative that tracks auroras around the world via reports on our website and social media. All aurora-related tweets and reports are placed on the Aurorasaurus.org map. We then ask people to log in and verify the tweets or reports. Each verified report serves as a valuable data point for scientists to analyze and incorporate into space weather models.",
      Image = "https://www.nasa.gov/wp-content/uploads/2023/03/solve-aurorasaurus.png",
      Link = "https://aurorasaurus.org/",
      Actions = { "os.apollo17.setup.LandingSite", "os.apollo.DisableApolloSites" }
    },
  }
}


local ToggleColorLegend = {
  Identifier = "os.ToggleColorLegend",
  Name = "Toggle the color legend image",
  Command = [[
    if openspace.propertyValue("ScreenSpace.color-legend-aurora-oval.Enabled") then
      openspace.setPropertyValueSingle(
        "ScreenSpace.color-legend-aurora-oval.Fade",
        0.0,
        openspace.propertyValue("OpenSpaceEngine.FadeDuration"),
        "Linear",
        'openspace.setPropertyValueSingle("ScreenSpace.color-legend-aurora-oval.Enabled", false)'
      )
    else
      openspace.setPropertyValueSingle("ScreenSpace.color-legend-aurora-oval.Enabled", true)
      openspace.setPropertyValueSingle(
        "ScreenSpace.color-legend-aurora-oval.Fade",
        1.0,
        openspace.propertyValue("OpenSpaceEngine.FadeDuration"),
        "Linear"
      )
    end
  ]],
  Documentation = "Toggle the color legend image",
  GuiPath = "/Aurorasaurus/Prediction",
  IsLocal = false
}

local ToggleLegend = {
  Identifier = "os.ToggleLegend",
  Name = "Toggle the legend image",
  Command = [[
    if openspace.propertyValue("ScreenSpace.Legend-aurora-oval.Enabled") then
      openspace.setPropertyValueSingle(
        "ScreenSpace.Legend-aurora-oval.Fade",
        0.0,
        openspace.propertyValue("OpenSpaceEngine.FadeDuration"),
        "Linear",
        'openspace.setPropertyValueSingle("ScreenSpace.Legend-aurora-oval.Enabled", false)'
      )
    else
      openspace.setPropertyValueSingle("ScreenSpace.Legend-aurora-oval.Enabled", true)
      openspace.setPropertyValueSingle(
        "ScreenSpace.Legend-aurora-oval.Fade",
        1.0,
        openspace.propertyValue("OpenSpaceEngine.FadeDuration"),
        "Linear"
      )
    end
  ]],
  Documentation = "Toggle the legend image",
  GuiPath = "/Aurorasaurus/Prediction",
  IsLocal = false
}

local Legend = {
  Identifier = "Legend-aurora-oval",
  Type = "ScreenSpaceImageLocal",
  TexturePath = "${USER_ASSETS}/aurorasaurus/legends/oval_legend_v2.png",
  FaceCamera = false,
  Scale = 0.15,
  CartesianPosition = { -0.707970, -0.34, -2.2180 },
  Rotation = { 0.0, 0.0, 0.36652 }
}

local colorLegend = {
  Identifier = "color-legend-aurora-oval",
  Type = "ScreenSpaceImageLocal",
  TexturePath = "${USER_ASSETS}/aurorasaurus/legends/colorLegendWifi.png",
  FaceCamera = false,
  Scale = 0.15,
  CartesianPosition = { -0.707970, -0.34, -2.2180 },
  Rotation = { 0.0, 0.0, 0.36652 }
}
local aurorasaurusLogo = {
  Identifier = "aurorasaurus-logo",
  Type = "ScreenSpaceImageLocal",
  TexturePath = "${USER_ASSETS}/aurorasaurus/legends/aurorasaurus.png",
  FaceCamera = false,
  Scale = 0.15,
  CartesianPosition = { -0.0, -0.0, -2.0 },
  Rotation = { 0.0, 0.0, 0.36652 }
}
local OsLogo = {
  Identifier = "os-logo",
  Type = "ScreenSpaceImageLocal",
  TexturePath = "${USER_ASSETS}/aurorasaurus/legends/openspace.png",
  FaceCamera = false,
  Scale = 0.15,
  CartesianPosition = { -0.0, -0.34, -2.0 },
  Rotation = { 0.0, 0.0, 0.36652 }
}
local CCMCLogo = {
  Identifier = "ccmc-logo",
  Type = "ScreenSpaceImageLocal",
  TexturePath = "${USER_ASSETS}/aurorasaurus/legends/ccmc.png",
  FaceCamera = false,
  Scale = 0.15,
  CartesianPosition = { -0.707970, -0.0, -2.0 },
  Rotation = { 0.0, 0.0, 0.36652 }
}

asset.onInitialize(function()
  openspace.action.registerAction(ToggleLegend)
  openspace.action.registerAction(ToggleColorLegend)
  openspace.loadMission(Mission)
  openspace.addScreenSpaceRenderable(Legend)
  openspace.addScreenSpaceRenderable(colorLegend)
  openspace.addScreenSpaceRenderable(aurorasaurusLogo)
  openspace.addScreenSpaceRenderable(OsLogo)
  openspace.addScreenSpaceRenderable(CCMCLogo)

  openspace.setPropertyValueSingle("ScreenSpace.color-legend-aurora-oval.CartesianPosition", {-0.730000,-0.140000,-2.780000})
  openspace.setPropertyValueSingle("ScreenSpace.Legend-aurora-oval.CartesianPosition", {-0.820000,-0.350000,-3.140000})
end)

asset.onDeinitialize(function()
  openspace.action.removeAction(ToggleLegend)
  openspace.action.removeAction(ToggleColorLegend)
  openspace.unloadMission(Mission.Name)
  openspace.removeScreenSpaceRenderable(Legend)
  openspace.removeScreenSpaceRenderable(colorLegend)
  openspace.removeScreenSpaceRenderable(aurorasaurusLogo)
  openspace.removeScreenSpaceRenderable(OsLogo)
  openspace.removeScreenSpaceRenderable(CCMCLogo)
end)

asset.export(Legend)
asset.export(colorLegend)
asset.export(aurorasaurusLogo)
asset.export(OsLogo)
asset.export(CCMCLogo)
asset.export("ToggleLegend", ToggleLegend.Identifier)
asset.export("ToggleColorLegend", ToggleColorLegend.Identifier)

asset.meta = {
  Name = "Aurorasaurus Timeline",
  Version = "1.0",
  Description = "A timeline that shows images of the auroras during the March 2023 storm",
  Author = "OpenSpace Team",
  URL = "http://openspaceproject.com",
  License = "MIT license"
}