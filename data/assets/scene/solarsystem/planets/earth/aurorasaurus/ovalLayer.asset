local globe = asset.require("scene/solarsystem/planets/earth/earth")

local northPath = "${USER_ASSETS}/aurorasaurus/oval_images/north/"

local southPath = "${USER_ASSETS}/aurorasaurus/oval_images/south/"

local NorthLayer = {
    Identifier = "Oval_North",
    Name = "Oval North",
    Enabled = asset.enabled,
    ZIndex = 9000,
    Type = "TemporalTileProvider",
    Mode = "Prototyped",
    RenderBinMode = "PostDeferredTransparent",
    Prototyped = {
        Time = {
            Start = "2024-05-10",
            End = "2024-05-12"
        },
        TemporalResolution = "15m",
        TimeFormat = "YYYY-MM-DD-HR-MN",
        Prototype = northPath .. "${OpenSpaceTimeId}.png"
    },
    Description = "Earth image from Blue Marble Next Generation",
    Opacity = 1
}

local SouthLayer = {
  Identifier = "Oval_South",
  Name = "Oval South",
  Enabled = asset.enabled,
  ZIndex = 9000,
  Type = "TemporalTileProvider",
  Mode = "Prototyped",
  RenderBinMode = "PostDeferredTransparent",
  Prototyped = {
      Time = {
          Start = "2024-05-10",
          End = "2024-05-12"
      },
      TemporalResolution = "15m",
      TimeFormat = "YYYY-MM-DD-HR-MN",
      Prototype = southPath .. "${OpenSpaceTimeId}.png"
  },
  Description = "Earth image from Blue Marble Next Generation",
  Opacity = 1
}

local ToggleNorthLayer = {
  Identifier = "os.ToggleNorthLayer",
  Name = "Toggle North Oval Layer",
  Command = [[
    if openspace.propertyValue("Scene.Earth.Renderable.Layers.ColorLayers.Oval_North.Enabled") then
      openspace.setPropertyValueSingle(
        "Scene.Earth.Renderable.Layers.ColorLayers.Oval_North.Fade",
        0.0,
        openspace.propertyValue("OpenSpaceEngine.FadeDuration"),
        "Linear",
        'openspace.setPropertyValueSingle("Scene.Earth.Renderable.Layers.ColorLayers.Oval_North.Enabled", false)'
      )
    else
      openspace.setPropertyValueSingle("Scene.Earth.Renderable.Layers.ColorLayers.Oval_North.Enabled", true)
      openspace.setPropertyValueSingle(
        "Scene.Earth.Renderable.Layers.ColorLayers.Oval_North.Fade",
        1.0,
        openspace.propertyValue("OpenSpaceEngine.FadeDuration"),
        "Linear"
      )
    end
  ]],
  Documentation = "Toggle EUV layer of sun",
  GuiPath = "/Aurorasaurus",
  IsLocal = false
}

local ToggleSouthLayer = {
  Identifier = "os.ToggleSouthLayer",
  Name = "Toggle South Oval Layer",
  Command = [[
    if openspace.propertyValue("Scene.Earth.Renderable.Layers.ColorLayers.Oval_South.Enabled") then
      openspace.setPropertyValueSingle(
        "Scene.Earth.Renderable.Layers.ColorLayers.Oval_South.Fade",
        0.0,
        openspace.propertyValue("OpenSpaceEngine.FadeDuration"),
        "Linear",
        'openspace.setPropertyValueSingle("Scene.Earth.Renderable.Layers.ColorLayers.Oval_South.Enabled", false)'
      )
    else
      openspace.setPropertyValueSingle("Scene.Earth.Renderable.Layers.ColorLayers.Oval_South.Enabled", true)
      openspace.setPropertyValueSingle(
        "Scene.Earth.Renderable.Layers.ColorLayers.Oval_South.Fade",
        1.0,
        openspace.propertyValue("OpenSpaceEngine.FadeDuration"),
        "Linear"
      )
    end
  ]],
  Documentation = "Toggle EUV layer of sun",
  GuiPath = "/Aurorasaurus",
  IsLocal = false
}


asset.onInitialize(function()
  openspace.globebrowsing.addLayer(globe.Earth.Identifier, "ColorLayers", NorthLayer)
  openspace.globebrowsing.addLayer(globe.Earth.Identifier, "ColorLayers", SouthLayer)
  openspace.action.registerAction(ToggleNorthLayer)
  openspace.action.registerAction(ToggleSouthLayer)
end)

asset.onDeinitialize(function()
  openspace.action.removeAction(ToggleNorthLayer)
  openspace.action.removeAction(ToggleSouthLayer)
  openspace.globebrowsing.deleteLayer(globe.Earth.Identifier, "ColorLayers", NorthLayer)
  openspace.globebrowsing.deleteLayer(globe.Earth.Identifier, "ColorLayers", SouthLayer)
end)

asset.export("Prototype", NorthLayer)
asset.export("Prototype", SouthLayer)
asset.export("ToggleNorthLayer", ToggleNorthLayer.Identifier)
asset.export("ToggleSouthLayer", ToggleSouthLayer.Identifier)