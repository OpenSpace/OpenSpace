--local filepath = "C:/Users/alundkvi/Documents/work/data/auroraData/stormData/"
local globe = asset.require("scene/solarsystem/planets/earth/earth")

--ELON: change this to skycamera_images folder
local imagePath = "C:/Users/alundkvi/Downloads/mothers_day_storm_data_for_bea/mothers_day_storm_data_for_bea/grid_gillam/rgb/2024/05/11/images3/"

local Dashboard = {
  Identifier = "ScreenSpaceKPindex",
  Name = "KPindex",
  Type = "ScreenSpaceDashboard",
  FaceCamera = false,
  Scale = 3.0,
  Items = {
      {
          Type = "DashboardItemText",
          Identifier = "KPindexText",
          GuiName = "Storm KP index",
          Text = "",
          DataFile = "${USER_ASSETS}/aurorasaurus/KPjson/observed_data.json",
          FontSize = 72
      }
  }
}

local marker = {
    Identifier = "target-marker",
    Name = "ISWA Cygnets",
    Type = "ScreenSpaceImageOnline",
    FaceCamera = false,
    JsonFilePath = "${USER_ASSETS}/aurorasaurus/ISWAcygnets/magnetopause.json"
}


local Browser = {
  Type = "ScreenSpaceBrowser",
  Identifier = "ScreenSpaceBrowserExample",
  Name = "Screen Space Browser Example",
  Url = "https://iswa.ccmc.gsfc.nasa.gov/IswaSystemWebApp/?layout=SuperStormMay2024Indices"
}

local ToggleKPindex = {
  Identifier = "os.ToggleKPindex",
  Name = "Toggle KP index",
  Command = [[
    if openspace.propertyValue("ScreenSpace.ScreenSpaceKPindex.Enabled") then
      openspace.setPropertyValueSingle(
        "ScreenSpace.ScreenSpaceKPindex.Fade",
        0.0,
        openspace.propertyValue("OpenSpaceEngine.FadeDuration"),
        "Linear",
        'openspace.setPropertyValueSingle("ScreenSpace.ScreenSpaceKPindex.Enabled", false)'
      )
    else
      openspace.setPropertyValueSingle("ScreenSpace.ScreenSpaceKPindex.Enabled", true)
      openspace.setPropertyValueSingle(
        "ScreenSpace.ScreenSpaceKPindex.Fade",
        1.0,
        openspace.propertyValue("OpenSpaceEngine.FadeDuration"),
        "Linear"
      )
    end
  ]],
  Documentation = "Toggle observed KP index",
  GuiPath = "/Aurorasaurus",
  IsLocal = false
}

local ToggleISWACygnet = {
  Identifier = "os.ToggleISWACygnet",
  Name = "Toggle ISWA cygnet",
  Command = [[
    if openspace.propertyValue("ScreenSpace.target-marker.Enabled") then
      openspace.setPropertyValueSingle(
        "ScreenSpace.target-marker.Fade",
        0.0,
        openspace.propertyValue("OpenSpaceEngine.FadeDuration"),
        "Linear",
        'openspace.setPropertyValueSingle("ScreenSpace.target-marker.Enabled", false)'
      )
    else
      openspace.setPropertyValueSingle("ScreenSpace.target-marker.Enabled", true)
      openspace.setPropertyValueSingle(
        "ScreenSpace.target-marker.Fade",
        1.0,
        openspace.propertyValue("OpenSpaceEngine.FadeDuration"),
        "Linear"
      )
    end
  ]],
  Documentation = "Toggle ISWA Cygnet",
  GuiPath = "/Aurorasaurus",
  IsLocal = false
}


asset.onInitialize(function()
  openspace.addScreenSpaceRenderable(marker)
  openspace.addScreenSpaceRenderable(Dashboard)
  --openspace.globebrowsing.addLayer(globe.Earth.Identifier, "ColorLayers", Layer)

  openspace.setPropertyValueSingle("ScreenSpace.ScreenSpaceKPindex.CartesianPosition", {-0.540000,0.130000,-1.960000})
  --openspace.setPropertyValueSingle("ScreenSpace.target-marker.CartesianPosition", {-0.707970, -0.34, -2.2180})
  openspace.setPropertyValueSingle("ScreenSpace.ScreenSpaceKPindex.Scale", 0.750000)
  openspace.setPropertyValueSingle("ScreenSpace.ScreenSpaceKPindex.Size", {0.000000,0.000000,640.000000,320.000000})
  openspace.setPropertyValueSingle("ScreenSpace.target-marker.CartesianPosition", {-0.630000,0.220000,-2.000000})
  openspace.setPropertyValueSingle("ScreenSpace.target-marker.Scale", 0.130000)
  --openspace.addScreenSpaceRenderable(Browser)

  openspace.action.registerAction(ToggleISWACygnet)
  openspace.action.registerAction(ToggleKPindex)
end)

asset.onDeinitialize(function()
  openspace.removeScreenSpaceRenderable(marker)
  --openspace.globebrowsing.deleteLayer(globe.Earth.Identifier, "ColorLayers", Layer)
  openspace.addScreenSpaceRenderable(Dashboard)
  --openspace.removeScreenSpaceRenderable(Browser)

  openspace.action.removeAction(ToggleISWACygnet)
  openspace.action.removeAction(ToggleKPindex)
end)

--asset.export("layer", Layer)
--asset.export(Browser)
asset.export(Dashboard)

asset.export("ToggleISWACygnet", ToggleISWACygnet.Identifier)
asset.export("ToggleKPindex", ToggleKPindex.Identifier)
