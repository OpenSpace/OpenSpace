local globeIdentifier = asset.require("../../earth").Earth.Identifier


local Name = "Hurricane Season: Water Vapor and SST - 2005"
local Identifier = "noaa-sos-atmosphere-2005_hurricane-wvsst"
local Description = [["This hurricane season shattered records that have stood for 
decades - most named storms, most hurricanes and most category five storms. Arguably, it 
was the most devastating hurricane season the country has experienced in modern times," 
said retired Navy Vice Adm. Conrad C. Lautenbacher, Jr., Ph.D., undersecretary of 
commerce for oceans and atmosphere and NOAA administrator]]
local URL = "https://sos.noaa.gov/catalog/datasets/hurricane-season-water-vapor-and-sst-2005/"


local syncedDirectory = asset.syncedResource({
  Name = Name,
  Type = "HttpSynchronization",
  Identifier = Identifier,
  Version = 1
})

local imagesDestination = syncedDirectory .. "images"

local layer = {
  Identifier = Identifier,
  Name = Name,
  Type = "TemporalTileLayer",
  Mode = "Folder",
  Folder = {
    Folder = imagesDestination,
    -- See https://en.cppreference.com/w/cpp/io/manip/get_time for an explanation of the
    -- time formatting string
    Format = "GI-WV-%y%j-%H%M.jpg"
  },
  Description = Description
}

asset.onInitialize(function() 
  if not openspace.directoryExists(imagesDestination) then
    openspace.printInfo("Extracting " .. Name)
    openspace.unzipFile(syncedDirectory .. "2048.zip", imagesDestination, true)
  end

  openspace.globebrowsing.addLayer(globeIdentifier, "ColorLayers", layer)
end)

asset.onDeinitialize(function()
  openspace.globebrowsing.deleteLayer(globeIdentifier, "ColorLayers", layer)
end)

asset.export(layer)


asset.meta = {
  Name = Name,
  Version = "1.0",
  Description = Description .. "Data provided by the National Oceanic and Atmospheric Administration",
  Author = "National Oceanic and Atmospheric Administration",
  URL = URL,
  License = "https://sos.noaa.gov/copyright/"
}
