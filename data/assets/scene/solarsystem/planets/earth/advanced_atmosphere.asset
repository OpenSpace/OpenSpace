local transforms = asset.require('./earth')
local assetHelper = asset.require('util/asset_helper')



-- local earthEllipsoid = { 6378137.0, 6378137.0, 6356752.314245 }
local earthEllipsoid = { 6378137.0, 6378137.0, 6378137.0 }
local Atmosphere = {
    Identifier = "EarthAtmosphere",
    Parent = transforms.Earth.Identifier,
    Renderable = {
        Type = "RenderableAtmosphere",
        Atmosphere = {
            -- Atmosphere radius in Km
            AtmosphereRadius = 6447.0,
            PlanetRadius    = 6377.0,
            PlanetAverageGroundReflectance = 0.1,
            GroundRadianceEmittion = 0.6,
            SunIntensity = 6.9,
            Rayleigh = {
              Coefficients = {
                -- Wavelengths are given in 10^-9m
                Wavelengths = { 680, 550, 440 },
                -- Coefficients are given in 1/cm
                --Scattering = { 5.8E-3, 13.5E-3, 33.1E-3 },
                --Scattering = { 4.6208E-3, 10.7971E-3, 26.36E-3 },
                -- Measured (550nm) and corrected terms:
                --Scattering = { 5.1679E-3, 12.228E-3, 30.5437E-3 },
                -- Measured Bulchotz:
                -- Scattering = { 5.146E-3, 11.49E-3, 29.7E-3 },
                -- My calculations:
                Scattering = { 5.1768505E-3, 12.2588522E-3, 30.5963867E-3 },
                -- In Rayleigh scattering, the coefficients of absorption and scattering are the same.
              },
              -- Thichkness of atmosphere if its density were uniform, in Km
              H_R = 8.0
            },
            Ozone = {
              Coefficients = {
                -- Cross-sections for wavelengths (680, 550, 440)nm
                Absorption = {1.368209E-21, 3.314053E-21, 1.360173E-22}
              },
              H_O = 9.0,
            },
            Oxygen = {
              Coefficients = {
                -- Cross-sections for wavelengths (680, 550, 440)nm
                Absorption = {4.164E-5, 5.06E-5, 7.525E-5}
              },
              H_O = 8.0,
            },
            -- Default
            Mie = {
               Coefficients = {
                 -- Reflection coefficients are given in km^-1
                 Scattering = { 4.0e-3, 4.0e-3, 4.0e-3 },
                 -- Extinction coefficients are a fraction of the Mie coefficients
                 Extinction = { 4.0e-3/0.9, 4.0e-3/0.9, 4.0e-3/0.9 }
               },
               -- Height scale (atmosphere thickness for constant density) in Km
               H_M = 1.2,
               -- Mie Phase Function Value (G e [-1.0, 1.0]. If G = 1.0, Mie phase function = Rayleigh Phase Function)
               G = 0.85
            },
            -- Clear Sky
            -- Mie = {
            --     Coefficients = {
            --         Scattering = {20e-3, 20e-3, 20e-3},
            --         Extinction = 1.0/0.9,
            --      }
            --     H_M = 1.2,
            --     G = 0.76,
            -- },
            -- Cloudy
            -- Mie = {
            --     Coefficients = {
            --         Scattering = {3e-3, 3e-3, 3e-3},
            --         Extinction = 1.0/0.9,
            --      }
            --     H_M = 3.0,
            --     G = 0.65,
            -- },
            Image = {
               ToneMapping = jToneMapping,
               Exposure = 0.4,
               Background = 1.8,
               Gamma = 1.85
            },
            Debug = {
               PreCalculatedTextureScale = 1.0,
               SaveCalculatedTextures = false
            }
        },
        ShadowGroup = {
            Source1 = {
                Name = "Sun",
                -- All radius in meters
                Radius = 696.3E6
            },
            --Source2 = { Name = "Monolith", Radius = 0.01E6, },
            Caster1 = { 
                Name = "Moon",
                -- All radius in meters
                Radius = 1.737E6
            }
            --Caster2 = { Name = "Independency Day Ship", Radius = 0.0, }
         }
    },
    GUI = {
        Name = "Earth Atmosphere",
        Path = "/Solar System/Planets/Earth"
    }
}



assetHelper.registerSceneGraphNodesAndExport(asset, { Atmosphere })
