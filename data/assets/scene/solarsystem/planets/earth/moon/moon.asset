local assetHelper = asset.require('util/asset_helper')
local transforms = asset.require('scene/solarsystem/planets/earth/transforms')
local sunAsset = asset.require('scene/solarsystem/sun/sun')
local earthAsset = asset.require('../earth')
asset.require('spice/base')
asset.request('./trail')



local mapServiceConfigs = asset.localResource("map_service_configs")

local Moon = {
    Identifier = "Moon",
    Parent = transforms.EarthBarycenter.Identifier,
    Transform = {
        Translation = {
            Type = "SpiceTranslation",
            Target = "MOON",
            Observer = "EARTH BARYCENTER"
        },
        Rotation = {
            Type = "SpiceRotation",
            SourceFrame = "IAU_MOON",
            DestinationFrame = "GALACTIC"
        }
    },
    Renderable = {
        Type = "RenderableGlobe",
        Radii = 1738140,
        SegmentsPerPatch = 64,
        Layers = {
            ColorLayers = {
                -- Utah based servers
                {
                    Identifier = "ClemUvvis",
                    FilePath = mapServiceConfigs .. "/Utah/ClemUvvis.wms"
                },
                {
                    Identifier = "Kaguya",
                    FilePath = mapServiceConfigs .. "/Utah/Kaguya.wms"
                },
                {
                    Identifier = "WAC_Utah",
                    Name = "WAC Utah",
                    FilePath = mapServiceConfigs .. "/Utah/Wac.wms",
                    Enabled = true
                },
                -- LMMP based servers
                {
                    Identifier = "OnMoon",
                    FilePath = mapServiceConfigs .. "/OnMoonColor.wms"
                }
            },
            HeightLayers = {
                -- Utah based servers
                {
                    Identifier = "LolaDem",
                    FilePath = mapServiceConfigs .. "/Utah/LolaDem.wms",
                    Enabled = true,
                    TilePixelSize = 64,
                    Settings = { Multiplier = 0.5 }
                }
            }
        },
        ShadowGroup = {
            Source1 = {
                Name = sunAsset.Sun.Name,
                Radius = 696.3E6
            },
            Caster1 = { 
                Name = earthAsset.Earth.Name,
                Radius = 6.371E6
            }
        }
    },
    GUI = {
        Path = "/Solar System/Planets/Earth/Moon"
    }
}



assetHelper.registerSceneGraphNodesAndExport(asset, { Moon })
