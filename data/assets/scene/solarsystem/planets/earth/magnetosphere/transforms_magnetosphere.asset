local transforms = asset.require("scene/solarsystem/planets/earth/transforms")
local coreKernels = asset.require("spice/core")

local GSMKernel = asset.resource("../kernels/GSM.tf")

local Frame = {
  GSM = "GSM" -- Geocentric Solar Magnetospheric
}

local GSMReferenceFrame = {
  Identifier = "GSMReferenceFrame",
  Parent = transforms.EarthCenter.Identifier,
  Transform = {
    Rotation = {
      Type = "SpiceRotation",
      SourceFrame = Frame.GSM,
      DestinationFrame = coreKernels.Frame.Galactic
    }
  },
  GUI = {
    Name = "GSM Reference Frame",
    Path = "/Solar System/Planets/Earth",
    Hidden = true
  }
}
local SMReferenceFrame = {
  Identifier = "SMReferenceFrame",
  Parent = GSMReferenceFrame.Identifier,
  --Transform = {
    --Rotation = {
      --Type = "StaticRotation",
      --http://jsoc.stanford.edu/~jsoc/keywords/Chris_Russel/Geophysical%20Coordinate%20Transformations.htm
      --((cos u, 0, -sin u)(0, 1, 0)(sin u, 0, cos u))
      --u being dipole tilt 9.6deg https://en.wikipedia.org/wiki/Geomagnetic_pole
      -- Rotation = {
      --   0.985996037, 0.0, -0.166768747,
      --   0.0,         1.0, 0.0,
      --   0.166768747, 0.0, 0.985996037
      -- }
    --}
  --},
  GUI = {
    Name = "SM Reference Frame",
    Path = "/Solar System/Planets/Earth",
    Hidden = true
  }
}


asset.onInitialize(function()
  openspace.spice.loadKernel(GSMKernel)

  openspace.addSceneGraphNode(GSMReferenceFrame)
  openspace.addSceneGraphNode(SMReferenceFrame)
end)

asset.onDeinitialize(function()
  openspace.removeSceneGraphNode(SMReferenceFrame)
  openspace.removeSceneGraphNode(GSMReferenceFrame)

  openspace.spice.unloadKernel(GSMKernel)
end)

asset.export("Frame", Frame)
asset.export(GSMReferenceFrame)
asset.export(SMReferenceFrame)



asset.meta = {
  Name = "Earth magnetosphere transforms",
  Version = "1.1",
  Description = "Earth transforms: GSMReferenceFrame. Geocentric Solar Magnetospheric, SMReferenceFrame, Solar Magnetic",
  Author = "CCMC",
  URL = "http://openspaceproject.com",
  License = "MIT license"
}
