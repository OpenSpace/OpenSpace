local assetHelper = asset.require('util/asset_helper')
local satelliteHelper = asset.require('util/tle_helper')
local transforms = asset.require('scene/solarsystem/planets/earth/transforms')
local sunTransforms = asset.require('scene/solarsystem/sun/transforms')

local url = "https://celestrak.com/satcat/tle.php?CATNR=25544"
local identifier = "ISS"
local filename = "ISS.txt"
local nodes = {}
local tle = satelliteHelper.downloadTLEFile(asset, url, identifier, filename)

local models = asset.syncedResource({
    Name = "ISS Models",
    Type = "HttpSynchronization",
    Identifier = "iss_model",
    Version = 2
})

local initializeAndAddNodes = function()
  local lineElement = satelliteHelper.makeSingleLineElement(tle, filename)
  local period = satelliteHelper.getPeriodFromElement(lineElement)
  local path = tle .. "/" .. filename

  local iss = {
    Identifier = "ISS",
    Parent = transforms.EarthInertial.Identifier,
    Transform = {
      Translation = {
        Type = "TLETranslation",
        Body = identifier,
        Observer = transforms.EarthInertial.Identifier,
        File = path,
        LineNumber = 1
      },
      Rotation = {
          Type = "SpiceRotation",
          SourceFrame = "GALACTIC",
          DestinationFrame = "J2000",
      }
    },
    Tag = { "earth_satellite", "ISS" },
    GUI = {
        Path = "/Solar System/Planets/Earth/Satellites/ISS"
    }
  }

  local parentNode = {
     Identifier = "ISSparentNode",
      Parent = iss.Identifier,
      Transform = {
        Rotation = {
            Type = "FixedRotation",
            Attached = "ISSparentNode",
            XAxis = { 0.01, -1.0, 0.56 },
            XAxisOrthogonal = true,
            YAxis = transforms.EarthInertial.Identifier
        }
      },
      GUI = {
          Name = "ISSparentNode",
          Path = "/Solar System/Planets/Earth/Satellites/ISS",
          Hidden = true,
      }
  }

  local list = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "10", "11", 
      "13", "14", "15", "16", "17", "19", "21", "22", "23", "24", "25",
      "foilsilver", "olive", "basemetal", "white_20", "plasticblack", "ecostresswhite",
      "plain"}

  local nodes = { iss, parentNode }
  for i, info in ipairs(list) do
    n = assetHelper.createModelPart(
      parentNode.Identifier,
      sunTransforms.SolarSystemBarycenter.Identifier,
      models,
      info,
      info .. ".png",
      true
    )
    table.insert(nodes, n)
  end

  local issTrail = {
    Identifier = identifier .. "_trail",
    Parent = transforms.EarthInertial.Identifier,
    Renderable = {
        Type = "RenderableTrailOrbit",
        Translation = {
          Type = "TLETranslation",
          Body = identifier,
          Observer = transforms.EarthInertial.Identifier,
          File = path,
          LineNumber = 1
        },
        Color = { 0.9, 0.6715, 0.0 },
        Fade = 1.5,
        Period = period,
        Resolution = 320
      },
    Tag = { "earth_satellite", "ISS" },
    GUI = {
      Name = "ISS Trail",
      Path = "/Solar System/Planets/Earth/Satellites/ISS"
    }
  }

  table.insert(nodes, issTrail)
  return nodes
end

asset.onInitialize(function ()
  nodes = initializeAndAddNodes()
  for _, node in ipairs(nodes) do
    openspace.addSceneGraphNode(node)
  end
  openspace.setPropertyValueSingle("Scene.ISSparentNode.Rotation.yAxis-InvertObject", true)
end)
