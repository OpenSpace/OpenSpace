local assetHelper = asset.require('util/asset_helper')
local satelliteHelper = asset.require('util/tle_helper')
local transforms = asset.require('scene/solarsystem/planets/earth/transforms')
local sunTransforms = asset.require('scene/solarsystem/sun/transforms')

local url = "https://celestrak.com/satcat/tle.php?CATNR=25544"
local identifier = "ISS"
local filename = "ISS.txt"
local nodes = {}
local tle = satelliteHelper.downloadTLEFile(asset, url, identifier, filename)

local models = asset.syncedResource({
    Name = "ISS Models",
    Type = "HttpSynchronization",
    Identifier = "iss_model",
    Version = 2
})

local initializeAndAddNodes = function()
  local lineElement = satelliteHelper.makeSingleLineElement(tle, filename)
  local period = satelliteHelper.getPeriodFromElement(lineElement)
  local path = tle .. "/" .. filename

  local iss = {
    Identifier = "ISS",
    Parent = transforms.EarthInertial.Identifier,
    BoundingSphere = 30,
    Transform = {
      Translation = {
        Type = "TLETranslation",
        Body = identifier,
        Observer = transforms.EarthInertial.Identifier,
        File = path,
        LineNumber = 1
      },
      Rotation = {
          Type = "SpiceRotation",
          SourceFrame = "GALACTIC",
          DestinationFrame = "J2000",
      }
    },
    Tag = { "earth_satellite", "ISS" },
    GUI = {
        Path = "/Solar System/Planets/Earth/Satellites/ISS"
    }
  }

  local parentNode = {
     Identifier = "ISSparentNode",
      Parent = iss.Identifier,
      Transform = {
        Rotation = {
            Type = "FixedRotation",
            Attached = "ISSparentNode",
            XAxis = { 0.01, -1.0, 0.56 },
            XAxisOrthogonal = true,
            YAxis = transforms.EarthInertial.Identifier
        }
      },
      Renderable = {
        Type = "RenderableModel",
        Geometry = {
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/0.obj",
            ColorTexture = models .. "/0.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/1.obj",
            ColorTexture = models .. "/1.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/2.obj",
            ColorTexture = models .. "/2.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/3.obj",
            ColorTexture = models .. "/3.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/4.obj",
            ColorTexture = models .. "/4.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/5.obj",
            ColorTexture = models .. "/5.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/6.obj",
            ColorTexture = models .. "/6.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/7.obj",
            ColorTexture = models .. "/7.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/8.obj",
            ColorTexture = models .. "/8.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/10.obj",
            ColorTexture = models .. "/10.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/11.obj",
            ColorTexture = models .. "/11.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/13.obj",
            ColorTexture = models .. "/13.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/14.obj",
            ColorTexture = models .. "/14.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/15.obj",
            ColorTexture = models .. "/15.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/16.obj",
            ColorTexture = models .. "/16.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/17.obj",
            ColorTexture = models .. "/17.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/19.obj",
            ColorTexture = models .. "/19.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/21.obj",
            ColorTexture = models .. "/21.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/22.obj",
            ColorTexture = models .. "/22.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/23.obj",
            ColorTexture = models .. "/23.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/24.obj",
            ColorTexture = models .. "/24.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/25.obj",
            ColorTexture = models .. "/25.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/foilsilver.obj",
            ColorTexture = models .. "/foilsilver.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/olive.obj",
            ColorTexture = models .. "/olive.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/basemetal.obj",
            ColorTexture = models .. "/basemetal.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/white_20.obj",
            ColorTexture = models .. "/white_20.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/plasticblack.obj",
            ColorTexture = models .. "/plasticblack.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/ecostresswhite.obj",
            ColorTexture = models .. "/ecostresswhite.png"
          },
          {
            Type = "MultiModelGeometry",
            GeometryFile = models .. "/plain.obj",
            ColorTexture = models .. "/plain.png"
          },
          
        },
        LightSources = {
          {
            Type = "SceneGraphLightSource",
            Identifier = "Sun",
            Node = sunTransforms.SolarSystemBarycenter.Identifier,
            Intensity = 1.0
          }
        },
        PerformShading = true,
        DisableFaceCulling = true
      },
      GUI = {
          Name = "ISSparentNode",
          Path = "/Solar System/Planets/Earth/Satellites/ISS",
          Hidden = true,
      }
  }

  local issTrail = {
    Identifier = identifier .. "_trail",
    Parent = transforms.EarthInertial.Identifier,
    Renderable = {
        Type = "RenderableTrailOrbit",
        Translation = {
          Type = "TLETranslation",
          Body = identifier,
          Observer = transforms.EarthInertial.Identifier,
          File = path,
          LineNumber = 1,
          RenderBinMode = "PostDeferredTransparent"
        },
        Color = { 0.9, 0.6715, 0.0 },
        Fade = 1.5,
        Period = period,
        Resolution = 320
      },
    Tag = { "earth_satellite", "ISS" },
    GUI = {
      Name = "ISS Trail",
      Path = "/Solar System/Planets/Earth/Satellites/ISS"
    }
  }

  table.insert(nodes, issTrail)
  return { iss, parentNode, issTrail }
end

asset.onInitialize(function ()
  nodes = initializeAndAddNodes()
  for _, node in ipairs(nodes) do
    openspace.addSceneGraphNode(node)
  end
  openspace.setPropertyValueSingle("Scene.ISSparentNode.Rotation.yAxis-InvertObject", true)
end)
