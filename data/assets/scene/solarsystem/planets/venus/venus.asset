local assetHelper = asset.require('util/asset_helper')
local transforms = asset.require('./transforms')
asset.require("spice/base")
asset.request('./trail')
local labelsPath = asset.require('./venus_labels').LabelsPath



local textures = asset.syncedResource({
    Name = "Venus Textures",
    Type = "HttpSynchronization",
    Identifier = "venus_textures",
    Version = 1
})

local Venus = {
    Identifier = "Venus",
    Parent = transforms.VenusBarycenter.Identifier,
    Transform = {
        Rotation = {
            Type = "SpiceRotation",
            SourceFrame = "IAU_VENUS",
            DestinationFrame = "GALACTIC"
        },
        Translation = {
            Type = "SpiceTranslation",
            Target = "VENUS",
            Observer = "VENUS BARYCENTER"
        },
        Scale = {
            Type = "StaticScale",
            Scale = 1.0
        }
    },
    Renderable = {
        Type = "RenderableGlobe",
        Radii = { 6051900.0, 6051900.0, 6051800.0 },
        SegmentsPerPatch = 64,
        Layers = {
            ColorLayers = {
                {
                    Identifier = "Texture",
                    FilePath = textures .. "/venus.jpg",
                    Enabled = true
                }
            }
        },
        Labels = {
            Enable = false,
            FileName = labelsPath .. "/venus.labels",
            LabelAlignmentOption = "Horizontally", -- or Circularly
            LabelsFontSize = 40.0,
            LabelsSize = 12.0,
            LabelsMinSize = 1.0,
            LabelsMaxSize = 1500.0,
            ProximityEnabled = false,
            LabelsFadeInEnabled = true,
            FadeInStartingDistance = 500000.0,
            FadeOutStartingDistance = 1000000.0,
            LabelsForceDomeRendering = true,
            LabelsDistanceEPS = 3500000.0,
            LabelsColor = {1.0, 1.0, 0.0, 1.0}
        }
    },
    Tag = { "planet_solarSystem", "planet_terrestrial" },
    GUI = {
        Path = "/Solar System/Planets/Venus"
    }
}



assetHelper.registerSceneGraphNodesAndExport(asset, { Venus })
