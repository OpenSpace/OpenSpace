local assetHelper = asset.require('util/asset_helper')
local transforms = asset.require('./transforms')
asset.require("spice/base")
asset.request('./trail')
local labelsPath = asset.require('./venus_globelabels').LabelsPath

local mapServiceConfigs = asset.localResource("map_service_configs")

local textures = asset.syncedResource({
    Name = "Venus Textures",
    Type = "HttpSynchronization",
    Identifier = "venus_textures",
    Version = 1
})

local color_layers = {
    {
        Identifier = "Texture",
        FilePath = textures .. "/venus.jpg",
        Enabled = true,
        Settings = {
            Opacity = 0.48,
            Gamma = 0.48
        }
    },
    {
        Identifier = "Magellan_Mosaic_Utah",
        Name = "Magellan Mosaic [Utah]",
        FilePath = mapServiceConfigs .. "/Utah/MagellanMosaic.vrt",
        BlendMode = "Color",
        Settings = {
            Gamma = 2.0
        },
        Enabled = true
    },
}

local height_layers = {
    {
        Identifier = "Magellan",
        Name = "Magellan Elevation [Utah]",
        FilePath = mapServiceConfigs .. "/Utah/MagellanDEM.wms",
        TilePixelSize = 64,
        Settings = {
            Gamma = 1.72,
            Multiplier = 1.1
        },
        Enabled = true
    }
}

local Venus = {
    Identifier = "Venus",
    Parent = transforms.VenusBarycenter.Identifier,
    Transform = {
        Rotation = {
            Type = "SpiceRotation",
            SourceFrame = "IAU_VENUS",
            DestinationFrame = "GALACTIC"
        },
        Translation = {
            Type = "SpiceTranslation",
            Target = "VENUS",
            Observer = "VENUS BARYCENTER"
        }
    },
    Renderable = {
        Type = "RenderableGlobe",
        --Radii = { 6051900.0, 6051900.0, 6051800.0 },
        Radii = { 6051900.0, 6051900.0, 6051900.0 },
        SegmentsPerPatch = 64,
        Layers = {
            ColorLayers = color_layers,
            HeightLayers = height_layers
        },
        Labels = {
            Enable = false,
            FileName = labelsPath .. "/venus.labels",
            LabelAlignmentOption = "Horizontally", -- or Circularly
            LabelsFontSize = 40.0,
            LabelsSize = 12.0,
            LabelsMinSize = 1.0,
            LabelsMaxSize = 1500.0,
            ProximityEnabled = false,
            LabelsFadeInEnabled = true,
            FadeInStartingDistance = 500000.0,
            FadeOutStartingDistance = 1000000.0,
            LabelsForceDomeRendering = true,
            LabelsDistanceEPS = 3500000.0,
            LabelsColor = {1.0, 1.0, 0.0, 1.0}
        }
    },
    Tag = { "planet_solarSystem", "planet_terrestrial" },
    GUI = {
        Path = "/Solar System/Planets/Venus"
    }
}

local VenusLabel = {
    Identifier = "VenusLabel",
    Parent = Venus.Identifier,
    Renderable = {
        Enabled = false,
        Type = "RenderableLabels",
        LabelText = "Venus",
        FontSize = 100.0,
        LabelSize = 8.4,
        LabelMaxSize = 100.0,
        LabelMinSize = 1.0,
        LabelOrientationOption = "Camera View Direction",
        BlendMode = "Additive"
    },
    Tag = { "solarsystem_labels" },
    GUI = {
        Name = "Venus Label",
        Path = "/Solar System/Planets/Venus"
    }
}


assetHelper.registerSceneGraphNodesAndExport(asset, { Venus, VenusLabel })
