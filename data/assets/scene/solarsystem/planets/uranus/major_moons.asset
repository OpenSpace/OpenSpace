local proceduralGlobes = asset.require("util/procedural_globe")
local transforms = asset.require("./transforms")
local kernel = asset.require("./kernels").ura111



local parentIdentifier = transforms.UranusBarycenter.Identifier
local parentSpice = "URANUS BARYCENTER"
local tags = { "moon_solarSystem", "moon_giants", "moon_uranus", "moon_major" }
local trailColor = { 0.60, 0.65, 0.84 }
local trailTags = { "moonTrail_solarSystem", "moonTrail_giants", "moonTrail_uranus" }


local majorMoons = {
  {
    Identifier = "Miranda",
    Parent = {
      Identifier = parentIdentifier,
      Spice = parentSpice
    },
    Spice = "MIRANDA",
    Radii = { 471600, 468000, 466000 },
    Tags = tags,
    TrailTags = trailTags,
    GUI = {
      Path = "/Solar System/Planets/Uranus/Major Moons/Miranda"
    },
    TrailColor = trailColor,
    OrbitPeriod = 1.413479,
    Kernels = kernel
  },
  {
    Identifier = "Ariel",
    Parent = {
      Identifier = parentIdentifier,
      Spice = parentSpice
    },
    Spice = "ARIEL",
    Radii = { 1162000, 1156000, 1155000 },
    Tags = tags,
    TrailTags = trailTags,
    GUI = {
      Path = "/Solar System/Planets/Uranus/Major Moons/Ariel"
    },
    TrailColor = trailColor,
    OrbitPeriod = 2.520379,
    Kernels = kernel
  },
  {
    Identifier = "Umbriel",
    Parent = {
      Identifier = parentIdentifier,
      Spice = parentSpice
    },
    Spice = "UMBRIEL",
    Radii = { 1169400, 1169400, 1169400 },
    Tags = tags,
    TrailTags = trailTags,
    GUI = {
      Path = "/Solar System/Planets/Uranus/Major Moons/Umbriel"
    },
    TrailColor = trailColor,
    OrbitPeriod = 4.144177,
    Kernels = kernel
  },
  {
    Identifier = "Titania",
    Parent = {
      Identifier = parentIdentifier,
      Spice = parentSpice
    },
    Spice = "TITANIA",
    Radii = { 1576800, 1576800, 1576800 },
    Tags = tags,
    TrailTags = trailTags,
    GUI = {
      Path = "/Solar System/Planets/Uranus/Major Moons/Titania"
    },
    TrailColor = trailColor,
    OrbitPeriod = 8.705872,
    Kernels = kernel
  },
  {
    Identifier = "Oberon",
    Parent = {
      Identifier = parentIdentifier,
      Spice = parentSpice
    },
    Spice = "OBERON",
    Radii = { 1522800, 1522800, 1522800 },
    Tags = tags,
    TrailTags = trailTags,
    GUI = {
      Path = "/Solar System/Planets/Uranus/Major Moons/Oberon"
    },
    TrailColor = trailColor,
    OrbitPeriod = 13.463239,
    Kernels = kernel
  }
}

-- Generate all moon labels
local moon_labels = {}

for i, moon in ipairs(majorMoons) do
  local moonName = moon.GUI.Name or moon.Identifier
  moon_labels[i] = {
    Identifier = moon.Identifier .. "Label",
    Parent = moon.Identifier,
    Renderable = {
      Enabled = false,
      Type = "RenderableLabel",
      Text = moonName,
      FontSize = 70.0,
      Size = 5.9,
      MinMaxSize = { 1, 25 },
      OrientationOption = "Camera View Direction",
      BlendMode = "Normal",
      EnableFading = true,
      FadeUnit = "Mm",
      FadeDistances = { 175.0, 4000.0 },
      FadeWidths = { 35.0, 2000.0 }
    },
    Tag = { "solarsystem_labels", "moon_labels", "major_moon_labels" },
    GUI = {
      Name = moonName .. " Label",
      Path = "/Solar System/Planets/Uranus/Major Moons/" .. moon.Identifier,
      Description = "Label for Uranus' moon " .. moonName .. " (Major moon)"
    }
  }
end

local nodes = proceduralGlobes.createGlobes(majorMoons)

asset.onInitialize(function()
  for _, node in ipairs(nodes) do
    openspace.addSceneGraphNode(node)
  end

  for _, moon in ipairs(moon_labels) do
    openspace.addSceneGraphNode(moon)
  end
end)

asset.onDeinitialize(function()
  for i = #moon_labels, 1, -1 do
    openspace.removeSceneGraphNode(moon_labels[i])
  end

  for i = #nodes, 1, -1 do
    openspace.removeSceneGraphNode(nodes[i])
  end
end)

for _, node in ipairs(nodes) do
  asset.export(node)
end


asset.meta = {
  Name = "Uranus Marjor Moons",
  Version = "1.0",
  Description = [[Procedural Globe asset containing Uranus' major moons: Miranda, Ariel,
    Umbriel, Titania, and Oberon. Blank globes and SPICE trails are generated for each
    moon]],
  Author = "OpenSpace Team",
  URL = "http://openspaceproject.com",
  License = "MIT license"
}
