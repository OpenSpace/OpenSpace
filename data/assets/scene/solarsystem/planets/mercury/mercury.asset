local assetHelper = asset.require('util/asset_helper')
local transforms = asset.require('./transforms')
asset.require("spice/base")
asset.request('./trail')



local mapServiceConfigs = asset.localResource("map_service_configs")

local color_layers = {
    -- Utah based servers
    {
        Identifier = "Messenger_MDIS_Utah",
        Name = "Messenger MDIS [Utah]",
        FilePath = mapServiceConfigs .. "/Utah/MessengerMDIS.wms",
        Enabled = true
    },
    {
        Identifier = "Messenger_Mosaic_Utah",
        Name = "Messenger Mosaic [Utah]",
        FilePath = mapServiceConfigs .. "/Utah/MessengerMosaic.wms"
    },
    -- AWS based servers
    {
        Identifier = "Messenger_MDIS_AWS",
        Name = "Messenger MDIS [AWS]",
        FilePath = mapServiceConfigs .. "/AWS/MessengerMdis.wms"
    },
    {
        Identifier = "Messenger_Mosaic_AWS",
        Name = "Messenger Mosaic [AWS]",
        FilePath = mapServiceConfigs .. "/AWS/MessengerMosaic.wms"
    }
}

local Mercury = {
    Identifier = "Mercury",
    Parent = transforms.MercuryBarycenter.Identifier,
    Transform = {
        Rotation = {
            Type = "SpiceRotation",
            SourceFrame = "IAU_MERCURY",
            DestinationFrame = "GALACTIC"
        }
    },
    Renderable = {
        Type = "RenderableGlobe",
        Radii = 2439700,
        Frame = "IAU_MERCURY",
        Body = "MERCURY",
        CameraMinHeight = 300,
        SegmentsPerPatch = 64,
        Layers = {
            ColorLayers = color_layers
        }
    },
    Tag = { "planet_solarSystem", "planet_terrestrial" },
    GUI = {
        Path = "/Solar System/Planets/Mercury"
    }
}



assetHelper.registerSceneGraphNodesAndExport(asset, { Mercury })
