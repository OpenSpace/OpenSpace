local assetHelper = asset.require('util/asset_helper')
local transforms = asset.require('./transforms')
local labelsPath = asset.require('./mercury_globelabels').LabelsPath

asset.require("spice/base")
asset.require('./trail')

local Mercury = {
    Identifier = "Mercury",
    Parent = transforms.MercuryBarycenter.Identifier,
    Transform = {
        Rotation = {
            Type = "SpiceRotation",
            SourceFrame = "IAU_MERCURY",
            DestinationFrame = "GALACTIC"
        }
    },
    Renderable = {
        Type = "RenderableGlobe",
        Radii = 2439700,
        Frame = "IAU_MERCURY",
        Body = "MERCURY",
        CameraMinHeight = 300,
        SegmentsPerPatch = 64,
        Layers = {},
        Labels = {
            Enable = false,
            FileName = labelsPath .. "/Mercury.labels",
            LabelAlignmentOption = "Horizontally", -- or Circularly
            LabelsFontSize = 40.0,
            LabelsSize = 10.0,
            LabelsMinSize = 1.0,
            LabelsMaxSize = 1500.0,
            ProximityEnabled = false,
            FadeInStartingDistance = 40000000.0,
            FadeOutStartingDistance = 80000.0,
            LabelsForceDomeRendering = true,
            LabelsDistanceEPS = 1500000.0,
            LabelsColor = { 1.0, 1.0, 0.0 }
        }
    },
    Tag = { "planet_solarSystem", "planet_terrestrial" },
    GUI = {
        Path = "/Solar System/Planets/Mercury"
    }
}

local MercuryLabel = {
    Identifier = "MercuryLabel",
    Parent = Mercury.Identifier,
    Renderable = {
        Enabled = false,
        Type = "RenderableLabels",
        LabelText = "Mercury",
        FontSize = 100.0,
        LabelSize = 8.3,
        LabelMaxSize = 100.0,
        LabelMinSize = 1.0,
        LabelOrientationOption = "Camera View Direction",
        BlendMode = "Additive"
    },
    Tag = { "solarsystem_labels" },
    GUI = {
        Name = "Mercury Label",
        Path = "/Solar System/Planets/Mercury"
    }
}

assetHelper.registerSceneGraphNodesAndExport(asset, { Mercury, MercuryLabel })
