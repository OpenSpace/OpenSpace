local sunTransforms = asset.require("scene/solarsystem/sun/transforms")
local sunAsset = asset.require("scene/solarsystem/sun/sun")

local tf = asset.resource("scene/solarsystem/heliosphere/bastille_day/transferfunctions/mas-mhd-r-squared.txt")

local densityDirectory = "C:/OpenSpace/sync/temp/corona";

local SunRadius = 6.957E8

local CoronaOneTimestep = {
  Identifier = "corona-one-timestep",
  -- TODO Elon: 21 April 2022. Interaction sphere should not depend on the transform scale.
  -- InteractionSphere = sunAsset.Sun.Renderable.Radii[1] * 1.05,
  InteractionSphere = 1 / 695700000,
  Parent = sunTransforms.SunIAU.Identifier,
  Transform = {
    Rotation = {
      Type = "FixedRotation",
      XAxis = { -1.0, 0.0, 0.0 },
      YAxis = { 0.0, 1.0, 0.0 },
      ZAxis = { 0.0, 0.0, -1.0 }
    },
    Scale = {
      Type = "StaticScale",
      Scale = SunRadius
    }
  },
  Renderable = {
    Type = "RenderableTimeVaryingVolume",
    StepSize = 0.004,
    Brightness = 0.3,
    TransferFunction = tf, --asset.resource("scene/solarsystem/heliosphere/bastille_day/transferfunctions/mas-mhd-r-squared.txt"),
    SourceDirectory = densityDirectory,
    GridType = "Spherical",
    SecondsBefore = 24 * 60 * 60 * 365 * 100,
    SecondsAfter = 24 * 60 * 60 * 365 * 100,
    Dimensions = { 100, 100, 128 },
    InvertDataAtZ = true
  },
  GUI = {
    Name = "Corona Density",
    Path = "/Solar System/Sun",
    Description = [[Volumetric rendering for the bastille day CME event. This asset
      contain data from 2000-07-14 08:33 to 2000-07-14 11:49]]
  }
}

local ToggleCorona = {
  Identifier = "os.bastilleday.corona.toggelcorona",
  Name = "Toggle volume",
  Command = [[
    if openspace.propertyValue("Scene.corona-one-timestep.Renderable.Enabled") then
      openspace.setPropertyValueSingle(
        "Scene.corona-one-timestep.Renderable.Fade",
        0.0,
        openspace.propertyValue("OpenSpaceEngine.FadeDuration"),
        "Linear",
        'openspace.setPropertyValueSingle("Scene.corona-one-timestep.Renderable.Enabled", false)'
      )
    else
      openspace.setPropertyValueSingle("Scene.corona-one-timestep.Renderable.Enabled", true)
      openspace.setPropertyValueSingle(
        "Scene.corona-one-timestep.Renderable.Fade",
        1.0,
        openspace.propertyValue("OpenSpaceEngine.FadeDuration"),
        "Linear"
      )
    end
  ]],
  Documentation = "Toggle volume rendering of CME",
  GuiPath = "/Corona",
  IsLocal = false
}


asset.onInitialize(function()
  openspace.action.registerAction(ToggleCorona)
  openspace.addSceneGraphNode(CoronaOneTimestep)
end)

asset.onDeinitialize(function()
  openspace.removeSceneGraphNode(CoronaOneTimestep)
  openspace.action.removeAction(ToggleCorona)
end)

asset.export(CoronaOneTimestep)
asset.export("ToggleCorona", ToggleCorona.Identifier)



asset.meta = {
  Name = "Predictive Science Inc. Volume Rendering Bastille Day",
  Version = "1.1",
  Description = "Volumetric rendering for the bastille day CME event",
  Author = "CCMC, OpenSpace team",
  URL = "https://dx.doi.org/10.3847/1538-4357/aab36d",
  License = "CC-BY"
}
