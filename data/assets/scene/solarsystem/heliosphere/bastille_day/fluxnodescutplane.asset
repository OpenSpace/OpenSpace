local assetHelper = asset.require("util/asset_helper")
local propertyHelper = asset.require("util/property_helper")
local transforms = asset.require("scene/solarsystem/sun/transforms_heliosphere")
local rot = asset.require("./carringtonToHEEQRotation.asset")

local TexturesPathEquatorial = asset.syncedResource({
Type = "HttpSynchronization",
  Name = "cutplanes_textures",
  Identifier = "cutplanes_textures",
  Version = 1
})

local TexturesPathMeridial = asset.syncedResource({
  Type = "HttpSynchronization",
  Name = "cutplane_meridial_textures",
  Identifier = "cutplane_meridial_textures",
  Version = 1
})

local EquatorialCutplane = {
  Identifier = "EquatorialCutplane-bastille-day-2000",
  Parent = transforms.HEEQ180ReferenceFrame.Identifier,
  Transform = {
    Rotation = rot.CarringtonLongitudeToHEEQ180Rotation
  },
  Renderable = {
    Type = "RenderablePlaneTimeVaryingImage",
    Size = 1.57E11,
    Enabled = true,
    SourceFolder = TexturesPathEquatorial,
    BlendMode = "Normal",
    MirrorBackside = false,
    Opacity = 0.7
  },
  GUI = {
    Name = "Cutplane Equitorial",
    Path = "/Solar System/Heliosphere/Bastille Day 2000",
    Description = "Equatorial cutplane sequence for the bastille day CME event. This asset contains data from 2000-07-14 08:38 to 2000-07-14 12:00"
  }
}

local MeridialCutplane = {
  Identifier = "MeridialCutplane-bastille-day-2000",
  Parent = transforms.HEEQ180ReferenceFrame.Identifier,
  Transform = {
    Rotation = {
      Type = "StaticRotation",
      Rotation = { -math.pi/2, -math.pi, 0.0 }
    }
  },
  Renderable = {
    Type = "RenderablePlaneTimeVaryingImage",
    Size = 1.57E11,
    Enabled = true,
    SourceFolder = TexturesPathMeridial,
    BlendMode = "Normal",
    MirrorBackside = false,
    Opacity = 0.7
  },
  GUI = {
    Name = "Cutplane Meridial",
    Path = "/Solar System/Heliosphere/Bastille Day 2000",
    Description = "Meridial cutplane sequence for the bastille day CME event. This asset contains data from 2000-07-14 08:38 to 2000-07-14 12:00"
  }
}

local toggle_equatorial = {
  Identifier = "fluxnodescutplane.toggle_equatorial",
  Name = "Toggle equatorial cutplane",
  Command = propertyHelper.invert("Scene.EquatorialCutplane-bastille-day-2000.Renderable.Enabled"),
  Documentation = "Toggle equatorial cutplane of CME",
  GuiPath = "/Bastille-Day 2000",
  IsLocal = false
}
local toggle_meridial = {
  Identifier = "fluxnodescutplane.toggle_meridial",
  Name = "Toggle meridial cutplane",
  Command = propertyHelper.invert("Scene.MeridialCutplane-bastille-day-2000.Renderable.Enabled"),
  Documentation = "Toggle meridial cutplane of CME",
  GuiPath = "/Bastille-Day 2000",
  IsLocal = false
}

asset.onInitialize(function ()
  openspace.action.registerAction(toggle_equatorial)
  openspace.action.registerAction(toggle_meridial)
end)
asset.onDeinitialize(function ()
  openspace.action.removeAction(toggle_equatorial.Identifier)
  openspace.action.removeAction(toggle_meridial.Identifier)
end)
assetHelper.registerSceneGraphNodesAndExport(asset, { EquatorialCutplane, MeridialCutplane})

asset.meta = {
  Name = "Predictive Science Inc. Cutplanes Bastille Days",
  Version = "1.0",
  Description = [[Cutplanes for the bastille day CME event]],
  Author = "CCMC, Christian Adamsson, Emilie Ho",
  URL = "https://dx.doi.org/10.3847/1538-4357/aab36d",
  License = "CC-BY"
}
