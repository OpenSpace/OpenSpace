local util = asset.require('./utility_functions')
local flyHome = asset.require('./fly_home_alternatives')

---------------------------------------------------------------- 
-- STATES
----------------------------------------------------------------
local startState = {
  Identifier = "Start",
}

local homeState = {
  Identifier = "Home",
  Enter = [[
    ]] .. util.setOrbitSpeedFactor(0.4) .. [[
    ]] .. util.startOrbiting() .. [[
    ]] .. util.orbitOnArrival() .. [[
  ]],
  Exit = util.stopOrbiting()
}

-- An empty state that wil just be used to show a page in the GUI where the 
-- user can fly to the planets in the solar system
local solarSystemState = {
  Identifier = "SolarSystem"
}

-- Missions
local substateApollo = asset.require('./substates/missions/apollo')
local substateMarsRovers = asset.require('./substates/missions/mars_rovers')
local substateCassini = asset.require('./substates/missions/cassini')
local substateVoyagerPioneer = asset.require('./substates/missions/voyager_pioneer')

-- Others
local substateCBR = asset.require('./substates/cbr')
local substateExoplanets = asset.require('./substates/exoplanets')

local states = {
  startState,
  homeState,
  solarSystemState
}

util.appendTable(states, substateApollo.states)
util.appendTable(states, substateMarsRovers.states)
util.appendTable(states, substateCassini.states)
util.appendTable(states, substateVoyagerPioneer.states)
util.appendTable(states, substateCBR.states)
util.appendTable(states, substateExoplanets.states)

---------------------------------------------------------------- 
-- TRANSITIONS
----------------------------------------------------------------
local transitions = {
  {
    From = "Start",
    To = "Home",
    Action = flyHome.cameraPath
  },
  -- SolarSystem <-> Home
  {
    From = "SolarSystem",
    To = "Home",
    Action = flyHome.cameraPath
  },
  {
    From = "Home",
    To = "SolarSystem"
  },
  -- The rest are in the substates
}

util.appendTable(transitions, substateApollo.transitions)
util.appendTable(transitions, substateMarsRovers.transitions)
util.appendTable(transitions, substateCassini.transitions)
util.appendTable(transitions, substateVoyagerPioneer.transitions)
util.appendTable(transitions, substateCBR.transitions)
util.appendTable(transitions, substateExoplanets.transitions)

asset.onInitialize(function()
    -- OBS: the following line should be set in the profile
    openspace.time.setPause(true) -- However, this does not work

    openspace.statemachine.createStateMachine(states, transitions, "Start")
    openspace.statemachine.goToState("Home")
end)
