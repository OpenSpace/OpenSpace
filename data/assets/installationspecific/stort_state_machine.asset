local util = asset.require('./utility_functions')

local defaultTime = 654728475 -- 2020 Sep 9, 9:00

---------------------------------------------------------------- 
-- SOLAR SYSTEM STATE - to reduce number of transitions
----------------------------------------------------------------
local solarTargetDistance = 3E11
local solarsystemflightDuration = 9 -- seconds

local solarSystemState = {
  Identifier = "SolarSystem",
  -- Enter function use for all transitions to the solar system.
  -- So, no explicit transition should be needed
  Enter = [[
    ]] .. util.disableLinearFlight() .. [[
    ]] .. util.setCurveType("AvoidCollision") .. [[
    ]] .. util.setOrbitSpeedFactor(0.4) .. [[
    ]] .. util.orbitOnArrival() .. [[
    openspace.pathnavigation.goToHeight(
      'Sun', 
      ]] .. solarTargetDistance .. [[,
      ]] .. solarsystemflightDuration .. [[
    )
  ]],
  Exit = [[]]
}

---------------------------------------------------------------- 
-- 1. EARTH STATE
----------------------------------------------------------------
local substateEarth = asset.require('./substates/earth')

---------------------------------------------------------------- 
-- 2. MARS STATE
----------------------------------------------------------------
local substateMars = asset.require('./substates/mars')

---------------------------------------------------------------- 
-- 3. CERES STATE
----------------------------------------------------------------
-- Left out for now (low prio)

---------------------------------------------------------------- 
-- 4. JUPITER STATE
----------------------------------------------------------------
local substateJupiter = asset.require('./substates/jupiter')

----------------------------------------------------------------
-- 5. SATURN STATE
----------------------------------------------------------------
local substateSaturn = asset.require('./substates/saturn')

---------------------------------------------------------------- 
-- 6. PLUTO STATE
----------------------------------------------------------------
local substatePluto = asset.require('./substates/pluto')

----------------------------------------------------------------
-- 7. VOYAGER AND PIONEER STATE
----------------------------------------------------------------
local substateVoyagerPioneer = asset.require('./substates/voyagerpioneer.asset')

----------------------------------------------------------------
-- 8. COSMIC BACKGROUND RADIATION STATE
----------------------------------------------------------------
local substateCBR = asset.require('./substates/cbr.asset')

---------------------------------------------------------------- 
-- COMBINE STATES AND TRANSITIONS
----------------------------------------------------------------
local states = {
  solarSystemState
}

util.appendTable(states, substateEarth.states)
util.appendTable(states, substateMars.states)
util.appendTable(states, substateJupiter.states)
util.appendTable(states, substateSaturn.states)
util.appendTable(states, substatePluto.states)
util.appendTable(states, substateVoyagerPioneer.states)
util.appendTable(states, substateCBR.states)

-- @TODO: we probably want indivudual behavior for the transitions from the 
-- different states
local transitions = {
  -- 1. Earth - SolarSystem
  {
    From = "Earth",
    To = "SolarSystem"
  },
  -- 2. Mars - SolarSystem
  {
    From = "Mars",
    To = "SolarSystem"
  },
  -- 4. Jupiter - SolarSystem
  {
    From = "Jupiter",
    To = "SolarSystem"
  },
  -- 5. Saturn - SolarSystem
  {
    From = "Saturn",
    To = "SolarSystem"
  },
  -- 6. Pluto - SolarSystem
  {
    From = "Pluto",
    To = "SolarSystem"
  },
  -- 7. Voyager and Pioneer - SolarSystem
  -- In substate
  -- 8. Cosmic Background Radiation - SolarSystem
  {
    From = "CBR",
    To = "SolarSystem"
  }
}

-- Add transitions within each substate
util.appendTable(transitions, substateEarth.transitions)
util.appendTable(transitions, substateMars.transitions)
util.appendTable(transitions, substateJupiter.transitions)
util.appendTable(transitions, substateSaturn.transitions)
util.appendTable(transitions, substatePluto.transitions)
util.appendTable(transitions, substateVoyagerPioneer.transitions)
util.appendTable(transitions, substateCBR.transitions)

asset.onInitialize(function()
    openspace.statemachine.createStateMachine(states, transitions, "SolarSystem")

    -- OBS: the following line should be set in the profile
    openspace.time.setPause(true) -- However, this does not work
end)
