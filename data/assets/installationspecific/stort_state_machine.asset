local util = asset.require('./utility_functions')

---------------------------------------------------------------- 
-- STATES
----------------------------------------------------------------
local solarTargetDistance = 1079252848800 -- 1 lighthour
local solarsystemflightDuration = 9 -- seconds

local homeState = {
  Identifier = "Home",
  -- Enter function use for all transitions to the solar system.
  -- So, no explicit transition should be needed
  Enter = [[
    ]] .. util.disableLinearFlight() .. [[
    ]] .. util.setCurveType("AvoidCollision") .. [[
    ]] .. util.setOrbitSpeedFactor(0.4) .. [[
    ]] .. util.orbitOnArrival() .. [[
    openspace.pathnavigation.goToHeight(
      'Sun', 
      ]] .. solarTargetDistance .. [[,
      ]] .. solarsystemflightDuration .. [[
    )
  ]],
  Exit = [[]]
}

-- An empty state that wil just be used to show a page in the GUI where the 
-- user can fly to the planets in the solar system
local solarSystemState = {
  Identifier = "SolarSystem"
}

local substateMoon = asset.require('./substates/missions/moon')

local substateMars = asset.require('./substates/missions/mars')

local substateSaturn = asset.require('./substates/missions/saturn')

local substateVoyagerPioneer = asset.require('./substates/missions/voyagerpioneer.asset')

local substateCBR = asset.require('./substates/cbr.asset')

local states = {
  homeState,
  solarSystemState
}

util.appendTable(states, substateMoon.states)
util.appendTable(states, substateMars.states)
util.appendTable(states, substateSaturn.states)
util.appendTable(states, substateVoyagerPioneer.states)
util.appendTable(states, substateCBR.states)

---------------------------------------------------------------- 
-- TRANSITIONS
----------------------------------------------------------------
local transitions = {
  -- SolarSystem <-> Home
  {
    From = "SolarSystem",
    To = "Home"
  },
  {
    From = "Home",
    To = "SolarSystem"
  },
  -- Moon <-> Home -- In substate 
  -- Mars <-> Home
  {
    From = "Mars",
    To = "Home"
  },
  -- Saturn <-> Home
  {
    From = "Saturn",
    To = "Home"
  }
  -- Voyager and Pioneer <-> Home -- In substate

  -- Cosmic Background Radiation <-> Home -- In substate
}

-- Add transitions within each substate
util.appendTable(transitions, substateMoon.transitions)
util.appendTable(transitions, substateMars.transitions)
util.appendTable(transitions, substateSaturn.transitions)
util.appendTable(transitions, substateVoyagerPioneer.transitions)
util.appendTable(transitions, substateCBR.transitions)

asset.onInitialize(function()
    openspace.statemachine.createStateMachine(states, transitions, "Home")

    -- OBS: the following line should be set in the profile
    openspace.time.setPause(true) -- However, this does not work
end)
