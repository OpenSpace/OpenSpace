local assetHelper = asset.require('util/asset_helper')
local transforms = asset.require('scene/solarsystem/planets/mars/transforms')
local sunTransforms = asset.require('scene/solarsystem/sun/transforms')
local kernels = asset.require('scene/solarsystem/planets/mars/mar097').Kernels

local model = asset.syncedResource({
  Name = "Deimos Model",
  Type = "HttpSynchronization",
  Identifier = "deimos_model",
  Version = 1
})

local DeimosModel = {
  Identifier = "DeimosModel",
  Parent = transforms.MarsBarycenter.Identifier,
  Transform = {
    Rotation = {
      Type = "SpiceRotation",
      SourceFrame = "IAU_DEIMOS",
      DestinationFrame = "GALACTIC",
      Kernels = kernels
    },
    Translation = {
      Type = "SpiceTranslation",
      Target = "DEIMOS",
      Observer = "MARS BARYCENTER",
      Kernels = kernels
    }
  },
  Renderable = {
    Type = "RenderableModel",
    GeometryFile = model .. "/Deimos_1_1000.glb",
    ModelScale = 2000,
    AmbientIntensity = 0.02,
    SpecularIntensity = 0.0,
    LightSources = {
      {
        Type = "SceneGraphLightSource",
        Identifier = "Sun",
        Node = sunTransforms.SolarSystemBarycenter.Identifier,
        Intensity = 1.0
      }
    },
    PerformShading = true,
    DisableFaceCulling = true
  },
  Tag = { "moon_solarSystem", "moon_terrestrial", "moon_mars" },
  GUI = {
    Name = "Deimos (Model)",
    Path = "/Solar System/Planets/Mars",
    Description = [[One of two moons of Mars.]]
  }
}

assetHelper.registerSceneGraphNodesAndExport(asset, { DeimosModel })

asset.meta = {
  Name = "Deimos Model",
  Version = "1.0",
  Description = [[ RenderableModel for Deimos.]],
  Author = "OpenSpace Team",
  URL = "http://openspaceproject.com",
  License = "MIT license",
  Identifiers = {"Deimos"}
}
