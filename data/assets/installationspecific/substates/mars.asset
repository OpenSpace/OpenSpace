local util = asset.require('./../utility_functions')

----------------------------------------------------------------
-- STATES
----------------------------------------------------------------
local marsTargetDistance = 7E6

local marsState = {
  Identifier = "Mars",
  Enter = [[
    ]] .. util.setOrbitSpeedFactor(0.4) .. [[
    ]] .. util.orbitOnArrival() .. [[
  ]],
  Exit = [[
    ]] .. util.stopOrbiting() .. [[
  ]]
}

local goToMarsOverview = [[
  ]] .. util.setCurveType("ZoomOutOverview") .. [[
  openspace.time.setPause(true)
  openspace.pathnavigation.goTo('Mars', true)
  ]] .. util.changeAnchor('Mars', 1) .. [[
]]

-----
-- Valles Marineris
-----
local vallesMarinerisTargetDistance = 7E6

local vallesMarinerisTiltedNavState = [[{
  Anchor = "Mars", ReferenceFrame= "Mars",
  Position = {1153974.125, -3147836.75, -764025.4375},
  Up = { 0.10838311165571213, -0.19677796959877014, 0.9744390845298767 },
  Pitch = 1.1448750495910645, Yaw = -0.07529527693986893
}]]

local vallesMarinerisAboveNavState = [[{
  Anchor = "Mars", ReferenceFrame = "Mars",
  Position = { 1986306.875, -4939418.5, -880679.875 },
  Up =  { 0.23815040290355682, -0.07685504853725433, 0.9681826829910278 },
  Pitch = -1.0651531739958031e-12, Yaw = 3.5783407487111063e-12
}]]

local goToVMClose = [[
  ]] .. util.setCurveType("AvoidCollisionWithLookAt") .. [[
  openspace.time.setPause(true)
  openspace.pathnavigation.generatePath({
    TargetType = "NavigationState", 
    NavigationState = ]] .. vallesMarinerisTiltedNavState .. [[
  })
]]

local goToVMOverview = [[
  ]] .. util.setCurveType("AvoidCollisionWithLookAt") .. [[
  openspace.time.setPause(true)
  openspace.pathnavigation.generatePath({
    TargetType = "NavigationState", 
    NavigationState = ]] .. vallesMarinerisAboveNavState .. [[
  })
]]

local vallesMarinerisCloseState = {
  Identifier = "VallesMarinerisClose",
  Enter = [[
    ]] .. util.setOrbitSpeedFactor(0.6) .. [[
    ]] .. util.orbitOnArrival() .. [[
    ]] .. util.enableRoll() .. [[
  ]],
  Exit = [[
    ]] .. util.stopOrbiting() .. [[
    ]] .. util.disableRoll() .. [[
  ]]
}

local vallesMarinerisOverviewState = {
  Identifier = "VallesMarinerisOverview",
  Enter = [[
    ]] .. util.enableRoll() .. [[
    ]] .. util.stopOrbiting() .. [[
  ]],
  Exit = util.disableRoll()
}

-----
-- Olympus Mons
-----
local olympusMonsTargetDistance = 7E6
local olympusMonsGeo = {
  lat = 18.65, lon = 226.2, height = 1.5e6
}

-- TODO: add this and a "orbit at constant latitude option?"
-- local olympusMonsNavState = [[{ 
--   "ReferenceFrame" = "Mars", 
--   "Pitch" = 0.822551, 
--   "Anchor" = "Mars", 
--   "Yaw" = -0.100134, 
--   "Position" = { -2998234.923265, -2272086.123151, 837612.478657 },
--   "Up" = { 0.612547, -0.634578, 0.471272 } 
-- }]];

local goToOlympusMons = [[
  ]] .. util.setCurveType("AvoidCollisionWithLookAt") .. [[
  openspace.time.setPause(true)
  openspace.globebrowsing.flyToGeo(
    "Mars", 
    ]] .. tostring(olympusMonsGeo.lat) .. [[,
    ]] .. tostring(olympusMonsGeo.lon) .. [[,
    ]] .. tostring(olympusMonsGeo.height) .. [[
  )
]]

local olympusMonsState = {
  Identifier = "OlympusMons",
  Enter = [[
    ]] .. util.enableRoll() .. [[
    ]] .. util.stopOrbiting() .. [[
  ]],
  Exit = util.disableRoll()
}

-----
-- Curiosity
-----
local curiosityTargetDistance = 7E6

local curiosityState = {
  Identifier = "Curiosity",
  Enter = [[
    ]] .. util.setOrbitSpeedFactor(0.4) .. [[
    ]] .. util.orbitOnArrival() .. [[
  ]],
  Exit = [[
    ]] .. util.stopOrbiting() .. [[
  ]]
}

local states = {
  marsState,
  vallesMarinerisCloseState,
  vallesMarinerisOverviewState,
  olympusMonsState,
  curiosityState
}

----------------------------------------------------------------
-- TRANSITIONS within this substate
----------------------------------------------------------------

local transitions = {
  -- Valles Marineris - overview
  {
    From = "Mars",
    To = "VallesMarinerisOverview",
    Action = goToVMOverview
  },
  {
    From = "VallesMarinerisOverview",
    To = "Mars",
    Action = goToMarsOverview
  },
  {
    From = "VallesMarinerisOverview",
    To = "VallesMarinerisClose",
    Action = goToVMClose
  },
  {
    From = "VallesMarinerisClose",
    To = "VallesMarinerisOverview",
    Action = goToVMOverview
  },
  {
    From = "VallesMarinerisOverview",
    To = "OlympusMons",
    Action = goToOlympusMons
  },
  {
    From = "OlympusMons",
    To = "VallesMarinerisOverview",
    Action = goToVMOverview
  },
    -- Valles Marineris - close
  {
    From = "Mars",
    To = "VallesMarinerisClose",
    Action = goToVMClose
  },
  {
    From = "VallesMarinerisClose",
    To = "Mars",
    Action = goToMarsOverview
  },
  {
    From = "VallesMarinerisClose",
    To = "OlympusMons",
    Action = goToOlympusMons
  },
  {
    From = "OlympusMons",
    To = "VallesMarinerisClose",
    Action = goToVMClose
  },
  -- Olympus Mons
  {
    From = "Mars",
    To = "OlympusMons",
    Action = goToOlympusMons
  },
  {
    From = "OlympusMons",
    To = "Mars",
    Action = goToMarsOverview
  },
  -- Curiosity
  -- TODO: curiosity + transitions
  {
    From = "Mars",
    To = "Curiosity",
    Action = [[]]
  },
  {
    From = "Curiosity",
    To = "Mars",
    Action = goToMarsOverview
  },
  -- Back to SolarSystem from substates
  {
    From = "VallesMarinerisOverview",
    To = "SolarSystem"
  },
  {
    From = "VallesMarinerisClose",
    To = "SolarSystem"
  },
  {
    From = "OlympusMons",
    To = "SolarSystem"
  },
  {
    From = "Curiosity",
    To = "SolarSystem"
  }
}

asset.export("states", states)
asset.export("transitions", transitions)
