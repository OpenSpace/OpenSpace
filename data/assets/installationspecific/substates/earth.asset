local util = asset.require('./../utility_functions')

----------------------------------------------------------------
-- STATES
----------------------------------------------------------------
local earthTargetDistance = 1.5E7

local earthState = {
  Identifier = "Earth",
  Enter = [[
    ]] .. util.setOrbitSpeedFactor(0.4) .. [[
    ]] .. util.orbitOnArrival() .. [[
  ]],
  Exit = [[
    ]] .. util.stopOrbiting() .. [[
  ]]
}

local moonTargetDistance = 1.5E7

local moonState = {
  Identifier = "Moon",
  Enter = [[
    ]] .. util.setOrbitSpeedFactor(0.4) .. [[
    ]] .. util.orbitOnArrival() .. [[
  ]],
  Exit = [[
    ]] .. util.stopOrbiting() .. [[
  ]]
}

local apolloTargetDistance = 1.5E7

local apolloState = {
  Identifier = "Apollo",
  Enter = [[
    ]] .. util.setOrbitSpeedFactor(0.4) .. [[
    ]] .. util.orbitOnArrival() .. [[
  ]],
  Exit = [[
    ]] .. util.stopOrbiting() .. [[
  ]]
}

local states = { earthState, moonState, apolloState }

----------------------------------------------------------------
-- TRANSITIONS within this substate
----------------------------------------------------------------
local transitions = {
  -- Transition to this state
  {
    From = "SolarSystem",
    To = "Earth",
    Action = [[
      ]] .. util.disableLinearFlight() .. [[
      ]] .. util.setCurveType("ZoomOutOverview") .. [[
      openspace.time.setPause(true)
      openspace.pathnavigation.goTo('Earth', true)
    ]]
  },
  -- Moon
  {
    From = "Earth",
    To = "Moon",
    Action =  [[
      ]] .. util.disableLinearFlight() .. [[
      ]] .. util.setCurveType("ZoomOutOverview") .. [[
      openspace.time.setPause(true)
      openspace.pathnavigation.goTo('Moon', true)
    ]]
  },
  {
    From = "Moon",
    To = "Earth",
    Action = [[
      ]] .. util.disableLinearFlight() .. [[
      ]] .. util.setCurveType("ZoomOutOverview") .. [[
      openspace.time.setPause(true)
      openspace.pathnavigation.goTo('Earth', true)
    ]]
  },
  -- Apollo
  {
    From = "Earth",
    To = "Apollo",
    Action =  [[]]
  },
  {
    From = "Apollo",
    To = "Earth",
    Action =  [[
      ]] .. util.disableLinearFlight() .. [[
      ]] .. util.setCurveType("ZoomOutOverview") .. [[
      openspace.time.setPause(true)
      openspace.pathnavigation.goTo('Earth', true)
    ]]
  },
  -- Back to SolarSystem from substates
  {
    From = "Moon",
    To = "SolarSystem"
  },
  {
    From = "Apollo",
    To = "SolarSystem"
  }
}

asset.export("states", states)
asset.export("transitions", transitions)
