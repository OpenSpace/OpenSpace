local util = asset.require('./../../utility_functions')
local flyHome = asset.require('./../../fly_home_alternatives')

----------------------------------------------------------------
-- STATES
----------------------------------------------------------------
local cassiniState = {
  Identifier = "Cassini",
  Enter = [[
    ]] .. util.setOrbitSpeedFactor(0.4) .. [[
    ]] .. util.orbitOnArrival() .. [[
  ]],
  Exit = [[
    ]] .. util.stopOrbiting() .. [[
  ]]
}

local huygensState = {
  Identifier = "Huygens",
  Enter = [[
    ]] .. util.setOrbitSpeedFactor(0.4) .. [[
    ]] .. util.orbitOnArrival() .. [[
  ]],
  Exit = [[
    ]] .. util.stopOrbiting() .. [[
  ]]
}

local states = { cassiniState, huygensState }

----------------------------------------------------------------
-- TRANSITIONS within this substate
----------------------------------------------------------------
local goToSaturnOverview = [[
  ]] .. util.setCurveType("ZoomOutOverview") .. [[
  openspace.time.setPause(true)
  openspace.pathnavigation.goTo('Saturn', true)
]]

local transitions = {
  -- Transition to/from this state
  {
    From = "Home",
    To = "Cassini",
    Action = goToSaturnOverview
  },
  {
    From = "Cassini",
    To = "Home",
    Action = flyHome.cameraPath
  },
  -- Cassini - Huygens
  {
    From = "Cassini",
    To = "Huygens",
    Action = [[]]
  },
  {
    From = "Huygens",
    To = "Cassini",
    Action = goToSaturnOverview
  },
  -- Back to SolarSystem from substates
  {
    From = "Huygens",
    To = "Home",
    Action = flyHome.cameraPath
  }
}

asset.export("states", states)
asset.export("transitions", transitions)
