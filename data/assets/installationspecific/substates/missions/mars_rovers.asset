local util = asset.require('./../../utility_functions')
local flyHome = asset.require('./../../fly_home_alternatives')
local defaultTime = asset.require('./../../default_time.asset').time

local enterStateSettings = [[
  openspace.setPropertyValueSingle("Scene.Mars.Renderable.Layers.ColorLayers.HiRISE-PSP.Settings.Opacity", 1.0, 2.0); 
]]

local leaveStateSettings = [[
  openspace.setPropertyValueSingle("Scene.Mars.Renderable.Layers.ColorLayers.HiRISE-PSP.Settings.Opacity", 0.0, 1.0);
  -- Disable these, as they might be performance expensive
  openspace.setPropertyValueSingle("Scene.Mars-Curiosity-Rover-Path.Renderable.Enabled", false);
  openspace.setPropertyValueSingle("Scene.Mars-Perseverance-Rover-Path.Renderable.Enabled", false);
]]

----------------------------------------------------------------
-- STATES
----------------------------------------------------------------

local marsRoversState = {
  Identifier = "MarsRovers",
  Enter = [[
    ]] .. util.setOrbitSpeedFactor(0.4) .. [[
    ]] .. util.orbitOnArrival() .. [[
  ]],
  Exit = [[
    ]] .. util.stopOrbiting() .. [[
  ]]
}

local goToMarsOverview = [[
  ]] .. util.setCurveType("ZoomOutOverview") .. [[
  openspace.time.setPause(true)
  openspace.pathnavigation.goTo('Mars', true)
]]

-----
-- Curiosity
-----

-- openspace.globebrowsing.flyToGeo("Mars", -4.664599, 137.421634, 12057);

local galeCrater_TiltedNavState = [[{ 
  Anchor = 'Mars-Curiosity-Handle',
  ReferenceFrame = 'Root',
  Up = { -0.388564, -0.373363, -0.842388 },
  Yaw = -0.024106,
  Pitch = -0.162116,
  Position = { 7470.144476, 112056.853134, -53111.525452 }
}]]

local curiosityState = {
  Identifier = "Curiosity",
  Enter = [[
    openspace.setPropertyValueSingle("Scene.Mars-Curiosity-Rover-Path.Renderable.Enabled", true);
    openspace.setPropertyValueSingle("Scene.Mars.Renderable.Layers.ColorLayers.HiRISE-PSP.Settings.Opacity", 0.0, 10.0);
    ]] .. util.setOrbitSpeedFactor(0.8) .. [[
    ]] .. util.orbitAroundUpOnArrival() .. [[
  ]],
  Exit = [[
    ]] .. util.stopOrbiting() .. [[
    openspace.setPropertyValueSingle("Scene.Mars-Curiosity-Rover-Path.Renderable.Enabled", false);
    ]] .. util.disableRoll() .. [[
  ]]
}

-----
-- Perseverance
-----

-- Go to Perseverance path overview:
-- openspace.globebrowsing.flyToGeo("Mars", 18.433832, 77.450000, -800);

-- Perseverance tilted state 
local perseverance_TiltedNavState_Path = [[{ 
  Up = { 0.444587, 0.644127, -0.622450 }, 
  ReferenceFrame = 'Root', 
  Anchor = 'Mars-Perseverance-Handle', 
  Yaw = -0.005563, 
  Position = { 530.380697, -754.288422, -401.730408 }, 
  Pitch = -0.000264 
}]]

local perseverance_TiltedNavState_Rover = [[{ 
  Up = {0.406661, 0.895815, -0.179284 }, 
  Yaw = -0.012316, 
  Position = { -8.458007, 4.433480, 2.967551 }, 
  Pitch = 0.118225, 
  Anchor = 'PerseveranceModel', 
  ReferenceFrame = 'PerseveranceModel' 
}]]

-- TODO: Just keep one state per rover and add a scripscheudler that flies to see it from above and 
-- that looks at the rover

local perseveranceState = {
  Identifier = "Perseverance",
  Enter = [[
    ]] .. util.stopOrbiting() .. [[
    openspace.setPropertyValueSingle("Scene.Mars-Perseverance-Rover-Path.Renderable.Enabled", true);
    openspace.setPropertyValueSingle("Scene.Mars-Perseverance-Rover-Path.Renderable.ForceUpdateData", nil); 
    openspace.setPropertyValueSingle("Scene.Mars.Renderable.Layers.ColorLayers.HiRISE-PSP.Settings.Opacity", 1.0, 2.0); 
    ]] .. util.setOrbitSpeedFactor(0.4) .. [[
    ]] .. util.orbitAroundUpOnArrival() .. [[
  ]],
  Exit = [[
    openspace.setPropertyValueSingle("Scene.Mars-Perseverance-Rover-Path.Renderable.Enabled", false);
    ]] .. util.stopOrbiting() .. [[
    ]] .. util.disableRoll() .. [[
  ]]
}

local states = {
  marsRoversState,
  curiosityState,
  perseveranceState
}

----------------------------------------------------------------
-- TRANSITIONS within this substate
----------------------------------------------------------------

-- Note: time is set on the webpage
local enterTransition = [[ 
  ]] .. enterStateSettings .. [[
  ]] .. goToMarsOverview .. [[
]]

local leaveTransition = [[
  ]] .. leaveStateSettings .. [[
  ]] .. flyHome.cameraPath .. [[
]]

local toPerseveranceTransition = [[
  ]] .. util.enableRoll() .. [[
  ]] .. util.setCurveType("ZoomOutOverview") .. [[
  openspace.pathnavigation.goToNavigationState( ]] .. perseverance_TiltedNavState_Path .. [[)
]]

local toCuriosityTransition = [[
  ]] .. util.enableRoll() .. [[
  ]] .. util.setCurveType("ZoomOutOverview") .. [[
  openspace.pathnavigation.goToNavigationState( ]] .. galeCrater_TiltedNavState .. [[)
]]

local betweenGaleAndJezero_NavState = [[{ 
  Up = { -0.887533, -0.263131, -0.378216 }, 
  ReferenceFrame = 'Mars',
  Anchor = 'Mars',
  Position = { -2949968.384396, 5345824.976367, 3203314.816664 }, 
  Pitch = 0.007257, 
  Yaw = -0.000050 
}]]

-- TODO: OBS! The application time mode does not actually work right now...
-- So this will only trigger the last transition anyways :( 
-- local galeToJezeroTransition = [[
--   openspace.scriptScheduler.clear();
--   openspace.scriptScheduler.setModeApplicationTime();
--   local now = openspace.time.currentApplicationTime();

--   openspace.scriptScheduler.loadScheduledScript(
--     tostring(now), -- 0 seconds after this script was triggered
--     "openspace.pathnavigation.goToNavigationState( ]] .. util.removeLineBreaks(betweenGaleAndJezero_NavState) .. [[);"
--   );
--   openspace.scriptScheduler.loadScheduledScript(
--     tostring(now + 10), -- 10 seconds after this script was triggered
--     "]] .. util.removeLineBreaks(toPerseveranceTransition) .. [[;"
--   );
-- ]]

local transitions = {
  -- Transition to/from this state
  {
    From = "Home",
    To = "MarsRovers",
    Action = enterTransition
  },
  {
    From = "MarsRovers",
    To = "Home",
    Action = leaveTransition
  },
  -- Curiosity
  {
    From = "MarsRovers",
    To = "Curiosity",
    Action = toCuriosityTransition
  },
  {
    From = "Curiosity",
    To = "MarsRovers",
    Action = goToMarsOverview
  },
  {
    From = "Curiosity",
    To = "Perseverance",
    Action = toPerseveranceTransition -- TODO: update with custom (to avoid crashing into Mars)
  },
  {
    From = "Perseverance",
    To = "Curiosity",
    Action = toCuriosityTransition -- TODO: update with custom (to avoid crashing into Mars)
  },
  -- Perseverance
  {
    From = "MarsRovers",
    To = "Perseverance",
    Action = toPerseveranceTransition
  },
  {
    From = "Perseverance",
    To = "MarsRovers",
    Action = goToMarsOverview
  },
  -- Back to SolarSystem from substates
  {
    From = "Curiosity",
    To = "Home",
    Action = leaveTransition
  },
  {
    From = "Perseverance",
    To = "Home",
    Action = leaveTransition
  }
}

asset.export("states", states)
asset.export("transitions", transitions)
