local util = asset.require('./../../utility_functions')
local flyHome = asset.require('./../../fly_home_alternatives')
local defaultTime = asset.require('./../../default_time.asset').time

local enterStateSettings = [[
  openspace.setPropertyValueSingle("Scene.Mars.Renderable.Layers.ColorLayers.HiRISE-PSP.Settings.Opacity", 1.0, 2.0); 
  -- Ugly fix to make sure they update their height
  openspace.setPropertyValueSingle("Scene.Mars-Perseverance-Landing-Position.Translation.UseHeightmap", false);
  openspace.setPropertyValueSingle("Scene.Mars-Perseverance-Landing-Position.Translation.UseHeightmap", true);
  openspace.setPropertyValueSingle("Scene.Mars-Perseverance-Handle.Translation.UseHeightmap", false);
  openspace.setPropertyValueSingle("Scene.Mars-Perseverance-Handle.Translation.UseHeightmap", true);
]]

local leaveStateSettings = [[
  openspace.setPropertyValueSingle("Scene.Mars.Renderable.Layers.ColorLayers.HiRISE-PSP.Settings.Opacity", 0.0, 1.0);
  -- Disable these, as they might be performance expensive
  openspace.setPropertyValueSingle("Scene.Mars-Curiosity-Rover-Path.Renderable.Enabled", false);
  openspace.setPropertyValueSingle("Scene.Mars-Perseverance-Rover-Path.Renderable.Enabled", false);
]]

----------------------------------------------------------------
-- STATES
----------------------------------------------------------------

local marsRoversState = {
  Identifier = "MarsRovers",
  Enter = [[
    ]] .. util.setOrbitSpeedFactor(0.4) .. [[
    ]] .. util.orbitOnArrival() .. [[
  ]],
  Exit = [[
    ]] .. util.stopOrbiting() .. [[
  ]]
}

local goToMarsOverview = [[
  ]] .. util.setCurveType("ZoomOutOverview") .. [[
  openspace.time.setPause(true)
  openspace.pathnavigation.goTo('Mars', true)
]]

-----
-- Curiosity
-----
local curiosityState = {
  Identifier = "Curiosity",
  Enter = [[
    openspace.setPropertyValueSingle("Scene.Mars-Curiosity-Rover-Path.Renderable.Enabled", true);
    ]] .. util.setOrbitSpeedFactor(0.4) .. [[
    ]] .. util.orbitOnArrival() .. [[
  ]],
  Exit = [[
    ]] .. util.stopOrbiting() .. [[
    openspace.setPropertyValueSingle("Scene.Mars-Curiosity-Rover-Path.Renderable.Enabled", false);
  ]]
}

-----
-- Perseverance
-----

-- Go to Perseverance path overview:
-- openspace.globebrowsing.goToGeo("Mars", 18.433832, 77.450000, -800);

-- Tilted navigation state
-- openspace.pathnavigation.goToNavigationState({ 
--   Position = { 145.012710, -727.768585, -662.409943 },
--   ReferenceFrame = "Root", 
--   Pitch = -0.030899, 
--   Yaw = -0.028713, 
--   Anchor = "Mars-Perseverance-Handle", 
--   Up = { 0.572586, 0.611321, -0.546290 } 
-- })

-- TODO: fade in renderables?
local perseveranceState = {
  Identifier = "Perseverance",
  Enter = [[
    ]] .. util.stopOrbiting() .. [[
    openspace.setPropertyValueSingle("Scene.Mars-Perseverance-Rover-Path.Renderable.Enabled", true);
    openspace.globebrowsing.flyToGeo("Mars", 18.433832, 77.45000, -800);
  ]],
  Exit = [[
    openspace.setPropertyValueSingle("Scene.Mars-Perseverance-Rover-Path.Renderable.Enabled", false);
  ]]
}

local perseveranceModelState = {
  Identifier = "PerseveranceModel",
  Enter = [[
    ]] .. util.setOrbitSpeedFactor(0.4) .. [[
    ]] .. util.orbitOnArrival() .. [[
  ]],
  Exit = [[
    ]] .. util.stopOrbiting() .. [[
  ]]
}

-----
-- MRO
-----
local mroState = {
  Identifier = "MRO",
  Enter = [[
    ]] .. util.setOrbitSpeedFactor(0.4) .. [[
    ]] .. util.orbitOnArrival() .. [[
  ]],
  Exit = [[
    ]] .. util.stopOrbiting() .. [[
  ]]
}

local states = {
  marsRoversState,
  curiosityState,
  perseveranceState,
  mroState
}

----------------------------------------------------------------
-- TRANSITIONS within this substate
----------------------------------------------------------------

-- Note: time is set on the webpage
local enterTransition = [[ 
  ]] .. enterStateSettings .. [[
  ]] .. goToMarsOverview .. [[
]]

local leaveTransition = [[
  ]] .. leaveStateSettings .. [[
  ]] .. flyHome.cameraPath .. [[
]]

local transitions = {
  -- Transition to/from this state
  {
    From = "Home",
    To = "MarsRovers",
    Action = enterTransition
  },
  {
    From = "MarsRovers",
    To = "Home",
    Action = leaveTransition
  },
  -- Curiosity
  {
    From = "MarsRovers",
    To = "Curiosity"
  },
  {
    From = "Curiosity",
    To = "MarsRovers",
    Action = goToMarsOverview
  },
  {
    From = "Curiosity",
    To = "Perseverance",
  },
  {
    From = "Perseverance",
    To = "Curiosity",
  },
  {
    From = "Curiosity",
    To = "MRO",
  },
  {
    From = "MRO",
    To = "Curiosity",
  },
  -- Perseverance
  {
    From = "MarsRovers",
    To = "Perseverance",
    Action = [[]]
  },
  {
    From = "Perseverance",
    To = "MarsRovers",
    Action = goToMarsOverview
  },
  {
    From = "Perseverance",
    To = "MRO",
  },
  {
    From = "MRO",
    To = "Perseverance",
  },
  -- MRO
  {
    From = "MarsRovers",
    To = "MRO",
    Action = [[]]
  },
  {
    From = "MRO",
    To = "MarsRovers",
    Action = goToMarsOverview
  },
  -- Back to SolarSystem from substates
  {
    From = "Curiosity",
    To = "Home",
    Action = leaveTransition
  },
  {
    From = "Perseverance",
    To = "Home",
    Action = leaveTransition
  },
  {
    From = "MRO",
    To = "Home",
    Action = leaveTransition
  }
}

asset.export("states", states)
asset.export("transitions", transitions)
