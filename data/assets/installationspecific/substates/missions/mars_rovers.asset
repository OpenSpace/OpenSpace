local util = asset.require('./../../utility_functions')
local flyHome = asset.require('./../../fly_home_alternatives')
local defaultTime = asset.require('./../../default_time.asset').time

local enterStateSettings = [[
  openspace.setPropertyValueSingle("Scene.Mars.Renderable.Layers.HeightLayers.HiRISE-LS-DEM.Enabled", true);
]]

  -- Reset things that might have been set during the state (either here or from webpage)
local leaveStateSettings = [[
  openspace.setPropertyValueSingle("Scene.Mars.Renderable.Layers.ColorLayers.HiRISE-jezero.Settings.Opacity", 0.0, 1.0);
  openspace.setPropertyValueSingle("Scene.Mars.Renderable.Layers.ColorLayers.CTX_Mosaic_Sweden.Settings.Opacity", 0.0, 1.0)
  openspace.setPropertyValueSingle("Scene.Mars.Renderable.Layers.HeightLayers.HiRISE-LS-DEM.Enabled", false)
  openspace.setPropertyValueSingle("NavigationHandler.PathNavigator.IncludeRoll", false);
]]

-- For the states close to the surface, the ambient intensity of Mars needs to be turned off
local reduceAmbientIntensity = [[
  openspace.setPropertyValueSingle("Scene.Mars.Renderable.AmbientIntensity", 0.05, 1.0);
]]

local resetAmbientIntensity = [[
  openspace.setPropertyValueSingle("Scene.Mars.Renderable.AmbientIntensity", 0.5, 1.0);
]]

----------------------------------------------------------------
-- STATES
----------------------------------------------------------------

local marsRoversState = {
  Identifier = "MarsRovers",
  Enter = [[
    openspace.setPropertyValueSingle("Scene.Mars.Renderable.Layers.ColorLayers.CTX_Mosaic_Sweden.Settings.Opacity", 0.0, 5.0);
    ]] .. util.setOrbitSpeedFactor(0.4) .. [[
    ]] .. util.orbitOnArrival() .. [[
  ]],
  Exit = [[
    ]] .. util.stopOrbiting() .. [[
  ]]
}

local goToMarsOverview = [[
  ]] .. util.setCurveType("ZoomOutOverview") .. [[
  openspace.time.setPause(true)
  openspace.pathnavigation.flyTo('Mars', true)
]]

-----
-- Curiosity
-----

local galeCrater_TiltedNavState = [[{
  Anchor = 'Mars-Curiosity-Handle',
  ReferenceFrame = 'Root',
  Up = { -0.388564, -0.373363, -0.842388 },
  Yaw = -0.024106,
  Pitch = -0.162116,
  Position = { 7470.144476, 112056.853134, -53111.525452 }
}]]

local curiosityState = {
  Identifier = "Curiosity",
  Enter = [[
    ]] .. reduceAmbientIntensity .. [[
    openspace.setPropertyValueSingle("Scene.Mars.Renderable.Layers.ColorLayers.CTX_Mosaic_Sweden.Settings.Opacity", 1.0, 5.0);
    openspace.setPropertyValueSingle("Scene.Mars-Curiosity-Rover-Path.Renderable.Enabled", true);
    ]] .. util.setOrbitSpeedFactor(0.8) .. [[
    ]] .. util.orbitAroundUpOnArrival() .. [[
  ]],
  Exit = [[
    ]] .. resetAmbientIntensity .. [[
    ]] .. util.stopOrbiting() .. [[
    openspace.setPropertyValueSingle("Scene.Mars-Curiosity-Rover-Path.Renderable.Enabled", false);
    ]] .. util.disableRoll() .. [[
  ]]
}

-----
-- Perseverance
-----

-- Perseverance tilted state
local perseverance_TiltedNavState_Path = [[{
  Up = { 0.444587, 0.644127, -0.622450 },
  ReferenceFrame = 'Root',
  Anchor = 'Mars-Perseverance-Handle',
  Yaw = -0.005563,
  Position = { 530.380697, -754.288422, -401.730408 },
  Pitch = -0.000264
}]]

-- No zoom, scheduled scripts
local perseveranceState = {
  Identifier = "Perseverance",
  Enter = [[
    ]] .. reduceAmbientIntensity .. [[
    ]] .. util.stopOrbiting() .. [[
    openspace.setPropertyValueSingle("Scene.Mars-Perseverance-Rover-Path.Renderable.Enabled", true);
    openspace.setPropertyValueSingle("Scene.Mars-Perseverance-Rover-Path.Renderable.Opacity", 1.0, 2.0);
    openspace.setPropertyValueSingle("Scene.Mars-Perseverance-Rover-Path.Renderable.ForceUpdateData", nil);
    openspace.setPropertyValueSingle("Scene.Mars.Renderable.Layers.ColorLayers.HiRISE-jezero.Settings.Opacity", 1.0, 5.0);
    openspace.setPropertyValueSingle("Scene.Mars.Renderable.Layers.ColorLayers.CTX_Mosaic_Sweden.Settings.Opacity", 1.0, 5.0);
    openspace.setPropertyValueSingle("NavigationHandler.OrbitalNavigator.MinimumAllowedDistance", 10);
    openspace.setPropertyValueSingle("NavigationHandler.OrbitalNavigator.LimitZoomOut.Enabled", false);
    openspace.setPropertyValueSingle("NavigationHandler.OrbitalNavigator.EnabledMinimumAllowedDistanceLimit", false);
    openspace.setPropertyValueSingle("Modules.Touch.TouchInteraction.DisableZoom", true);
    openspace.setPropertyValueSingle("NavigationHandler.OrbitalNavigator.DisableZoom", true);
    ]] .. util.setOrbitSpeedFactor(0.6) .. [[
    ]] .. util.orbitAroundUpOnArrival() .. [[
  ]],
  Exit = [[
    ]] .. resetAmbientIntensity .. [[
    openspace.setPropertyValueSingle("Scene.Mars.Renderable.Layers.ColorLayers.HiRISE-jezero.Settings.Opacity", 0.0, 5.0);
    openspace.setPropertyValueSingle("Scene.Mars-Perseverance-Rover-Path.Renderable.Enabled", false);
    openspace.setPropertyValueSingle("Modules.Touch.TouchInteraction.DisableZoom", false);
    openspace.setPropertyValueSingle("NavigationHandler.OrbitalNavigator.DisableZoom", false);
    ]] .. util.stopOrbiting() .. [[
    ]] .. util.disableRoll() .. [[
  ]]
}

local states = {
  marsRoversState,
  curiosityState,
  perseveranceState
}

----------------------------------------------------------------
-- TRANSITIONS within this substate
----------------------------------------------------------------

-- Note: time is set on the webpage
local enterTransition = [[
  ]] .. enterStateSettings .. [[
  ]] .. goToMarsOverview .. [[
]]

local leaveTransition = [[
  ]] .. leaveStateSettings .. [[
  ]] .. flyHome.cameraPath .. [[
]]

local toPerseveranceTransition = [[
  ]] .. util.enableRoll() .. [[
  ]] .. util.setCurveType("ZoomOutOverview") .. [[
  openspace.pathnavigation.flyToNavigationState( ]] .. perseverance_TiltedNavState_Path .. [[)
]]

local toCuriosityTransition = [[
  ]] .. util.enableRoll() .. [[
  ]] .. util.setCurveType("ZoomOutOverview") .. [[
  openspace.pathnavigation.flyToNavigationState( ]] .. galeCrater_TiltedNavState .. [[)
]]

local betweenGaleAndJezero_NavState = [[{
  Up = { -0.887533, -0.263131, -0.378216 },
  ReferenceFrame = 'Mars',
  Anchor = 'Mars',
  Position = { -2949968.384396, 5345824.976367, 3203314.816664 },
  Pitch = 0.007257,
  Yaw = -0.000050
}]]

-- TODO: OBS! The application time mode does not actually work right now...
-- So this will only trigger the last transition anyways :(
-- local galeToJezeroTransition = [[
--   openspace.scriptScheduler.clear();
--   openspace.scriptScheduler.setModeApplicationTime();
--   local now = openspace.time.currentApplicationTime();

--   openspace.scriptScheduler.loadScheduledScript(
--     tostring(now), -- 0 seconds after this script was triggered
--     "openspace.pathnavigation.flyToNavigationState( ]] .. util.removeLineBreaks(betweenGaleAndJezero_NavState) .. [[);"
--   );
--   openspace.scriptScheduler.loadScheduledScript(
--     tostring(now + 10), -- 10 seconds after this script was triggered
--     "]] .. util.removeLineBreaks(toPerseveranceTransition) .. [[;"
--   );
-- ]]

local transitions = {
  -- Transition to/from this state
  {
    From = "Home",
    To = "MarsRovers",
    Action = enterTransition
  },
  {
    From = "MarsRovers",
    To = "Home",
    Action = leaveTransition
  },
  -- Curiosity
  {
    From = "MarsRovers",
    To = "Curiosity",
    Action = toCuriosityTransition
  },
  {
    From = "Curiosity",
    To = "MarsRovers",
    Action = goToMarsOverview
  },
  {
    From = "Curiosity",
    To = "Perseverance",
    Action = toPerseveranceTransition -- TODO: update with custom (to avoid crashing into Mars)
  },
  {
    From = "Perseverance",
    To = "Curiosity",
    Action = toCuriosityTransition -- TODO: update with custom (to avoid crashing into Mars)
  },
  -- Perseverance
  {
    From = "MarsRovers",
    To = "Perseverance",
    Action = toPerseveranceTransition
  },
  {
    From = "Perseverance",
    To = "MarsRovers",
    Action = goToMarsOverview
  },
  -- Back to SolarSystem from substates
  {
    From = "Curiosity",
    To = "Home",
    Action = leaveTransition
  },
  {
    From = "Perseverance",
    To = "Home",
    Action = leaveTransition
  }
}

asset.export("states", states)
asset.export("transitions", transitions)
