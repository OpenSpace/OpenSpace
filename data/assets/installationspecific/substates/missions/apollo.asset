local util = asset.require('./../../utility_functions')
local flyHome = asset.require('./../../fly_home_alternatives')
local textImagefolder = asset.localResource("s./../../../screenspacetexts")
textImagefolder = textImagefolder:gsub('\\', '/')

----------------------------------------------------------------
-- SCRIPTS
----------------------------------------------------------------
local launchOverviewDistance = 20000000
local earthOverviewDistance = 50000000
local apollo8OverviewDistance = 400000000
local moonOverviewDistance = 80000000

local apollo8NavigationState = [[{ Up = { -0.639234, 0.734826, 0.226741 }, ReferenceFrame = 'Root', Position = { 1481965.290802, 635156.777273, 2119562.935007 }, Yaw = 0.005130, Pitch = -0.002823, Anchor = 'Apollo8' }]]

local apollo8Scripts = [[
  -- Launch
  openspace.scriptScheduler.loadScheduledScript(
    "1968-12-21T12:51:52", -- 1 sec delay
    "openspace.time.interpolateDeltaTime(60)" ..
    "openspace.setPropertyValueSingle('ScreenSpace.Installation-Time-Speed-Description.TexturePath', ']] .. textImagefolder .. '/text-simspeed-1min.png' .. [[')" ..
    "openspace.setPropertyValueSingle('ScreenSpace.Installation-Time-Speed-Description.Enabled', true)"
  )

  -- Zoom out a little
  openspace.scriptScheduler.loadScheduledScript(
    "1968-12-21T12:54:51",
    "openspace.pathnavigation.zoomToDistance(]] .. tostring(launchOverviewDistance) .. [[)"
  )

  -- Focus on Apollo 8 again
  openspace.scriptScheduler.loadScheduledScript(
    "1968-12-21T12:55:51", -- 1 min after
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.RetargetAnchorInterpolationTime', 2.0)" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.RetargetAnchor', nil)" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.Anchor', 'Apollo8')" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.Aim', '')"
  )

  -- Speed up a little
  openspace.scriptScheduler.loadScheduledScript(
    "1968-12-21T12:56:51",
    "openspace.time.interpolateDeltaTime(60)"
  )

  -- Retarget to Earth and zoom out
  openspace.scriptScheduler.loadScheduledScript(
    "1968-12-21T13:06:51",
    "openspace.setPropertyValueSingle('ScreenSpace.Installation-Time-Speed-Description.TexturePath', ']] .. textImagefolder .. '/text-simspeed-30min.png' .. [[')" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.RetargetAnchorInterpolationTime', 2.0)" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.RetargetAnchor', nil)" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.Anchor', 'Earth')" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.Aim', '')" ..
    "openspace.pathnavigation.zoomToDistance(]] .. tostring(earthOverviewDistance) .. [[)" ..
    "openspace.time.interpolateDeltaTime(1800)" -- 30 min per second

  )

  -- Leaving Earth
  openspace.scriptScheduler.loadScheduledScript(
    "1968-12-21T17:20:51",
    "openspace.time.interpolateDeltaTime(10800)" .. -- 3 hours per second
    "openspace.setPropertyValueSingle('ScreenSpace.Installation-Time-Speed-Description.TexturePath', ']] .. textImagefolder .. '/text-simspeed-3hours.png' .. [[')" ..
    "openspace.pathnavigation.zoomToDistance(]] .. tostring(apollo8OverviewDistance) .. [[)"
  )

  -- Half way to moon
  openspace.scriptScheduler.loadScheduledScript(
    "1968-12-22T08:51:51",
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.RetargetAnchorInterpolationTime', 2.0)" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.RetargetAnchor', nil)" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.Anchor', 'Apollo8')" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.Aim', '')"
  )

  -- At Moon
  openspace.scriptScheduler.loadScheduledScript(
    "1968-12-24T01:51:51",
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.RetargetAnchorInterpolationTime', 2.0)" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.RetargetAnchor', nil)" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.Anchor', 'Moon')" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.Aim', '')" ..
    "openspace.pathnavigation.zoomToDistance(]] .. tostring(moonOverviewDistance) .. [[)" ..
    "openspace.time.interpolateDeltaTime(3600)" .. -- 1 hour per second
    "openspace.setPropertyValueSingle('ScreenSpace.Installation-Time-Speed-Description.TexturePath', ']] .. textImagefolder .. '/text-simspeed-1hour.png' .. [[')"
  )

  -- Leaving Moon
  openspace.scriptScheduler.loadScheduledScript(
    "1968-12-25T09:51:51",
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.RetargetAnchorInterpolationTime', 2.0)" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.RetargetAnchor', nil)" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.Anchor', 'Apollo8')" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.Aim', '')" ..
    "openspace.pathnavigation.zoomToDistance(]] .. tostring(apollo8OverviewDistance) .. [[)" ..
    "openspace.time.interpolateDeltaTime(10800)" .. -- 3 hours per second
    "openspace.setPropertyValueSingle('ScreenSpace.Installation-Time-Speed-Description.TexturePath', ']] .. textImagefolder .. '/text-simspeed-3hours.png' .. [[')"
  )

  -- Coming home
  openspace.scriptScheduler.loadScheduledScript(
    "1968-12-27T10:51:51",
    "openspace.time.interpolateDeltaTime(3600)" .. -- 1 hour per second
    "openspace.setPropertyValueSingle('ScreenSpace.Installation-Time-Speed-Description.TexturePath', ']] .. textImagefolder .. '/text-simspeed-1hour.png' .. [[')" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.RetargetAnchorInterpolationTime', 2.0)" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.RetargetAnchor', nil)" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.Anchor', 'Earth')" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.Aim', '')"
  )

  -- Landing
  openspace.scriptScheduler.loadScheduledScript(
    "1968-12-27T12:51:51",
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.RetargetAnchorInterpolationTime', 2.0)" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.RetargetAnchor', nil)" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.Anchor', 'Earth')" ..
    "openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.Aim', '')" ..
    "openspace.pathnavigation.zoomToDistance(]] .. tostring(earthOverviewDistance) .. [[)" ..
    "openspace.time.interpolateDeltaTime(1800)" .. -- 30 min per second
    "openspace.setPropertyValueSingle('ScreenSpace.Installation-Time-Speed-Description.TexturePath', ']] .. textImagefolder .. '/text-simspeed-30min.png' .. [[')"

  )

  -- Slow down for landing
  openspace.scriptScheduler.loadScheduledScript(
    "1968-12-27T15:10:51",
    "openspace.time.interpolateDeltaTime(600)" .. -- 10 min per second
    "openspace.setPropertyValueSingle('ScreenSpace.Installation-Time-Speed-Description.TexturePath', ']] .. textImagefolder .. '/text-simspeed-10min.png' .. [[')"
  )

  -- Take a moment to understand they landed
  openspace.scriptScheduler.loadScheduledScript(
    "1968-12-27T15:36:39",
    "openspace.time.interpolateDeltaTime(1)" ..
    "openspace.setPropertyValueSingle('ScreenSpace.Installation-Time-Speed-Description.Enabled', false)"
  )

  -- End
  openspace.scriptScheduler.loadScheduledScript(
    "1968-12-27T15:42:09", -- 5 minute 10 seconds delay
    "openspace.time.setTime('1968-12-21T12:51:51')" .. -- Loop
    "openspace.navigation.setNavigationState(]] .. tostring(apollo8NavigationState) .. [[)"
  )
]]

local apollo11LandingState = [[{ Up = { -0.775178, 0.600074, 0.197509 }, Yaw = 0.005949, Position = { -30.476334, -14.669479, -75.043663 }, ReferenceFrame = 'Root', Pitch = 0.003976, Anchor = 'Apollo11-landing-Handle' }]]

----------------------------------------------------------------
-- STATES
----------------------------------------------------------------
local insignias = {
  "Apollo11Insignia",
  "Apollo12Insignia",
  "Apollo14Insignia",
  "Apollo15Insignia",
  "Apollo16Insignia",
  "Apollo17Insignia"
}

local apolloMainState = {
  Identifier = "Apollo",
  Enter = [[
    ]] .. util.setOrbitSpeedFactor(0.4) .. [[
    ]] .. util.orbitOnArrival() .. [[
    ]] .. util.fadeInNodes(insignias) .. [[
  ]],
  Exit = [[
    ]] .. util.stopOrbiting() .. [[
    ]] .. util.fadeOutNodes(insignias) .. [[
  ]]
}

-- No zoom, scheduled scripts
local apollo8State = {
  Identifier = "Apollo8",
  Enter = [[
    ]] .. util.fadeInNodes({ "Apollo8EarthBarycenterTrail" }) .. [[
    ]] .. util.fadeOutNodes({ "ISS_trail", "ISSModel" }) .. [[
    ]] .. apollo8Scripts .. [[
    openspace.setPropertyValueSingle('Modules.Touch.TouchInteraction.DisableZoom', true);
  ]],
  Exit = [[
    openspace.scriptScheduler.clear()
    openspace.setPropertyValueSingle('ScreenSpace.Installation-Time-Speed-Description.Enabled', false);
    openspace.setPropertyValueSingle('Modules.Touch.TouchInteraction.DisableZoom', false);
    ]] .. util.fadeOutNodes({ "Apollo8EarthBarycenterTrail" }) .. [[
    ]] .. util.fadeInNodes({ "ISS_trail", "ISSModel" }) .. [[
  ]]
}

local apollo11State = {
  Identifier = "Apollo11",
  Enter = [[
    openspace.setPropertyValueSingle('Scene.Moon.Renderable.Layers.HeightLayers.LRO_NAC_Apollo_11.Enabled', true);
    openspace.setPropertyValueSingle('Scene.Moon.Renderable.Layers.ColorLayers.A11_M177481212_p_longlat.Enabled', true);
    openspace.setPropertyValueSingle('Scene.Moon.Renderable.TargetLodScaleFactor', 20.11);
    ]] .. util.fadeInNodes({ "Apollo11LemTrail" }) .. [[
    ]] .. util.setOrbitSpeedFactor(0.8) .. [[
    ]] .. util.orbitAroundUpOnArrival() .. [[
  ]],
  Exit = [[
    ]] .. util.stopOrbiting() .. [[
    openspace.setPropertyValueSingle('Scene.Moon.Renderable.Layers.HeightLayers.LRO_NAC_Apollo_11.Enabled', false);
    openspace.setPropertyValueSingle('Scene.Moon.Renderable.Layers.ColorLayers.A11_M177481212_p_longlat.Enabled', false);
    openspace.setPropertyValueSingle('Scene.Moon.Renderable.TargetLodScaleFactor', 15.0);
    ]] .. util.fadeOutNodes({ "Apollo11LemTrail" }) .. [[
  ]]
}

local states = { apolloMainState, apollo8State, apollo11State }

----------------------------------------------------------------
-- TRANSITIONS within this substate
----------------------------------------------------------------
local leaveState = [[
  ]] .. util.disableRoll() .. [[
  ]] .. flyHome.cameraPath .. [[
]]

local flyToMoon = [[
  ]] .. util.setCurveType("ZoomOutOverview") .. [[
  openspace.time.setPause(true)
  openspace.pathnavigation.flyTo('Moon', true)
]]

local flyToApollo8 = [[
  ]] .. util.setCurveType("ZoomOutOverview") .. [[
  ]] .. util.enableRoll() .. [[
  ]] .. util.flyToNavState(apollo8NavigationState) .. [[
]]

local jumpToApollo8 = [[
  openspace.navigation.setNavigationState(]] .. tostring(apollo8NavigationState) .. [[)
]]

local flyToApollo11 = [[
  ]] .. util.setCurveType("ZoomOutOverview") .. [[
  ]] .. util.enableRoll() .. [[
  ]] .. util.flyToNavState(apollo11LandingState) .. [[
]]

local jumpToApollo11 = [[
  ]] .. util.setCurveType("ZoomOutOverview") .. [[
  ]] .. util.enableRoll() .. [[
  ]] .. util.flyToNavState(apollo11LandingState) .. [[
]]

local transitions = {
  -- Transition to/from this state
  {
    From = "Home",
    To = "Apollo",
    Action = flyToMoon
  },
  {
    From = "Apollo",
    To = "Home",
    Action = leaveState
  },
  -- Overview - Apollo 8
  {
    From = "Apollo",
    To = "Apollo8",
    Action = flyToApollo8
  },
  {
    From = "Apollo8",
    To = "Apollo",
    Action = flyToMoon
  },
  -- Overview - Apollo 11
  {
    From = "Apollo",
    To = "Apollo11",
    Action = flyToApollo11
  },
  {
    From = "Apollo11",
    To = "Apollo",
    Action = flyToMoon
  },
  -- Apollo 8 - Apollo 11
  {
    From = "Apollo8",
    To = "Apollo11",
    Action = jumpToApollo11
  },
  {
    From = "Apollo11",
    To = "Apollo8",
    Action = jumpToApollo8
  },
  -- Back to SolarSystem from substates
  {
    From = "Apollo8",
    To = "Home",
    Action = leaveState
  },
  {
    From = "Apollo11",
    To = "Home",
    Action = leaveState
  },
}

asset.export("states", states)
asset.export("transitions", transitions)
