local mars = asset.require('scene/solarsystem/planets/mars/mars')
local sunTransforms = asset.require('scene/solarsystem/sun/transforms')

local globeIdentifier = mars.Mars.Identifier

local models = asset.syncedResource({
  Name = "Perseverance Models",
  Type = "HttpSynchronization",
  Identifier = "perseverance_models",
  Version = 2
})

local ingenuity_models = asset.syncedResource({
  Name = "Ingenuity Models",
  Type = "HttpSynchronization",
  Identifier = "ingenuity_model",
  Version = 1
})

 -- Coordinate offset to match hirise image in Jezero crater
local LatLongOffset = { -0.0019, 0.0009 }

-- Some useful lat, long positions
local landingPosition = { 18.444634598608634, 77.45088440206018 }
local finalPosition = { 18.45273043, 77.40833265 }
local handlePosition = finalPosition
local ingenuityPosition = { 18.45725338, 77.40988779 }

-- A "handle" that can be used for navigation and such
local Handle = {
  Identifier = "Mars-Perseverance-Handle",
  Parent = globeIdentifier,
  Transform = {
    Translation = {
      Type = "GlobeTranslation",
      Globe = globeIdentifier,
      Latitude = handlePosition[1] + LatLongOffset[1],
      Longitude = handlePosition[2] + LatLongOffset[2],
      Altitude = -2540.0, -- put on surface. Need a static position for camera paths
      UseHeightmap = false
    },
    Rotation = {
      Type = "GlobeRotation",
      Globe = globeIdentifier,
      Latitude = handlePosition[1] + LatLongOffset[1],
      Longitude = handlePosition[2] + LatLongOffset[2]
    }
  },
  GUI = {
    Name = "Perseverance Handle",
    Path = "/Missions/Mars2020"
  }
}

-------------------------------------
-- ROVER PATH
-------------------------------------

local Path = {
  Identifier = "Mars-Perseverance-Rover-Path",
  File = asset.localResource("./geojson/roverpath_perseverance_230113.geojson"),
  HeightOffset = 10,
  CoordinateOffset = LatLongOffset,
  IgnoreHeights = true,
  PreventHeightUpdate = true, -- Prevent automatic updates form height map. Too performance heavy!
  DefaultProperties = {
    LineWidth = 2.0,
    AltitudeMode = "RelativeToGround"
  },
  Name = "Perseverance Rover Path"
}

-------------------------------------
-- POSITIONS
-------------------------------------

local LandingPosition = {
  Identifier = "Mars-Perseverance-Landing-Position",
  Parent = globeIdentifier,
  Transform = {
    Translation = {
      Type = "GlobeTranslation",
      Globe = globeIdentifier,
      Latitude = landingPosition[1] + LatLongOffset[1],
      Longitude = landingPosition[2] + LatLongOffset[2],
      Altitude = 10,
      UseHeightmap = true
    },
    Rotation = {
      Type = "GlobeRotation",
      Globe = globeIdentifier,
      Latitude = landingPosition[1] + LatLongOffset[1],
      Longitude = landingPosition[2] + LatLongOffset[2]
    }
  },
  Renderable = {
    Type = "RenderablePlaneImageLocal",
    Size = 10.0,
    Billboard = true,
    Texture = asset.localResource('./images/M20_JPL_second_insignia.svg.png'),
    RenderBinMode = "PostDeferredTransparent"
  },
  GUI = {
    Name = "Perseverance Rover Landing Position",
    Path = "/Missions/Mars2020"
  }
}

local RoverPosition = {
  Identifier = "Mars-Perseverance-Rover-Position",
  Parent = globeIdentifier,
  Transform = {
    Translation = {
      Type = "GlobeTranslation",
      Globe = globeIdentifier,
      Latitude = finalPosition[1] + LatLongOffset[1],
      Longitude = finalPosition[2] + LatLongOffset[2],
      Altitude = 10,
      UseHeightmap = true
    },
    Rotation = {
      Type = "GlobeRotation",
      Globe = globeIdentifier,
      Latitude = finalPosition[1] + LatLongOffset[1],
      Longitude = finalPosition[2] + LatLongOffset[2]
    }
  },
  Renderable = {
    Type = "RenderablePlaneImageLocal",
    Size = 50.0,
    Billboard = true,
    Texture = asset.localResource('./images/rover_icon.png'),
    RenderBinMode = "PostDeferredTransparent"
  },
  GUI = {
    Name = "Perseverance Rover Position",
    Path = "/Missions/Mars2020"
  }
}

local IngenuityPosition = {
  Identifier = "Mars-Ingenuity-Position",
  Parent = globeIdentifier,
  Transform = {
    Translation = {
      Type = "GlobeTranslation",
      Globe = globeIdentifier,
      Latitude = ingenuityPosition[1] + LatLongOffset[1],
      Longitude = ingenuityPosition[2] + LatLongOffset[2],
      Altitude = 5,
      UseHeightmap = true
    },
    Rotation = {
      Type = "GlobeRotation",
      Globe = globeIdentifier,
      Latitude = ingenuityPosition[1] + LatLongOffset[1],
      Longitude = ingenuityPosition[2] + LatLongOffset[2]
    }
  },
  Renderable = {
    Type = "RenderablePlaneImageLocal",
    Size = 50.0,
    Billboard = true,
    Texture = asset.localResource('./images/helicoper_icon.png'),
    RenderBinMode = "PostDeferredTransparent"
  },
  GUI = {
    Name = "Ingenuity Position",
    Path = "/Missions/Mars2020"
  }
}

-------------------------------------
-- LABELS
-------------------------------------
local RoverLabel = {
  Identifier = "Perseverance-Rover-Label",
  Parent = globeIdentifier,
  Transform = {
    Translation = {
      Type = "GlobeTranslation",
      Globe = globeIdentifier,
      Latitude = finalPosition[1] + LatLongOffset[1],
      Longitude = finalPosition[2] + LatLongOffset[2],
      Altitude = 4,
      UseHeightmap = true
    },
    Rotation = {
      Type = "GlobeRotation",
      Globe = globeIdentifier,
      Latitude = finalPosition[1] + LatLongOffset[1],
      Longitude = finalPosition[2] + LatLongOffset[2]
    }
  },
  Renderable = {
    Type = "RenderablePlaneImageLocal",
    Size = 2.0,
    Billboard = true,
    Texture = asset.localResource('./images/perseverance_label.png'),
    RenderBinMode = "PostDeferredTransparent"
  },
  GUI = {
    Name = "Perseverance Label",
    Path = "/Missions/Mars2020"
  }
}

local IngenuityLabel = {
  Identifier = "Ingenuity-Label",
  Parent = globeIdentifier,
  Transform = {
    Translation = {
      Type = "GlobeTranslation",
      Globe = globeIdentifier,
      Latitude = ingenuityPosition[1] + LatLongOffset[1],
      Longitude = ingenuityPosition[2] + LatLongOffset[2],
      Altitude = 2.2,
      UseHeightmap = true
    },
    Rotation = {
      Type = "GlobeRotation",
      Globe = globeIdentifier,
      Latitude = ingenuityPosition[1] + LatLongOffset[1],
      Longitude = ingenuityPosition[2] + LatLongOffset[2]
    }
  },
  Renderable = {
    Type = "RenderablePlaneImageLocal",
    Size = 1.5,
    Billboard = true,
    Texture = asset.localResource('./images/ingenuity_label.png'),
    RenderBinMode = "PostDeferredTransparent"
  },
  GUI = {
    Name = "Ingenuity Label",
    Path = "/Missions/Mars2020"
  }
}

-------------------------------------
-- MODELS
-------------------------------------

-- Perseverance Model --
local PerseveranceModel = {
  Identifier = "PerseveranceModel",
  Parent = globeIdentifier,
  Transform = {
    Translation = {
      Type = "GlobeTranslation",
      Globe = globeIdentifier,
      Latitude = finalPosition[1] + LatLongOffset[1],
      Longitude = finalPosition[2] + LatLongOffset[2],
      Altitude = -2540.0, -- put on surface. Need a static position for camera paths
      UseHeightmap = false
    },
    Rotation = {
      Type = "GlobeRotation",
      Globe = globeIdentifier,
      Latitude = finalPosition[1] + LatLongOffset[1],
      Longitude = finalPosition[2] + LatLongOffset[2]
    }
  },
  Renderable = {
    Type = "RenderableModel",
    GeometryFile = models .. "/Perseverance.obj",
    LightSources = {
      {
        Type = "SceneGraphLightSource",
        Identifier = "Sun",
        Node = sunTransforms.SolarSystemBarycenter.Identifier,
        Intensity = 1.0
      },
      {
        Type = "CameraLightSource",
        Identifier = "Camera",
        Intensity = 0.5
      }
    }
  },
  GUI = {
    Name = "Perseverance Model",
    Path = "/Missions/Mars2020"
  }
}

-- Ingenuity Model --
local IngenuityModel = {
  Identifier = "IngenuityModel",
  Parent = globeIdentifier,
  Transform = {
    Translation = {
      Type = "GlobeTranslation",
      Globe = globeIdentifier,
      Latitude = ingenuityPosition[1] + LatLongOffset[1],
      Longitude = ingenuityPosition[2] + LatLongOffset[2],
      Altitude = -2536.0, -- put on surface. Need a static position for camera paths
      UseHeightmap = false
    },
    Rotation = {
      Type = "GlobeRotation",
      Globe = globeIdentifier,
      Latitude = ingenuityPosition[1] + LatLongOffset[1],
      Longitude = ingenuityPosition[2] + LatLongOffset[2]
    }
  },
  Renderable = {
    Type = "RenderableModel",
    GeometryFile = ingenuity_models .. "/Ingenuity.glb",
    LightSources = {
      {
        Type = "SceneGraphLightSource",
        Identifier = "Sun",
        Node = sunTransforms.SolarSystemBarycenter.Identifier,
        Intensity = 1.0
      },
      {
        Type = "CameraLightSource",
        Identifier = "Camera",
        Intensity = 0.5
      }
    }
  },
  GUI = {
    Name = "Ingenuity Model",
    Path = "/Missions/Mars2020"
  }
}

asset.onInitialize(function()
  openspace.addSceneGraphNode(Handle)

  openspace.globebrowsing.addGeoJson(mars.Mars.Identifier, Path)

  openspace.addSceneGraphNode(LandingPosition)
  openspace.addSceneGraphNode(RoverPosition)
  openspace.addSceneGraphNode(IngenuityPosition)

  openspace.addSceneGraphNode(RoverLabel)
  openspace.addSceneGraphNode(IngenuityLabel)

  openspace.addSceneGraphNode(PerseveranceModel)
  openspace.addSceneGraphNode(IngenuityModel)
end)

asset.onDeinitialize(function()
  openspace.removeSceneGraphNode(IngenuityModel)
  openspace.removeSceneGraphNode(PerseveranceModel)

  openspace.removeSceneGraphNode(IngenuityLabel)
  openspace.removeSceneGraphNode(RoverLabel)

  openspace.removeSceneGraphNode(IngenuityPosition)
  openspace.removeSceneGraphNode(RoverPosition)
  openspace.removeSceneGraphNode(LandingPosition)

  openspace.globebrowsing.deleteGeoJson(mars.Mars.Identifier, Path)

  openspace.removeSceneGraphNode(Handle)
end)

asset.export(Handle)
asset.export(Path)
asset.export(LandingPosition)
asset.export(PerseveranceModel)
asset.export(RoverPosition)
asset.export(IngenuityPosition)
asset.export("LatLongOffset", LatLongOffset)
asset.export("RoverLatLongPosition", finalPosition)


asset.meta = {
  Name = "Perseverance Rover & Ingenuity",
  Version = "1.0",
  Description = [[
    Renderables used to show the traversal path of the Perseverance rover and the
    position of the helicopter Ingenuity. Also includes models of te perseverance
    rover and ingenuity model.
  ]],
  Author = "OpenSpace Team",
  URL = "http://openspaceproject.com",
  License = "MIT license"
}
