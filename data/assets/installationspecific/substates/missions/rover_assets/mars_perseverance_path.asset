local assetHelper = asset.require("util/asset_helper")
local mars = asset.require('scene/solarsystem/planets/mars/mars')
local sunTransforms = asset.require('scene/solarsystem/sun/transforms')

local globeIdentifier = mars.Mars.Identifier

local models = asset.syncedResource({
  Name = "Perseverance Models",
  Type = "HttpSynchronization",
  Identifier = "perseverance_models",
  Version = 2
})

 -- Coordinate offset to match hirise image in Jezero crater
local offset = { -0.0024, 0.0 }

-- Some useful lat, long positions
local landingPosition = { 18.444634598608634, 77.45088440206018 }
local handlePosition = { 18.43532532679642, 77.4481201276649 }
local finalPosition = { 18.43379229870882,  77.4421387910843 } -- position as of 2021-10-04

-- A "handle" that can be used for navigation and such
local Handle = {
  Identifier = "Mars-Perseverance-Handle",
  Parent = globeIdentifier,
  Transform = {
    Translation = {
      Type = "GlobeTranslation",
      Globe = globeIdentifier,
      Latitude = handlePosition[1] + offset[1],
      Longitude = handlePosition[2] + offset[2],
      Altitude = 10.0,
      UseHeightmap = true
    },
    Rotation = {
      Type = "GlobeRotation",
      Globe = globeIdentifier,
      Latitude = handlePosition[1] + offset[1],
      Longitude = handlePosition[2] + offset[2]
    }
  },
  GUI = {
    Name = "Mars Perseverance Handle",
    Path = "/Missions/Mars2020"
  }
}

local Path = {
  Identifier = "Mars-Perseverance-Rover-Path",
  Parent = globeIdentifier,
  Renderable = {
    Type = "RenderableGeoJsonObject",
    Globe = globeIdentifier,
    File = asset.localResource("./roverpath_perseverance.geojson"),
    HeightOffset = 10.0,
    CoordinateOffset = offset,
    LineWidth = 2.0
  },
  GUI = {
    Name = "Mars Perseverance Rover Path",
    Path = "/Missions/Mars2020"
  }
}

local LandingPosition = {
  Identifier = "Mars-Perseverance-Landing-Position",
  Parent = globeIdentifier,
  Transform = {
    Translation = {
      Type = "GlobeTranslation",
      Globe = globeIdentifier,
      Latitude = landingPosition[1] + offset[1],
      Longitude = landingPosition[2] + offset[2],
      Altitude = 10,
      UseHeightmap = true
    },
    Rotation = {
      Type = "GlobeRotation",
      Globe = globeIdentifier,
      Latitude = landingPosition[1] + offset[1],
      Longitude = landingPosition[2] + offset[2]
    }
  },
  Renderable = {
    Type = "RenderablePlaneImageLocal",
    Size = 10.0,
    Origin = "Center",
    Billboard = true,
    Texture = asset.localResource('./Mars_2020_JPL_second_insignia.svg.png')
  },
  GUI = {
    Name = "Mars Perseverance Rover Landing Position",
    Path = "/Missions/Mars2020"
  }
}

-- Perseverance Model --
local PerseveranceModel = {
  Identifier = "PerseveranceModel",
  Parent = globeIdentifier,
  Transform = {
    Translation = {
      Type = "GlobeTranslation",
      Globe = globeIdentifier,
      Latitude = finalPosition[1] + offset[1],
      Longitude = finalPosition[2] + offset[2],
      UseHeightmap = true
    },
    Rotation = {
      Type = "GlobeRotation",
      Globe = globeIdentifier,
      Latitude = finalPosition[1] + offset[1],
      Longitude = finalPosition[2] + offset[2]
    }
  },
  Renderable = {
    Type = "RenderableModel",
    GeometryFile = models .. "/Perseverance.obj",
    LightSources = {
      {
        Type = "SceneGraphLightSource",
        Identifier = "Sun",
        Node = sunTransforms.SolarSystemBarycenter.Identifier,
        Intensity = 1.0
      },
      {
        Type = "CameraLightSource",
        Identifier = "Camera",
        Intensity = 0.5
      }
    }
  },
  GUI = {
    Name = "Perseverance Model",
    Path = "/Missions/Mars2020"
  }
}

assetHelper.registerSceneGraphNodesAndExport(asset, { Handle, Path, LandingPosition, PerseveranceModel })
