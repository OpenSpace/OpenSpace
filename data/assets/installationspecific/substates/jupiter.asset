local util = asset.require('./../utility_functions')

----------------------------------------------------------------
-- STATES
----------------------------------------------------------------
local jupiterTargetDistance = 1e12

local jupiterState = {
  Identifier = "Jupiter",
  Enter = [[
    ]] .. util.setOrbitSpeedFactor(0.4) .. [[
    ]] .. util.orbitOnArrival() .. [[
  ]],
  Exit = [[
    ]] .. util.stopOrbiting() .. [[
  ]]
}

local europaTargetDistance = 1e12

local goToEuropa = [[
  ]] .. util.setCurveType("ZoomOutOverview") .. [[
  openspace.time.setPause(true)
  openspace.pathnavigation.goTo('Europa', true)
]]

local europaState = {
  Identifier = "Europa",
  Enter = [[
    ]] .. util.setOrbitSpeedFactor(0.4) .. [[
    ]] .. util.orbitOnArrival() .. [[
  ]],
  Exit = [[
    ]] .. util.stopOrbiting() .. [[
  ]]
}

local ioTargetDistance = 1e12

local goToIo = [[
  ]] .. util.setCurveType("ZoomOutOverview") .. [[
  openspace.time.setPause(true)
  openspace.pathnavigation.goTo('Io', true)
]]

local ioState = {
  Identifier = "Io",
  Enter = [[
    ]] .. util.setOrbitSpeedFactor(0.4) .. [[
    ]] .. util.orbitOnArrival() .. [[
  ]],
  Exit = [[
    ]] .. util.stopOrbiting() .. [[
  ]]
}

local states = { jupiterState, europaState, ioState }

----------------------------------------------------------------
-- TRANSITIONS within this substate
----------------------------------------------------------------
local goToJupiter = [[
  ]] .. util.setCurveType("ZoomOutOverview") .. [[
  openspace.time.setPause(true)
  openspace.pathnavigation.goTo('Jupiter', true)
]]

local transitions = {
  -- Europa
  {
    From = "Jupiter",
    To = "Europa",
    Action = goToEuropa
  },
  {
    From = "Europa",
    To = "Jupiter",
    Action = goToJupiter
  },
  {
    From = "Europa",
    To = "Io",
    Action = goToIo
  },
  {
    From = "Io",
    To = "Europa",
    Action = goToEuropa
  },
    -- Io
  {
    From = "Jupiter",
    To = "Io",
    Action = goToIo
  },
  {
    From = "Io",
    To = "Jupiter",
    Action = goToJupiter
  },
  -- Back to SolarSystem from substates
  {
    From = "Europa",
    To = "SolarSystem"
  },
  {
    From = "Io",
    To = "SolarSystem"
  }
}

asset.export("states", states)
asset.export("transitions", transitions)
