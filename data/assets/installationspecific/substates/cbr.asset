local util = asset.require('./../utility_functions')
local flyHome = asset.require('./../fly_home_alternatives')

----------------------------------------------------------------
-- STATES
----------------------------------------------------------------
local maxOpacity = 0.3
local opacityUri = "Scene.Planck.Renderable.Opacity"

local cbrDistance = 1079252848800 -- 1 light year

local cbrState = {
    Identifier = "CBR",
    Enter = [[
        ]] .. util.setOrbitSpeedFactor(0.4) .. [[
        ]] .. util.startOrbiting() .. [[
        openspace.setPropertyValueSingle("Scene.Planck.Renderable.DisableFadeInOut", true)
        ]] .. util.interpolateProperty(opacityUri, maxOpacity, 2) .. [[
    ]],
    Exit = [[
        ]] .. util.interpolateProperty(opacityUri, 0.0, 2) .. [[
        ]] .. util.stopOrbiting() .. [[
    ]]
}

local edgeOfUniverseDistance = 10.2E26

-- TODO: gotta do the fading on the webpage
local edgeOfUniverseState = {
    Identifier = "EdgeOfUniverse",
    Enter = [[
        ]] .. util.setOrbitSpeedFactor(0.4) .. [[
        ]] .. util.startOrbiting() .. [[
        ]] .. util.interpolateProperty(opacityUri, maxOpacity, 6) .. [[
    ]],
    Exit = [[
        ]] .. util.interpolateProperty(opacityUri, 0.0, 2) .. [[
        ]] .. util.stopOrbiting() .. [[
    ]]
}

local states = { cbrState, edgeOfUniverseState }

----------------------------------------------------------------
-- TRANSITIONS within this substate
----------------------------------------------------------------
local transitions = {
  -- Transition to/from this state
  {
    From = "Home",
    To = "CBR"
  },
  {
    From = "CBR",
    To = "Home"
    -- No action. Should already be at the desired distance
  },
  -- CBR
  {
    From = "CBR",
    To = "EdgeOfUniverse",
    Action = util.applyLinearFlight(edgeOfUniverseDistance, 2)
  },
  {
    From = "EdgeOfUniverse",
    To = "CBR",
    Action = util.applyLinearFlight(cbrDistance, 2)
  },
  -- Back from substates
  {
    From = "EdgeOfUniverse",
    To = "Home",
    Action = flyHome.linearFlight
  }
}

asset.export("states", states)
asset.export("transitions", transitions)
