local util = asset.require('./../utility_functions')
local flyHome = asset.require('./../fly_home_alternatives')

----------------------------------------------------------------
-- STATES
----------------------------------------------------------------

local cbrState = {
    Identifier = "CBR",
    Enter = [[
        ]] .. util.setOrbitSpeedFactor(0.4) .. [[
        ]] .. util.startOrbiting() .. [[
        ]] .. util.orbitOnArrival() .. [[
        openspace.setPropertyValueSingle('Modules.Touch.TouchInteraction.DisableZoom', true);
    ]],
    Exit = [[
        ]] .. util.stopOrbiting() .. [[
        openspace.setPropertyValueSingle('Modules.Touch.TouchInteraction.DisableZoom', false);
    ]]
}

local states = { cbrState }

----------------------------------------------------------------
-- TRANSITIONS within this substate
----------------------------------------------------------------

local earthDistance = 20000000

local flyToEarth = [[
  openspace.time.setPause(true);
  ]] .. util.setCurveType("Linear") .. [[ 
  openspace.pathnavigation.flyToHeight(
    "Earth",
    ]] .. tostring(earthDistance) .. [[
  );
]]

local transitions = {
  -- Transition to/from this state
  {
    From = "Home",
    To = "CBR",
    Action = flyToEarth
  },
  {
    From = "CBR",
    To = "Home",
    Action = flyHome.linearFlight
  }
}

asset.export("states", states)
asset.export("transitions", transitions)
