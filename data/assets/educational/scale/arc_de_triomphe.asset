local earthAsset = asset.require('scene/solarsystem/planets/earth/earth')
local sunAsset = asset.require('scene/solarsystem/sun/sun')

local modelFolder = asset.syncedResource({
  Name = "Scale Model Arc de Triomphe",
  Type = "HttpSynchronization",
  Identifier = "scale_model_arc_de_triomphe",
  Version = 1
})

local scaleModel = {
  Identifier = "Scale_ArcDeTriomphe",
  Parent = earthAsset.Earth.Identifier,
  --Note: Lat/Lon/Scale values comes from alignment with Esri World Imagery 2D layer
  Transform = {
    Translation = {
      Type = "GlobeTranslation",
      Globe = earthAsset.Earth.Identifier,
      Latitude = 48.87389,
      Longitude = 2.29492,
      Altitude = 0.0,
      UseHeightmap = true
    },
    Rotation = {
      Type = "GlobeRotation",
      Globe = earthAsset.Earth.Identifier,
      Latitude = 48.87389,
      Longitude = 2.29492,
      UseHeightmap = false
    }
  },
  Renderable = {
    Type = "RenderableModel",
    GeometryFile = modelFolder .. "Fr_arch_OBJ.osmodel",
    LightSources = { sunAsset.LightSource },
  },
  GUI = {
    Name = "Arc de Triomphe",
    Path = "/Scale Objects"
  }
}

local updatePositionAction = {
  Identifier = "os.scale_models.drop_arc_de_triomphe",
  Name = "Drop Arc de Triomphe under camera",
  Command = [[
    openspace.globebrowsing.setNodePositionFromCamera('Scale_ArcDeTriomphe')
  ]],
  Documentation = "Updates the Arc de Triomphe position based on the globe location of the camera",
  GuiPath = "/Scale Objects",
  IsLocal = false
}

local resetPositionAction = {
  Identifier = "os.scale_models.reset_arc_de_triomphe",
  Name = "Reset Arc de Triomphe position",
  Command = [[
    openspace.globebrowsing.setNodePosition('Scale_ArcDeTriomphe', ']] .. earthAsset.Earth.Identifier .. [[', 48.87389, 2.29492)
  ]],
  Documentation = "Resets the Arc de Triomphe back to it's actual location",
  GuiPath = "/Scale Objects",
  IsLocal = false
}

asset.onInitialize(function()
  openspace.addSceneGraphNode(scaleModel)
  openspace.action.registerAction(updatePositionAction)
  openspace.action.registerAction(resetPositionAction)
end)

asset.onDeinitialize(function()
  openspace.action.removeAction(resetPositionAction)
  openspace.action.removeAction(updatePositionAction)
  openspace.removeSceneGraphNode(scaleModel)
end)

asset.export(scaleModel)
asset.export(updatePositionAction)
asset.export(resetPositionAction)
