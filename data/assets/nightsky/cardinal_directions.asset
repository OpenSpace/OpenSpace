local earthAsset = asset.require("scene/solarsystem/planets/earth/earth")



local textures = asset.syncedResource({
  Name = "Cardinal Direction Textures",
  Type = "UrlSynchronization",
  Identifier = "cardinal_direction_textures",
  Url = {
    "https://wms.openspace.amnh.org/static/sync/url/directions/sphere.png",
    "https://wms.openspace.amnh.org/static/sync/url/directions/sphere2.png",
    "https://wms.openspace.amnh.org/static/sync/url/directions/sphere3.png",
    "https://wms.openspace.amnh.org/static/sync/url/directions/sphere4.png",
    "https://wms.openspace.amnh.org/static/sync/url/directions/sphere5.png"
  },
  Override = false
})


local CardinalDirectionsPosition = {
  Identifier = "CardinalDirectionsPosition",
  Parent = earthAsset.Earth.Identifier,
  Transform = {
    Translation = {
      Type = "GlobeTranslation",
      Globe = earthAsset.Earth.Identifier,
      Latitude = 0.0,
      Longitude = 0.0,
      Altitude = 0.0,
      UseCamera = true
    },
    Rotation = {
      Type = "GlobeRotation",
      Globe = earthAsset.Earth.Identifier,
      Latitude = 0.0,
      Longitude = 0.0,
      UseCamera = true,
      Angle = 270.0
    }
  },
  GUI = {
    Name = "Cardinal Directions Position",
    Path = "/Other/Night Sky",
    Hidden = true
  }
}

local CardinalDirectionSphere = {
  Identifier = "CardinalDirectionSphere",
  Parent = CardinalDirectionsPosition.Identifier,
  Transform = {
    Rotation = {
      Type = "StaticRotation",
      Rotation = { -math.pi / 2, 0.0, 0.0 }
    }
  },
  Renderable = {
    Type = "RenderableSphere",
    Enabled = asset.enabled,
    Size = 50000,
    Segments = 80,
    Opacity = 0.9,
    Texture = textures .. "sphere.png",
    Orientation = "Inside",
    MirrorTexture = true,
    RenderBinMode = "PostDeferredTransparent"
  },
  GUI = {
    Name = "Cardinal Directions",
    Path = "/Other/Night Sky"
  }
}

local showCommand = [[
  local lat, lon, alt = openspace.globebrowsing.getGeoPositionForCamera()
  local camera = openspace.navigation.getNavigationState()
  openspace.setParent("CardinalDirectionsPosition", camera.Anchor)
  openspace.setPropertyValueSingle("Scene.CardinalDirectionsPosition.Translation.Globe", camera.Anchor)
  openspace.setPropertyValueSingle("Scene.CardinalDirectionsPosition.Translation.Latitude", lat)
  openspace.setPropertyValueSingle("Scene.CardinalDirectionsPosition.Translation.Longitude", lon)
  openspace.setPropertyValueSingle("Scene.CardinalDirectionsPosition.Rotation.Globe", camera.Anchor)
  openspace.setPropertyValueSingle("Scene.CardinalDirectionsPosition.Rotation.Latitude", lat)
  openspace.setPropertyValueSingle("Scene.CardinalDirectionsPosition.Rotation.Longitude", lon)
  openspace.setPropertyValueSingle("Scene.CardinalDirectionSphere.Renderable.Enabled", true)
  openspace.setPropertyValueSingle("Scene.CardinalDirectionSphere.Renderable.Fade", 0.0)
  openspace.setPropertyValueSingle("Scene.CardinalDirectionSphere.Renderable.Fade", 1.0, 1.0)
]]

local ShowNeswBand = {
Identifier = "os.nightsky.ShowNeswBand",
  Name = "Show cardinal directions (with ticks)",
  Command = [[
    openspace.setPropertyValueSingle("Scene.CardinalDirectionSphere.Renderable.Texture", "]] ..
    textures:gsub("\\","/") .. [[sphere5.png")]] .. showCommand,
  Documentation = "Shows the cardinal direction sphere with letters and circle with tick marks",
  GuiPath = "/Night Sky/Directions",
  IsLocal = false
}

local ShowNeswLetters = {
  Identifier = "os.nightsky.ShowNeswLetters",
  Name = "Show cardinal directions (letters only)",
  Command = [[
    openspace.setPropertyValueSingle("Scene.CardinalDirectionSphere.Renderable.Texture","]] ..
    textures:gsub("\\","/") .. [[sphere.png")]] .. showCommand,
  Documentation = "Shows the cardinal direction sphere with letters only",
  GuiPath = "/Night Sky/Directions",
  IsLocal = false
}

local HideNesw = {
  Identifier = "os.nightsky.HideNesw",
  Name = "Hide cardinal directions",
  Command = [[
    openspace.setPropertyValueSingle("Scene.CardinalDirectionSphere.Renderable.Fade", 0.0, 1.0)
  ]],
  Documentation = "Hides the cardinal directions",
  GuiPath = "/Night Sky/Directions",
  IsLocal = false
}

asset.onInitialize(function()
  openspace.addSceneGraphNode(CardinalDirectionsPosition)
  openspace.addSceneGraphNode(CardinalDirectionSphere)
  openspace.action.registerAction(ShowNeswBand)
  openspace.action.registerAction(ShowNeswLetters)
  openspace.action.registerAction(HideNesw)
end)

asset.onDeinitialize(function()
  openspace.action.removeAction(HideNesw)
  openspace.action.removeAction(ShowNeswLetters)
  openspace.action.removeAction(ShowNeswBand)
  openspace.removeSceneGraphNode(CardinalDirectionSphere)
  openspace.removeSceneGraphNode(CardinalDirectionsPosition)
end)

asset.export(CardinalDirectionsPosition)
asset.export(CardinalDirectionSphere)
asset.export("ShowNeswBand", ShowNeswBand.Identifier)
asset.export("ShowNeswLetters", ShowNeswLetters.Identifier)
asset.export("HideNesw", HideNesw.Identifier)
