local earthAsset = asset.require("scene/solarsystem/planets/earth/earth")



local MeridianPosition = {
  Identifier = "MeridianPosition",
  Parent = earthAsset.Earth.Identifier,
  Transform = {
    Translation = {
      Type = "GlobeTranslation",
      Globe = earthAsset.Earth.Identifier,
      Latitude = 0.0,
      Longitude = 0.0,
      Altitude = 0.0,
      UseCamera = true
    },
    Rotation = {
      Type = "GlobeRotation",
      Globe = earthAsset.Earth.Identifier,
      Latitude = 0.0,
      Longitude = 0.0,
      UseCamera = true
    }
  },
  GUI = {
    Name = "Local Meridian Position",
    Path = "/Other/Lines",
    Hidden = true
  }
}

local MeridianPlane = {
  Identifier = "MeridianPlane",
  Parent = MeridianPosition.Identifier,
  Transform = {
    Scale = {
      Type = "StaticScale",
      Scale = 1000000
    }
  },
  Renderable = {
    Type = "RenderableRadialGrid",
    Opacity = 0.8,
    Color = { 1.0, 1.0, 1.0 },
    LineWidth = 3.0,
    GridSegments = { 1, 1 },
    Radii = { 0.5, 0.5 },
    Enabled = asset.enabled,
    RenderBinMode = "PostDeferredTransparent"
  },
  GUI = {
    Name = "Local Meridian",
    Path = "/Other/Lines"
  }
}

local ShowMeridian = {
  Identifier = "os.nightsky.ShowMeridian",
  Name = "Show local meridian",
  Command = [[
    local lat, lon, alt = openspace.globebrowsing.getGeoPositionForCamera()
    local camera = openspace.navigation.getNavigationState()
    openspace.setParent("MeridianPosition", camera.Anchor)
    openspace.setPropertyValueSingle("Scene.MeridianPosition.Translation.Globe", camera.Anchor)
    openspace.setPropertyValueSingle("Scene.MeridianPosition.Translation.Latitude", lat)
    openspace.setPropertyValueSingle("Scene.MeridianPosition.Translation.Longitude", lon)
    openspace.setPropertyValueSingle("Scene.MeridianPosition.Rotation.Globe", camera.Anchor)
    openspace.setPropertyValueSingle("Scene.MeridianPosition.Rotation.Latitude", lat)
    openspace.setPropertyValueSingle("Scene.MeridianPosition.Rotation.Longitude", lon)
    openspace.setPropertyValueSingle("Scene.MeridianPlane.Renderable.Enabled", true)
    openspace.setPropertyValueSingle("Scene.MeridianPlane.Renderable.Fade", 0.0)
    openspace.setPropertyValueSingle("Scene.MeridianPlane.Renderable.Fade", 1.0, 1.0)
  ]],
  Documentation = "Shows a line for the local meridian",
  GuiPath = "/Night Sky/Lines and Grids",
  IsLocal = false
}

local HideMeridian = {
  Identifier = "os.nightsky.HideMeridian",
  Name = "Hide local meridian",
  Command = [[
    openspace.setPropertyValueSingle("Scene.MeridianPlane.Renderable.Fade", 0.0, 1.0)
  ]],
  Documentation = "Hides the line for the local meridian",
  GuiPath = "/Night Sky/Lines and Grids",
  IsLocal = false
}


asset.onInitialize(function()
  openspace.addSceneGraphNode(MeridianPosition)
  openspace.addSceneGraphNode(MeridianPlane)
  openspace.action.registerAction(ShowMeridian)
  openspace.action.registerAction(HideMeridian)
end)

asset.onDeinitialize(function()
  openspace.action.removeAction(HideMeridian)
  openspace.action.removeAction(ShowMeridian)
  openspace.removeSceneGraphNode(MeridianPlane)
  openspace.removeSceneGraphNode(MeridianPosition)
end)

asset.export(MeridianPosition)
asset.export(MeridianPlane)
asset.export("ShowMeridian", ShowMeridian.Identifier)
asset.export("HideMeridian", HideMeridian.Identifier)
