local bookmarkHelper = asset.require("util/generate_bookmarks")

-- Most of the local bookmarks we are loading are relative to the Earth so we should
-- ensure that it is loaded first
asset.require("scene/solarsystem/planets/earth/earth")



local localBookmarks = openspace.absPath("${USER}/bookmarks/localbookmarks.csv")
local bookmarksDirectory = openspace.absPath("${USER}/bookmarks")

if not openspace.directoryExists(bookmarksDirectory) then
  openspace.createDirectory(bookmarksDirectory)
end

-- Create bookmarks file if it does not exist
if not openspace.fileExists(localBookmarks) then
  openspace.downloadFile(
    "http://liu-se.cdn.openspaceproject.com/files/misc/localbookmarks.csv",
    openspace.absPath("${USER}/bookmarks/localbookmarks.csv"),
    true
  )
end

local nodes = bookmarkHelper.loadBookmarks(
  "Local Bookmarks",
  "${USER}/bookmarks/localbookmarks.csv"
)


asset.onInitialize(function()
  for _, n in ipairs(nodes) do
    local success, error = pcall(openspace.addSceneGraphNode, n)
    if not success then
      openspace.printError(error)
    end
  end
end)

asset.onDeinitialize(function()
  for _, n in ipairs(nodes) do
    if openspace.hasSceneGraphNode(n.Identifier) then
      openspace.removeSceneGraphNode(n)
    end
  end
end)

for _, n in ipairs(nodes) do
  asset.export(n)
end
