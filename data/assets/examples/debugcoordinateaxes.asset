local earthTransforms = asset.require("scene/solarsystem/planets/earth/transforms")
--local magnetosphereTransforms = asset.require("scene/solarsystem/planets/earth/magnetosphere/transforms_magnetosphere")
local GSM_SM_Transforms = asset.require("scene/solarsystem/planets/earth/transforms_GSM_SM")
local GSE_Transforms = asset.require("scene/solarsystem/planets/earth/transforms_GSE")
local GSM_SM_Time_Transforms = asset.require("scene/solarsystem/planets/earth/transforms_GSM_SM_TimeDependent")
local sunTransforms = asset.require("scene/solarsystem/sun/transforms")



local SunRadius = 6.957E8
local EarthRadius = 6.371E6


local GSEAxes = {
  Identifier = "GSECoordinateAxes",
  Parent = GSE_Transforms.GSEReferenceFrame.Identifier,
  Transform = {
    Scale ={
      Type = "StaticScale",
      Scale = EarthRadius * 3.5
    }
  },
  Renderable = {
    Type = "RenderableCartesianAxes"
  },
  GUI = {
    Name = "GSE Axes",
    Path = "/Other/Coordinate Systems"
  }
}

local GSMAxes = {
  Identifier = "GSMCoordinateAxes",
  Parent = GSM_SM_Transforms.GSMReferenceFrame.Identifier,
  Transform = {
    Scale ={
      Type = "StaticScale",
      Scale = EarthRadius * 3.5
    }
  },
  Renderable = {
    Type = "RenderableCartesianAxes"
  },
  GUI = {
    Name = "GSM Axes",
    Path = "/Other/Coordinate Systems"
  }
}

local SMAxes = {
  Identifier = "SMCoordinateAxes",
  Parent = GSM_SM_Transforms.SMReferenceFrame.Identifier,
  Transform = {
    Scale ={
      Type = "StaticScale",
      Scale = EarthRadius * 3.5
    }
  },
  Renderable = {
    Type = "RenderableCartesianAxes"
  },
  GUI = {
    Name = "SM Axes",
    Path = "/Other/Coordinate Systems"
  }
}

local SMTimeAxes = {
  Identifier = "SMTimeCoordinateAxes",
  Parent = GSM_SM_Time_Transforms.SMTimeReferenceFrame.Identifier,
  Transform = {
    Scale ={
      Type = "StaticScale",
      Scale = EarthRadius * 5.5
    }
  },
  Renderable = {
    Type = "RenderableCartesianAxes"
  },
  GUI = {
    Name = "SM-Time Axes",
    Path = "/Other/Coordinate Systems"
  }
}

local GSMTimeAxes = {
  Identifier = "GSMTimeCoordinateAxes",
  Parent = GSM_SM_Time_Transforms.GSMTimeReferenceFrame.Identifier,
  Transform = {
    Scale ={
      Type = "StaticScale",
      Scale = EarthRadius * 5.5
    }
  },
  Renderable = {
    Type = "RenderableCartesianAxes"
  },
  GUI = {
    Name = "GSM-Time Axes",
    Path = "/Other/Coordinate Systems"
  }
}

local EarthBarycenterAxes = {
  Identifier = "EarthBarycenterAxes",
  Parent = earthTransforms.EarthBarycenter.Identifier,
  Transform = {
    Scale = {
      Type = "StaticScale",
      Scale = EarthRadius * 3.5
    }
  },
  Renderable = {
    Type = "RenderableCartesianAxes"
  },
  GUI = {
    Name = "Earth Barycenter Axes",
    Path = "/Other/Coordinate Systems"
  }
}

local EarthInertialAxes = {
  Identifier = "EarthInertialAxes",
  Parent = earthTransforms.EarthInertial.Identifier,
  Transform = {
    Scale = {
      Type = "StaticScale",
      Scale = EarthRadius * 2.5
    }
  },
  Renderable = {
    Type = "RenderableCartesianAxes"
  },
  GUI = {
    Name = "Earth Inertial Axes",
    Path = "/Other/Coordinate Systems"
  }
}

local EarthIAUAxes = {
  Identifier = "EarthIAUAxes",
  Parent = earthTransforms.EarthIAU.Identifier,
  Transform = {
    Scale = {
      Type = "StaticScale",
      Scale = EarthRadius * 1.5
    }
  },
  Renderable = {
    Type = "RenderableCartesianAxes"
  },
  GUI = {
    Name = "Earth IAU Axes",
    Path = "/Other/Coordinate Systems"
  }
}

local SunIAUAxes = {
  Identifier = "SunIAUAxes",
  Parent = sunTransforms.SunIAU.Identifier,
  Transform = {
    Scale = {
      Type = "StaticScale",
      Scale = SunRadius * 300
    }
  },
  Renderable = {
    Type = "RenderableCartesianAxes"
  },
  GUI = {
    Name = "Sun IAU Axes",
    Path = "/Other/Coordinate Systems"
  }
}

local SolarSystemBarycenterAxes = {
  Identifier = "SolarSystemBarycenterAxes",
  Parent = sunTransforms.SolarSystemBarycenter.Identifier,
  Transform = {
    Scale = {
      Type = "StaticScale",
      Scale = SunRadius * 300
    }
  },
  Renderable = {
    Type = "RenderableCartesianAxes"
  },
  GUI = {
    Name = "Solar System Barycenter Axes",
    Path = "/Other/Coordinate Systems"
  }
}


asset.onInitialize(function()
  openspace.addSceneGraphNode(EarthBarycenterAxes)
  openspace.addSceneGraphNode(EarthInertialAxes)
  openspace.addSceneGraphNode(EarthIAUAxes)
  openspace.addSceneGraphNode(SunIAUAxes)
  openspace.addSceneGraphNode(SolarSystemBarycenterAxes)
  openspace.addSceneGraphNode(GSEAxes)
  openspace.addSceneGraphNode(GSMTimeAxes)
  openspace.addSceneGraphNode(GSMAxes)
  openspace.addSceneGraphNode(SMAxes)
  openspace.addSceneGraphNode(SMTimeAxes)
end)

asset.onDeinitialize(function()
  openspace.removeSceneGraphNode(SMTimeAxes)
  openspace.removeSceneGraphNode(SMAxes)
  openspace.removeSceneGraphNode(GSMAxes)
  openspace.removeSceneGraphNode(GSMTimeAxes)
  openspace.removeSceneGraphNode(GSEAxes)
  openspace.removeSceneGraphNode(SolarSystemBarycenterAxes)
  openspace.removeSceneGraphNode(SunIAUAxes)
  openspace.removeSceneGraphNode(EarthIAUAxes)
  openspace.removeSceneGraphNode(EarthInertialAxes)
  openspace.removeSceneGraphNode(EarthBarycenterAxes)
end)

asset.export(EarthBarycenterAxes)
asset.export(EarthInertialAxes)
asset.export(EarthIAUAxes)
asset.export(SunIAUAxes)
asset.export(SolarSystemBarycenterAxes)
asset.export(GSEAxes)
asset.export(GSMTimeAxes)
asset.export(GSMAxes)
asset.export(SMAxes)
asset.export(SMTimeAxes)



asset.meta = {
  Name = "Debug Coordinates",
  Description = [[A set of coordinate axes demonstrating different XYZ coordinate
    reference frames that are useful for debugging, such as the Earth or Solar
    System Barycenter.]],
  Author = "OpenSpace Team",
  URL = "http://openspaceproject.com",
  License = "MIT license"
}
