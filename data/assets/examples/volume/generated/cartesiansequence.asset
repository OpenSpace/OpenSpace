-- Before using this example,
-- the volume data itself needs to be generated,
-- using the task 'data/tasks/volume/generate_cartesian_sequence.task'

local transforms = asset.require("scene/solarsystem/sun/transforms")



local SunRadius = 695508000

local Volume = {
  Identifier = "GeneratedVolume",
  Parent = transforms.SolarSystemBarycenter.Identifier,
  Renderable = {
    Type = "RenderableTimeVaryingVolume",
    SourceDirectory = asset.localResource("cartesiansequence"),
    TransferFunction = asset.localResource("../transferfunction.txt"),
    StepSize = 0.01,
    MinValue = 0,
    MaxValue = 1,
    GridType = "Cartesian",
    SecondsBefore = 50 * 365 * 24 * 60 * 60, -- 50 years before
    SecondsAfter = 50 * 365 * 24 * 60 * 60 -- 50 years after
  },
  GUI = {
    Path = "/Examples"
  },
  Transform = {
    Scale = {
      Type = "StaticScale",
      Scale = 1000 * SunRadius
    }
  }
}


asset.onInitialize(function()
  openspace.addSceneGraphNode(Volume)
end)

asset.onDeinitialize(function()
  openspace.removeSceneGraphNode(Volume)
end)

asset.export(Volume)
