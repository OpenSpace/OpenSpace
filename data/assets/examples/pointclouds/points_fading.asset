local earthAsset = asset.require("scene/solarsystem/planets/earth/earth")



local EarthRadius = 6371000

local Example = {
  Identifier = "ExamplePoints_Fading",
  Parent = earthAsset.Earth.Identifier,
  Renderable = {
    Type = "RenderablePointCloud",
    File = asset.resource("data/dummydata.csv"),
    Coloring = {
      FixedColor = { 0.0, 0.3, 1.0 }
    },
    Fading = {
      -- Control at what distance the points fade in. The points will be invisible
      -- when the camera is closer than the first value, and fully visible when the
      -- camera is further away then the last value. In-between they will linearly
      -- fade in or out
      FadeInDistances = { 15.0 * EarthRadius, 35.0 * EarthRadius }
    }
  },
  GUI = {
    Name = "PointCloud - Fading",
    Path = "/Example/Point Clouds",
    Description = [[Example of a point cloud with distance-based fading (the points
      are visible when the camera reaches a certain distance away from the origin)]]
  }
}

local Example_Invert = {
  Identifier = "ExamplePoints_FadingInverted",
  Parent = earthAsset.Earth.Identifier,
  -- Rotate so that the points don't overlap with the previous ones
  Transform = {
    Rotation = {
      Type = "StaticRotation",
      Rotation = { 0, math.pi, 0 }
    }
  },
  Renderable = {
    Type = "RenderablePointCloud",
    File = asset.resource("data/dummydata.csv"),
    Coloring = {
      FixedColor = { 1.0, 0.3, 0.0 }
    },
    Fading = {
      -- Use the same fade distances, but invert the fading so that the points are
      -- visible when the camera is closer to the origin that the first value, and
      -- invisible when further away than the last value
      FadeInDistances = { 15.0 * EarthRadius, 35.0 * EarthRadius },
      Invert = true
    }
  },
  GUI = {
    Name = "PointCloud - Fading (Inverted)",
    Path = "/Example/Point Clouds",
    Description = [[Example of a point cloud with inverted distance-based fading
      (the points are visible when the camera is close to the origin, and invisible
      when further away)]]
  }
}


asset.onInitialize(function()
  openspace.addSceneGraphNode(Example)
  openspace.addSceneGraphNode(Example_Invert)
end)

asset.onDeinitialize(function()
  openspace.removeSceneGraphNode(Example_Invert)
  openspace.removeSceneGraphNode(Example)
end)

asset.export(Example)
asset.export(Example_Invert)



asset.meta = {
  Name = "Example - Point Cloud with Fading",
  Version = "1.0",
  Description = [[Example of a point cloud with distance-based fading]],
  Author = "OpenSpace Team",
  URL = "http://openspaceproject.com",
  License = "MIT license"
}
