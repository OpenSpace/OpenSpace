local earthAsset = asset.require("scene/solarsystem/planets/earth/earth")



local Example = {
  Identifier = "ExamplePoints_ColorMapping",
  Parent = earthAsset.Earth.Identifier,
  Renderable = {
    Type = "RenderablePointCloud",
    File = asset.resource("data/dummydata.csv"),
    Coloring = {
      ColorMapping = {
        File = asset.resource("viridis.cmap"),
        -- Set the default choice of parameter and value range explicitly. Values
        -- outside this range will be given special colors
        Parameter = "normaldist_withMissing",
        ValueRange = { -0.25, 0.25 },
        -- Show missing data values, so we can show these in a specific color
        ShowMissingData = true,
        -- Color for missing data points
        NoDataColor = { 1.0, 0.0, 0.0, 1.0 },
        -- Color for point with values above the given range. If not set, or if
        -- UseAboveRangeColor is false, the color will be set to the last value
        -- in the color map (as per default)
        AboveRangeColor = { 0.0, 1.0, 0.0, 1.0 },
        -- Color for point with values below the given range. If not set, or if
        -- UseAboveRangeColor is false, the color will be set to the first value
        -- in the color map (as per default)
        BelowRangeColor = { 0.0, 0.0, 1.0, 1.0 },

        -- Some other parameters that can be set are the following (these are all the
        -- default values):

        -- If true, completely hide all values outside the range
        HideValuesOutsideRange = false,
        -- Toggle whether the above range color should be used
        UseAboveRangeColor = true,
        -- Toggle whether the below range color should be used
        UseBelowRangeColor = true
      }
    },
    SizeSettings = {
      -- Reduce the size of the point a little bit so that they don't overlap so much
      ScaleFactor = 0.5
    }
  },
  GUI = {
    Name = "Advanced Color Mapping Settings",
    Path = "/Example/Point Clouds",
    Description = [[Example of a point cloud where the range is set explicitly and
      specific colors are used for values outside the range, as well as for missing
      data values.]]
  }
}


asset.onInitialize(function()
  openspace.addSceneGraphNode(Example)
end)

asset.onDeinitialize(function()
  openspace.removeSceneGraphNode(Example)
end)

asset.export(Example)



asset.meta = {
  Name = "Example - Advanced Color Mapping Settings",
  Version = "1.0",
  Description = [[Example of a point cloud where the range is set explicitly and
    specific colors are used for values outside the range, as well as for missing
    data values]],
  Author = "OpenSpace Team",
  URL = "http://openspaceproject.com",
  License = "MIT license"
}
