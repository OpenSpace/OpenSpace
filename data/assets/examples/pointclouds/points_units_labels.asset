local earthAsset = asset.require("scene/solarsystem/planets/earth/earth")

-- @TODO The labels are not correctly oriented towards the camera!

local Example = {
  Identifier = "ExamplePoints_UnitsAndLabels",
  Parent = earthAsset.Earth.Identifier,
  Renderable = {
    Type = "RenderablePointCloud",
    File = asset.resource("data/dummydata.csv"),
    Coloring = {
      FixedColor = { 0.0, 0.3, 1.0 }
    },
    DataMapping = {
      -- When loading a CSV file, we need to provide information about which column
      -- Corresponds to the name to be used for the labels (this is not required for
      -- SPECK files)
      Name = "number_withNan"
    },
    -- Add a unit to interpret the points to be in kilometers rather than meters
    Unit = "Km",
    -- Add some labels. We also need to enable them for them ot be visible.
    -- Since we do not specify a label file (see below), the positions and text of
    -- of the labels will be set based on the information in the CSV file
    Labels = {
      Enabled = true,
      Size = 7.5
    }
  },
  GUI = {
    Name = "Units & Labels",
    Path = "/Example/Point Clouds",
    Description = [[Example of a point cloud with labels created by specifying a 'Name'
      column for the dataset. The positions of the labels will exactly match that of the
      points and the data values for the positions are interpreted in Kilometers]]
  }
}

local Example_LabelFromFile = {
  Identifier = "ExamplePoints_UnitsAndLabels_File",
  Parent = earthAsset.Earth.Identifier,
  Renderable = {
    Type = "RenderablePointCloud",
    File = asset.resource("data/dummydata.csv"),
    Coloring = {
      FixedColor = { 0.0, 0.3, 1.0 }
    },
    -- Add a unit to interpret the points to be in kilometers rather than meters
    Unit = "Km",
    -- Also load a label file with the positions of the label (in this case they are the
    -- same as in the CSV file, but that is not always the case)
    Labels = {
      Enabled = true,
      File = asset.resource("data/dummydata.label"),
      Size = 7.5,
      -- When we add an explicit label file we also have to specify the unit, if it is
      -- different than meters
      Unit = "Km"
    }
  },
  GUI = {
    Name = "Units & Labels (Explicit Label file)",
    Path = "/Example/Point Clouds",
    Description = [[Example of a point cloud with labels, created from a label file. The
      positions are given in Kilometers]]
  }
}


asset.onInitialize(function()
  openspace.addSceneGraphNode(Example)
  openspace.addSceneGraphNode(Example_LabelFromFile)
end)

asset.onDeinitialize(function()
  openspace.removeSceneGraphNode(Example_LabelFromFile)
  openspace.removeSceneGraphNode(Example)
end)

asset.export(Example)
asset.export(Example_LabelFromFile)


asset.meta = {
  Name = "Example - Point Cloud with Unit and Labels",
  Version = "1.0",
  Description = [[Example of point clouds with labels, either set from the data file
    itself or from a separate .label file]],
  Author = "OpenSpace Team",
  URL = "http://openspaceproject.com",
  License = "MIT license"
}
