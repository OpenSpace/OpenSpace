local propertyHelper = asset.require("../property_helper")
local joystickHelper = asset.require("./joystick_helper")



-- Allowed values for the third parameter of bindJoystickAxis:
-- "None"
-- "Orbit X"
-- "Orbit Y"
-- "Zoom" -- both in and out
-- "Zoom In"
-- "Zoom Out"
-- "LocalRoll"
-- "GlobalRoll"
-- "Pan X"
-- "Pan Y"
-- Fourth parameter determines whether the axis should be inverted
-- Fifth parameter determines whether the axis behaves like a joystick or a Trigger.
--       Allowed values are "JoystickLike" and "TriggerLike", the first one is the default
-- Sixth parameters determins if the axis should be "Sticky" or not.
--       The axis values can either go back to 0 when the joystick is released or it can
--       stay at the value it was before the joystick was released.
--       The latter is called a sticky axis, when the values don't go back to 0.
-- Seventh parameter can be used to reverse the camera movement for the axis
-- Eighth parameter is the sensitivity for the axis

local PS4Controller = {
  -- Axes
  LeftThumbStick = {
    LeftRight = 0,
    UpDown = 1
  },
  RightThumbStick = {
    LeftRight = 2,
    UpDown = 5
  },
  L2 = 3,
  R2 = 4,

  -- Buttons
  Cross = 1,
  Circle = 2,
  Square = 0,
  Triangle = 3,
  L1 = 4,
  R1 = 5,
  Share = 8,
  Options = 9,
  PS = 12,
  LeftStickButton = 10,
  RightStickButton = 11,
  TouchPad = 13,
  DPad = {
    Up = 14,
    Right = 15,
    Down = 16,
    Left = 17
  }
}


asset.onInitialize(function()
  local controller = PS4Controller
  local name = "Wireless Controller"

  local deadzoneJoysticks = 0.2
  local deadzoneTriggers = 0.05
  openspace.navigation.setAxisDeadZone(name, controller.LeftThumbStick.LeftRight, deadzoneJoysticks)
  openspace.navigation.setAxisDeadZone(name, controller.LeftThumbStick.UpDown, deadzoneJoysticks)
  openspace.navigation.setAxisDeadZone(name, controller.RightThumbStick.LeftRight, deadzoneJoysticks)
  openspace.navigation.setAxisDeadZone(name, controller.RightThumbStick.UpDown, deadzoneJoysticks)
  openspace.navigation.setAxisDeadZone(name, controller.L2, deadzoneTriggers)
  openspace.navigation.setAxisDeadZone(name, controller.R2, deadzoneTriggers)

  openspace.navigation.bindJoystickAxis(name, controller.LeftThumbStick.LeftRight, "Orbit X")
  openspace.navigation.bindJoystickAxis(name, controller.LeftThumbStick.UpDown, "Orbit Y")
  openspace.navigation.bindJoystickAxis(name, controller.RightThumbStick.LeftRight, "Pan X", true)
  openspace.navigation.bindJoystickAxis(name, controller.RightThumbStick.UpDown, "Pan Y", true)
  openspace.navigation.bindJoystickAxis(name, controller.L2, "Zoom Out", false, "TriggerLike")
  openspace.navigation.bindJoystickAxis(name, controller.R2, "Zoom In", false, "TriggerLike")

  -- Roll
  openspace.navigation.bindJoystickButton(
    name,
    controller.DPad.Up,
    joystickHelper.bindLocalRoll(name, controller.RightThumbStick.LeftRight) ..
    "openspace.navigation.bindJoystickAxis('" .. name .. "', " .. controller.RightThumbStick.UpDown .. ", 'None')",
    "Switch to roll mode"
  )
  openspace.navigation.bindJoystickButton(
    name,
    controller.DPad.Up,
    joystickHelper.unbindRoll(name, controller.RightThumbStick.LeftRight) ..
    "openspace.navigation.bindJoystickAxis('" .. name .. "', " .. controller.RightThumbStick.UpDown .. ", 'Pan Y', true)",
    "Switch back to normal mode",
    "Release"
  )

  -- Switch focus in the interesting nodes menu
  openspace.navigation.bindJoystickButton(
    name,
    controller.L1,
    [[
      openspace.navigation.targetPreviousInterestingAnchor()
      openspace.navigation.retargetAnchor()
    ]],
    "Switch target to the previous interesting node"
  )

  openspace.navigation.bindJoystickButton(
    name,
    controller.R1,
    [[
      openspace.navigation.targetNextInterestingAnchor()
      openspace.navigation.retargetAnchor()
    ]],
    "Switch target to the next interesting node"
  )

  -- Toggle Frictions
  openspace.navigation.bindJoystickButton(
    name,
    controller.Cross,
    propertyHelper.invert("NavigationHandler.OrbitalNavigator.Friction.RotationalFriction"),
    "Toggle rotational friction"
  )
  openspace.navigation.bindJoystickButton(
    name,
    controller.Circle,
    propertyHelper.invert("NavigationHandler.OrbitalNavigator.Friction.ZoomFriction"),
    "Toggle zoom friction"
  )
  openspace.navigation.bindJoystickButton(
    name,
    controller.Triangle,
    propertyHelper.invert("NavigationHandler.OrbitalNavigator.Friction.RollFriction"),
    "Toggle roll friction"
  )

  -- Refocus
  openspace.navigation.bindJoystickButton(
    name,
    controller.RightStickButton,
    "openspace.navigation.retargetAnchor()",
    "Retarget on current focus"
  )

  -- Time
  openspace.navigation.bindJoystickButton(
    name,
    controller.DPad.Left,
    "openspace.time.interpolatePreviousDeltaTimeStep()",
    "Go backwards in time, faster the more times this button is pressed"
  )

  openspace.navigation.bindJoystickButton(
    name,
    controller.DPad.Down,
    "openspace.time.interpolateDeltaTime(1)",
    "Reset realtime"
  )

  openspace.navigation.bindJoystickButton(
    name,
    controller.DPad.Right,
    "openspace.time.interpolateNextDeltaTimeStep()",
    "Go forwards in time, faster the more times this button is pressed"
  )

  -- Reset Time to yesterday
  openspace.navigation.bindJoystickButton(
    name,
    controller.Options,
    [[
      openspace.time.setDeltaTime(1)
      local yesterday = openspace.time.advancedTime(openspace.time.currentWallTime(), "-1d")
      openspace.time.setTime(yesterday)
    ]],
    "Reset to yesterday realtime"
  )

  -- Pause
  openspace.navigation.bindJoystickButton(
    name,
    controller.TouchPad,
    "openspace.time.togglePause()",
    "Pause time simulation"
  )

  -- Open buttons that can be customized
  -- Square
  openspace.navigation.bindJoystickButton(
    name,
    controller.Square,
    [[
      -- <-- Copy paste your custom script here
    ]],
    ""  -- <-- Description of your custom script here (optional)
  )

  -- Share button
  openspace.navigation.bindJoystickButton(
    name,
    controller.Share,
    [[
      -- <-- Copy paste your custom script here
    ]],
    ""  -- <-- Description of your custom script here (optional)
  )

  -- Left Joystick Button
  openspace.navigation.bindJoystickButton(
    name,
    controller.LeftStickButton,
    [[
      -- <-- Copy paste your custom script here
    ]],
    ""  -- <-- Description of your custom script here (optional)
  )

  -- Playstation button
  openspace.navigation.bindJoystickButton(
    name,
    controller.PS,
    [[
      -- <-- Copy paste your custom script here
    ]],
    ""  -- <-- Description of your custom script here (optional)
  )
end)
