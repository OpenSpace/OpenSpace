local propertyHelper = asset.require('../property_helper')
local joystickHelper = asset.require('./joystick_helper')

-- Allowed values for the second parameter of bindJoystickAxis:
-- "None"
-- "Orbit X"
-- "Orbit Y"
-- "Zoom" -- both in and out
-- "Zoom In"
-- "Zoom Out"
-- "LocalRoll X"
-- "LocalRoll Y"
-- "GlobalRoll X"
-- "GlobalRoll Y"
-- "Pan X"
-- "Pan Y"
-- Third parameter determines whether the axis should be inverted
-- Fourth parameter determines whether the axis should be normalized from [-1,1] to [0,1]
-- Fifth parameters determins if the axis should be "Sticky" or not.
--       The axis values can either go back to 0 when the joystick is released or it can
--       stay at the value it was before the joystick was released.
--       The latter is called a sticky axis, when the values don't go back to 0.
-- Sixth parameter is the sensitivity for the axis

local TA320Pilot = {
  Tilt = { 0, 1 }, -- left/right, back/forth
  Twist = { 2 }, -- left/right
  Thrust = { 3 }, -- up/down
  Trigger = 0,
  TriggerButton = 1,
  LeftButton = 2,
  RightButton = 3,
  RightPanel = {
    TopLeft = 6,
    TopMid = 5,
    TopRight = 4,
    BotLeft = 7,
    BotMid = 8,
    BotRight = 9
  },
  LeftPanel = {
    TopLeft = 10,
    TopMid = 11,
    TopRight = 12,
    BotLeft = 15,
    BotMid = 14,
    BotRight = 13,
  },
  ThrustAllDown = 16,
  MiniJoystick = {
    Up = 17,
    Right = 18,
    Down = 19,
    Left = 20
  }
}

asset.onInitialize(function()
  local controller = TA320Pilot;
  local name = "T.A320 Pilot";

  -- Deadzones
  openspace.navigation.setAxisDeadZone(name, controller.Tilt[1], 0.1);
  openspace.navigation.setAxisDeadZone(name, controller.Tilt[2], 0.1);
  openspace.navigation.setAxisDeadZone(name, controller.Twist[1], 0.1);

  -- Bind axis
  openspace.navigation.bindJoystickAxis(name, controller.Tilt[1], "Orbit X");
  openspace.navigation.bindJoystickAxis(name, controller.Tilt[2], "Orbit Y");
  openspace.navigation.bindJoystickAxis(name, controller.Twist[1], "GlobalRoll X", true);

  -- Bind buttons
  -- Bomb
  openspace.navigation.bindJoystickButton(
    name,
    controller.TriggerButton,
    "openspace.setPropertyValueSingle('ScreenSpace.bomb.CartesianPosition', {0.0, -1.5, -2.000000})" ..
    "openspace.setPropertyValueSingle('ScreenSpace.bomb.Scale', 0.3)" ..
    "openspace.setPropertyValueSingle('ScreenSpace.bomb.CartesianPosition', {0.0, 1.5, -2.000000}, 2.5)" ..
    "openspace.setPropertyValueSingle('ScreenSpace.bomb.Scale', 0.0, 1.25)",
    "Bomb"
  );

  -- Small fire
  openspace.navigation.bindJoystickButton(
    name,
    controller.Trigger,
    "openspace.setPropertyValueSingle('ScreenSpace.shot.CartesianPosition', {0.0, -1.8, -2.000000})" ..
    "openspace.setPropertyValueSingle('ScreenSpace.shot.Scale', 0.3)" ..
    "openspace.setPropertyValueSingle('ScreenSpace.shot.CartesianPosition', {0.0, 1.8, -2.000000}, 1.0)" ..
    "openspace.setPropertyValueSingle('ScreenSpace.shot.Scale', 0.0, 0.5)",
    "Pew Pew"
  );


  -- Crosshair
  openspace.navigation.bindJoystickButton(
    name,
    controller.Trigger,
    "openspace.setPropertyValueSingle('ScreenSpace.crosshair.Enabled', true);",
    "Crosshair on",
    "Press"
  );
  openspace.navigation.bindJoystickButton(
    name,
    controller.Trigger,
    "openspace.setPropertyValueSingle('ScreenSpace.crosshair.Enabled', false);",
    "Crosshair off",
    "Release"
  );


  -- Space cow
  openspace.navigation.bindJoystickButton(
    name,
    controller.MiniJoystick.Up,
    "openspace.setPropertyValueSingle('ScreenSpace.space-cow.CartesianPosition', {0.0, -1.5, -2.000000})" ..
    "openspace.setPropertyValueSingle('ScreenSpace.space-cow.CartesianPosition', {0.0, 1.5, -2.000000}, 5.0)",
    "Cow Up"
  );
  openspace.navigation.bindJoystickButton(
    name,
    controller.MiniJoystick.Right,
    "openspace.setPropertyValueSingle('ScreenSpace.space-cow.CartesianPosition', {-3.0, 0.0, -2.000000})" ..
    "openspace.setPropertyValueSingle('ScreenSpace.space-cow.CartesianPosition', {3.0, 0.0, -2.000000}, 5.5)",
    "Cow Right"
  );
  -- Wrench
  openspace.navigation.bindJoystickButton(
    name,
    controller.MiniJoystick.Down,
    "openspace.setPropertyValueSingle('ScreenSpace.wrench.CartesianPosition', {0.0, 1.5, -2.000000})" ..
    "openspace.setPropertyValueSingle('ScreenSpace.wrench.Rotation', {-3.000000, 0.000000, 0.000000})" ..
    "openspace.setPropertyValueSingle('ScreenSpace.wrench.CartesianPosition', {0.0, -1.5, -2.000000}, 5.0)" ..
    "openspace.setPropertyValueSingle('ScreenSpace.wrench.Rotation', {3.000000, 0.000000, 0.000000}, 5.0)",
    "Wrench Down"
  );
  openspace.navigation.bindJoystickButton(
    name,
    controller.MiniJoystick.Left,
    "openspace.setPropertyValueSingle('ScreenSpace.wrench.CartesianPosition', {3.0, 0.0, -2.000000})" ..
    "openspace.setPropertyValueSingle('ScreenSpace.wrench.Rotation', {-3.000000, 0.000000, 0.000000})" ..
    "openspace.setPropertyValueSingle('ScreenSpace.wrench.CartesianPosition', {-3.0, 0.0, -2.000000}, 5.5)" ..
    "openspace.setPropertyValueSingle('ScreenSpace.wrench.Rotation', {3.000000, 0.000000, 0.000000}, 5.5)",
    "Wrench Left"
  );

  -- UFO
  openspace.navigation.bindJoystickButton(
    name,
    controller.RightButton,
    "openspace.setPropertyValueSingle('ScreenSpace.ufo.CartesianPosition', {3.0, 0.5, -2.000000})" ..
    "openspace.setPropertyValueSingle('ScreenSpace.ufo.CartesianPosition', {-3.0, 0.5, -2.000000}, 4.0)",
    "UFO"
  );
end)
