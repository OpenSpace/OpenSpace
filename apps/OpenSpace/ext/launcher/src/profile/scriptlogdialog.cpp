/*****************************************************************************************
 *                                                                                       *
 * OpenSpace                                                                             *
 *                                                                                       *
 * Copyright (c) 2014-2021                                                               *
 *                                                                                       *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this  *
 * software and associated documentation files (the "Software"), to deal in the Software *
 * without restriction, including without limitation the rights to use, copy, modify,    *
 * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to    *
 * permit persons to whom the Software is furnished to do so, subject to the following   *
 * conditions:                                                                           *
 *                                                                                       *
 * The above copyright notice and this permission notice shall be included in all copies *
 * or substantial portions of the Software.                                              *
 *                                                                                       *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,   *
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A         *
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT    *
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF  *
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE  *
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                                         *
 ****************************************************************************************/

#include "profile/scriptlogdialog.h"
#include "profile/line.h"
#include <openspace/engine/configuration.h>
#include <openspace/scene/profile.h>
#include <ghoul/filesystem/filesystem.h>
#include <QDialogButtonBox>
#include <QLabel>
#include <QFile>
#include <QTextStream>
#include <QVBoxLayout>

ScriptlogDialog::ScriptlogDialog(QWidget* parent)
    : QDialog(parent)
{
    setWindowTitle("Scriptlog");
    createWidgets();
 
    QFile file(QString::fromStdString(absPath("${LOGS}/scriptLog.txt").string()));
    if (file.open(QIODevice::ReadOnly | QIODevice::Text)) {
        QTextStream in(&file);
        while (!in.atEnd()) {
            QString line = in.readLine();
            // removing return from a few statments
            // these are usually generated by gui panels
            line.remove(QRegularExpression("^return "));
            if (!line.isEmpty()) {
                _scriptlogList->addItem(line);
            }
        }
    }
}

void ScriptlogDialog::createWidgets() {
    QBoxLayout* layout = new QVBoxLayout(this);
    {
        QLabel* heading = new QLabel("Choose commands from log/scriptLog.txt");
        heading->setObjectName("heading");
        layout->addWidget(heading);
    }

    _scriptlogList = new QListWidget;
    _scriptlogList->setSelectionMode(QAbstractItemView::SelectionMode::MultiSelection);
    layout->addWidget(_scriptlogList);
    
    layout->addWidget(new Line);
    {
        QDialogButtonBox* buttons = new QDialogButtonBox;
        buttons->setStandardButtons(QDialogButtonBox::Save | QDialogButtonBox::Cancel);
        connect(
            buttons, &QDialogButtonBox::accepted,
            this, &ScriptlogDialog::saveChosenScripts
        );
        connect(
            buttons, &QDialogButtonBox::rejected,
            this, &ScriptlogDialog::reject
        );
        layout->addWidget(buttons);
    }
}

void ScriptlogDialog::saveChosenScripts() {
    std::string chosenScripts;
    QList<QListWidgetItem*> itemList = _scriptlogList->selectedItems();
    for (int i = 0; i < itemList.size(); ++i) {
        chosenScripts += itemList.at(i)->text().toStdString();
        if (i < itemList.size()) {
            chosenScripts += "\n";
        }
    }
    emit scriptsSelected(chosenScripts);

    accept();
}
